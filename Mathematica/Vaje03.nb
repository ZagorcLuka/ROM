(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1440869,      28233]
NotebookOptionsPosition[   1429898,      28056]
NotebookOutlinePosition[   1430375,      28074]
CellTagsIndexPosition[   1430332,      28071]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Vaje 3 iz ROM", "Title",
 CellChangeTimes->{{3.8231617505307693`*^9, 3.823161757051238*^9}, 
   3.8231618237866726`*^9, {3.8236744082925386`*^9, 3.823674408573862*^9}, {
   3.8242785525010595`*^9, 
   3.824278567236352*^9}},ExpressionUUID->"fb8fcd06-5c2b-40f9-856a-\
e73d623a187f"],

Cell["9. in 10. 3. 2021", "Text",
 CellChangeTimes->{{3.823161833045583*^9, 3.823161882443583*^9}, {
  3.8236744184403744`*^9, 3.823674424761194*^9}, {3.824278572385481*^9, 
  3.8242785857550697`*^9}},ExpressionUUID->"a51e88ba-1c8b-43b3-a3ec-\
57a91f3fdd04"],

Cell[CellGroupData[{

Cell["Naloga 1", "Section",
 CellChangeTimes->{{3.8231618891351395`*^9, 
  3.82316190190687*^9}},ExpressionUUID->"2ba2c46c-61d3-43a9-803e-\
4fa3d0c38e26"],

Cell["\<\
Naslednje naloge re\[SHacek]i s pomo\[CHacek]jo vnosa z naravnim jezikom \
(brez znanja sintakse Mathematice in brez pomo\[ZHacek]nih ra\[CHacek]unov). \
V vseh primerih se prepri\[CHacek]aj, da je Mathematica razumela tvoj ukaz. \
Glej spodnji primer.\
\>", "Text",
 CellChangeTimes->{{3.824278606060779*^9, 3.8242786895918083`*^9}, {
  3.824278888560747*^9, 3.8242788915809774`*^9}, {3.8242789975121865`*^9, 
  3.82427901034433*^9}},ExpressionUUID->"bd7f36e2-6b14-4e30-b8d6-\
e5450ddb3ecf"],

Cell[CellGroupData[{

Cell["Primer", "Subsection",
 CellChangeTimes->{{3.8242786937992587`*^9, 3.8242787132071357`*^9}, {
  3.8242789028656454`*^9, 
  3.8242789030502114`*^9}},ExpressionUUID->"0b99bd35-4f2a-49eb-8971-\
833816194ada"],

Cell["\<\
Izra\[CHacek]unaj 20. \[SHacek]tevko v decimalnem zapisu \[SHacek]tevila \
1+1/2+1/3+...+1/100.\
\>", "Text",
 CellChangeTimes->{{3.824278790003468*^9, 
  3.8242788561122627`*^9}},ExpressionUUID->"6597dbb4-acaf-482a-a5ae-\
2952be4ce6a5"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "please compute the 20th digit of 1+1/2+1/3+...+1/100", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Output", "8"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}, 
      "ExtrusionOpen" -> True}}, Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods"}, Typeset`pod1$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    SuperscriptBox["20", "\"th\""], 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"20", "\"th\""}]]], 
                    "\" digit\""}, "RowDefault"], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox[
                    TagBox[
                    RowBox[{"1", "+", 
                    FractionBox["1", "2"], "+", 
                    FractionBox["1", "3"], "+", "\"\[CenterEllipsis]\"", "+", 
                    FractionBox["1", "100"]}], HoldForm], HoldForm]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              Global`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Sum", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["moutput", {}, {"8"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["8", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show details", "input" -> "Result__Show details"}, {}]}]}],
    Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "NearByDigits", "numsubpods" -> "1", 
     "position" -> "300", "scanner" -> "NthDigit", "title" -> 
     "Nearby digits"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["\".\"", 
               GrayLevel[0.5], StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["3", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["3", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], "8", 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["3", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["4", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["\"\[Ellipsis]\"", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
    "NthDigit", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.42", 
    "parsetiming" -> "0.935", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP26391cdgi3i9iic87i2e00002e3ge1165592fe15", "host" -> 
    "https://www4d.wolframalpha.com", "server" -> "5", "related" -> 
    "https://www4d.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa26401cdgi3i9iic87i2e0000491c41b5f5259b6c6728076557243023091", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2021, 3, 9, 12, 39, 35.0636592`9.297432130252918}, "Line" -> 1,
     "SessionID" -> 29838564271048567026}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Output", "8"}, Typeset`open$$ = True, 
   Typeset`newq$$ = "please compute the 20th digit of 1+1/2+1/3+...+1/100"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{616., {368., 21.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"3f889d83-4de8-4421-9b2b-5d0e78acc3f9"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.8242787753956847`*^9},ExpressionUUID->"c87b07db-b542-43b4-9d53-\
f23d97c47e47"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Naloge", "Subsection",
 CellChangeTimes->{{3.8242788626612997`*^9, 
  3.8242788980299807`*^9}},ExpressionUUID->"d94104cc-f8a1-470c-9f0e-\
b00aeb39cc88"],

Cell["Dolo\[CHacek]i 443. \[SHacek]tevko v decimalnem zapisu \[SHacek]tevila \
pi.", "Text",
 CellChangeTimes->{{3.82367445232017*^9, 3.823674533161069*^9}, {
  3.8242789123164234`*^9, 
  3.8242789266668806`*^9}},ExpressionUUID->"f45d1f7b-b3f0-4518-b297-\
86515d4da031"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Please compute the 443th digit of Pi.", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "ResourceFunction[\"NthDigit\"][Pi, 443]"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ResourceFunction[\"NthDigit\"][Pi, 443]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    SuperscriptBox["443", "\"rd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"443", "\[InvisibleSpace]", "\"rd\""}]]], 
                    "\" digit\""}, "RowDefault"], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox["\[Pi]", HoldForm]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {
    "title" -> "Result", "scanner" -> "NthDigit", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "(First[Flatten[RealDigits[#1, 10, 1, If[#1 < 1, 1 - #1, \
Ceiling[Log[10, #1]] - #2]]]] & )[Pi, 443]"}], 
       XMLElement["moutput", {}, {"1"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["1", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Nearby digits", "scanner" -> "NthDigit", "id" -> 
     "NearByDigits", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox["\"\[Ellipsis]\"", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["3", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["3", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["3", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["3", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], "1", 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["1", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["4", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["8", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["0", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["4", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["4", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["3", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["6", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["2", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["7", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["4", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["9", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["5", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False], 
              StyleBox["\"\[Ellipsis]\"", 
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "3", "datatypes" -> "NthDigit", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "0.597", "parsetiming" -> "0.382", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP42181dff4hbc4bf9egg800004ee2ca495hg2313g", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "17", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa42191dff4hbc4bf9egg800001egih7a2483e664i3454770973695860617", "version" -> 
    "2.6", "inputstring" -> "Please compute the 443th digit of Pi."}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2023, 3, 2, 14, 51, 18.8506778`9.027901910495224}, "Line" -> 6,
     "SessionID" -> 24284925751544484449}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", 
    "ResourceFunction[\"NthDigit\"][Pi, 443]"}, Typeset`open$$ = True, 
   Typeset`newq$$ = "Please compute the 443th digit of Pi."}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{616., {410., 21.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"c519bb46-143b-4084-ba2f-048d94d819bb"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8867538742753263`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"72d95a4b-9e0a-44bb-ac92-79f3ea7f197c"]
}, Open  ]],

Cell["\<\
Izra\[CHacek]unaj plo\[SHacek]\[CHacek]ino obmo\[CHacek]ja med krivuljama \
f(x)=3x^2+2x+1 in g(x)=4-4x^4.\
\>", "Text",
 CellChangeTimes->{{3.824278934923018*^9, 3.8242789483250437`*^9}, {
  3.8242790294320073`*^9, 3.824279067181547*^9}, {3.8242791289992332`*^9, 
  3.824279136992445*^9}},ExpressionUUID->"9930abba-78cf-458d-bd17-\
19166f4087a6"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Compute the area between two functions f (x) = 3 x^2 + x + 1 and g(x) = 4 \
- 4 (x^4) . ", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "ResourceFunction[\"AreaBetweenCurves\"][{f*x == 3*x^2 + x + 1, g[x] \
== 4 - 4*x^4}, x]"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ResourceFunction[\"AreaBetweenCurves\"][{1 - 2 x + x^2, 6 x - x^2}, \
x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"area between\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center], 
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}], "+", 
                    SuperscriptBox["x", "2"]}], HoldForm]}, {
                    TagBox[
                    RowBox[{
                    RowBox[{"6", " ", "x"}], "-", 
                    SuperscriptBox["x", "2"]}], HoldForm]}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 
                    Automatic], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "ApplicationsOfIntegration", 
     "id" -> "Result", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Integrate[-1 + 8 x - 2 x^2, {x, (4 - Sqrt[14])/2, (4 + \
Sqrt[14])/2}]"}], 
       XMLElement["moutput", {}, {"(14 Sqrt[14])/3"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "-", 
                    SqrtBox["14"]}], ")"}]}], 
                  RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    SqrtBox["14"]}], ")"}]}]], 
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"8", " ", "x"}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["x", "2"]}]}], ")"}], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               FractionBox[
                RowBox[{"14", " ", 
                  SqrtBox["14"]}], "3"], Identity], "\[TildeTilde]", 
              TagBox["17.46106780494506`", Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> "Result__More digits"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Result__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Plot", "scanner" -> "ApplicationsOfIntegration", "id" -> 
     "Plot", "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1:eJztenk01V3bv4RzDB1DlLnzFTKUKKmIfRERhSRzSYhMlSi3TJmSQmXMnClT
RSlDg1MkpUxlqCRzisyZ7uK3W0/HH8+71u9e93qftZ617vX6x7rW3ufa197X
9bn2/n7Whzhy3MiekYGBYetyBoZf/2VGjh88VT9QaSsbbeR3hgR7H+hWUo72
VhqtmViTnckER0KZN11x/FQ5c/HeDtvny6Dhq63TocD2yq1XZPf2XltALbem
vjc+bqo84edzWl9wHlU0+vcwNFVXljjwfY1J/44MS+ou6vkUVtqL73BxfzuO
lOVipoK7b6GPnzlPJKsPo0XN9vvhujWouifMacObfnTVyTSaYbwJxWROm764
2oXWqoZ98DN4h+RsksQCbNtQ2EH7hn38Xag19GIRY1oDKnZxPX/lTC8yKSwS
OpJRhQTUE55von5Gg8ubCkWL7qKNQ3pa68K/Ili+QaS0MQUFW4jp+aqOIIYD
DxT9ahwRy+vb+2mjY4jB50c8H7cLut52Nd35+gSiVVPUOm4moQ+a54ufn5lC
YMfeoDN9Fw0Lg81ruWkUlm11brVIFUoxZWsJYptF6QF6szIyjchhnjR1+eMc
qlVc2PjTuB2RyS+Lta/8iYanLNzflHeh3V4pm28f+4lm055HfPMZQIf3bzGm
iS0iu4uZ8oMZw2i3HgNXzDEGGO4onthUPI42pY6YUo2XwR4P8Q/eT76jUEl0
fNlGRrC6PBGx8dsckjmcMKgsvBxgykaFvWMBfdh7sXQNMxMkr3rmdoSTEWZO
dB0w72SCx3zZvRvvMoGtlprJ0Atm4GBdriVRTQJlgwWJ5mwWGE6Ujn/VxAai
K8z07HxJIMWZ49v/cwUY+VQ06zuQYZVz881tTVwwTvWXjlRnhc/H5Yosknmg
6/SeHgk5Ntg1bWFqkcsLyow+Tjzs7CAlpn90f/4quK6upZPfyw7sTmd7LMv5
wWzT6rDEeg448UZNYoQiBN5mevGf8lZAu9t9n2ljERjeGEb2jadATqbO2k0D
a8D5waGGZwGcUP3FPEJsJwEyj+vuKGzggtMudx1jwsRA+8zwrfWZXDAkHK8b
Or0WBPUe8xhxc8MOESbVE2YSMDlrRez15Yad9rnb+x9Lgsfi4mGPCW4o8n+h
cctQCgqoxuQaax4osLp6+/YbaXj286Zz/TsesK1hcPG5IgsPjQ9S1AX7K2/J
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
Cv8Psb06AA==
                 "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.05]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1HV0FVQcwPHHQBpGd40G6xzZBkh5pFsagxoltSGIglLSEgKHRqUUlFIU
SWmkBVSUDkFAQhppwc89/PHZ994X29n93fdiEpIaJ0ZFIpFk/O1HmeSRSBrr
tBxkPv15k6rEko5DLGAAb1GNONJzmK8YSCuqE89ZljOaLjQiA0f4mkG0pgZl
OccPjKErjcnIURYymDbU5ArrmEQvynGeFYylG02I5hiL+Ii21OIq65lMb8qH
82Al4+jOPXYwi6bcZDPTeZ+H7GYumTjOYobwmL204w7b+IwoZ/6r1uYaG0jl
sSmRp0PZH85b39UH7CKN/RxNoQfCmevLeoFVpLT/RJ+wL8zSvofeZyep7Wdr
cv1Nm3GLLcwIf9bjv2hfHrGHeWTmBEsYSgJ32c7n1OE6G5lKHypwkdWMJ5Hm
3GYrM+lHFk6ylGG0py432MQ03qMil1jDBJJoQVZO8Q3D6UA9KnGZtUykJy3J
xp98ywg6Up/KZOc0yxhJJxpQhRyc4TtG0ZmGvEJOcpGbPOQlH/kpQEEKEUNh
ilCUYhSnBCUpRWnifRbjOG4e0T6kA/Qvslt/EWbHM9av6WIOk86+m05kK3d4
kTfow6f8zBOq0JCuTGAL//IClWlAF8azmds8TyXq83a4Z2ziFs9RkXp0Zhwb
ucmzvB7uMTPZw2MqUJdOjGUDNyhNS3ozg938F+45/ZkXPjek8P/W0Y6MYT3X
KcVgFvAHqb2uhfZiOrt4RHk+ZG648yT3utq6iEOkte+go1nHNUqynJNk9vwg
PUsO6/maT3/XVNpcC+t5zaVLNb8e1Qz6jsboac2q0zSP7tSHlKNI1NPv5ty6
TAvoMc2oH+gZslnP0by6X6O0lp4jp/VCPUga6/Z6iizWH+uPXKUE33OCTJ4b
qF9ygJT2zXQJR0hv31OnsoMHlKUfs9lHMq+pqQmMYi1XKE5TkpjCdu4TT19m
sZeI99fQdoxkDf9QjCYkMplt3COO6rRlBKu5TFEa04NJ/MRdYqlGG4azikvh
vClDVVozjJVcDLPkJV6lFUNZwYUwRwpRMMwozDnchTCTMNMwv3AHwjzCXSF7
mFuYe5hFuEvh3IkOs6UR3cPvdA6xvgf+B9Mv6yk=
                    "]]}]}, {
                    EdgeForm[], 
                    Directive[
                    Hue[0.67, 0.6, 0.6], 
                    Opacity[0.05]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{480, 820, 819, 818}, {821, 543, 823, 
                    822}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[CompressedData["
1:eJwV02WYFWUAhuElFli6UbpDUGDp7pJeRBBUYFHpBenu7pTulg4Jiy6RDmkU
le5uuOfHfZ755vyY65r3nEyR7SOiooWEhCTxEfQUi+hFI8pTgOjEICahxCI2
cQj3RQHCXMflNIvpTWMqUJB4/MUS+vAlFSlEfM6wlL58RSUK8x8bGEkr6pKA
syyjH19TmSL8z0ZG0ZoIEnKO5fSnCVW4w69MoiNFucpPjKYN9UjEeX5kAE2p
yl1+YzKdKMY1NjGGtjxnH3P4jIfsYBrdeMUfzCcxF1jBQN5yiGY8ZQ+zgj2M
dUyrcY/fgz3cm6LBkEeC962d9SUHCHOeF2yoJ4J3rsX1OpuDTZ3H6jsOB1s6
t9MX7A+2dp4b/A70uNbnETuZHjzW/aPandccZAFJuMhKBhHJM/Yym0+5zzZ+
oAsluMEWxhHF5zxmFzPoQVIusYrBNKc6D9jOVLpSkptsZTztaUAyLrOaIXxD
DUpxi5+ZQAcakpy/WcNQvqUmpUnBP6xlGN9RizKk5ArrGE4LalOWVHzAh6Qm
DWlJR3oykJFMZCYLWclGdnKQk1x8RGH/xSLkdp2Hj/mEvOQjP/+ynhG0pA7l
uM0vTOR7vuAJu5lJT97wJwsJtflJTaDh+h6LOIKN
                    "]]}, Annotation[#, "Charting`Private`Tag$4490473#1"]& ], 
                   TagBox[{
                    Directive[
                    Opacity[0]], 
                    LineBox[CompressedData["
1:eJwV1HesjXcYwPHjXhe1rtFrc6+9SewtQVF7r4Tae4/EJrFnCdoisUmsRIjV
okWNovbee++9+fz++Jzv88t5T3LO+7w5OTv2a9I3USQSifFynVLRkUhCVCTS
29yY1MSShrSkIz0/EkcGMpKJzGQhK9nITg7iSSAn99nMONpSjRLk4gFbGE87
qlOS3DxkKxP4hRrhu/KOf5lDH5qQh0dsYyLt+YnSvGcfcwk/vCl5ecx2JtGB
muGmuA//6yKGUoYP7Gce/WhGPp7wJ5PpSC0S+fxRXcwwyvKRA/xGf1K65oKu
ozlJnE/pCkaH++58RTeSn6f8xZSwC+9d0078YD6rq8M+zHe0NlHmY2EnuiTs
TW/q8LBb86WwI90Q9qf3wv3WcvqJg2Gnzr+HveuNsEcdoKn0Ytizrg/PgN4N
u9QWmlRPh2dBV4ZnRW/rmPAsma/qJgrwjB1MpTPJvX9O1/Az0c7HdSkjKM9n
/uMPBtKSZK47o6sYS0Ges5NpdKEOiV13Qpcxkgp84RDzGUQrCvGCXUynK3Wp
yFcOs4DBtKYwL/mbGXSjHpUowiv+YSbdqU9livKa3fxKDxpQhWK8YQ+z6ElD
qvKNIyxkCG0ozlv2MptepPB7z+taGhHjfFKXE2e+paOINV/W0v4H4s3fAWi7
e4Y=
                    "]]}, Annotation[#, "Charting`Private`Tag$4490473#2"]& ], 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    LineBox[CompressedData["
1:eJwV0lWgVUUYgNHDpetKSYN0KXFBujulQZG+IKh0dwpIdyPdLSWdSquASBh0
Kt0daz+s8838e87TTPrIDrXbRwmFQuF+MoWFQs85yBz68RX1yUwWspKN7OTg
Yz4hJ7nITR4iyEs+PiU/BShIIQpThKIUozglKMkLDjGX/rTic0rxksPMYwCt
+YLSvOII8xnI1zQgZtRQ6LSuZjRdKcNrjrKAQXzDl8Ry/oyuYQzdKMsbfmUh
g/mWBM5e0J+YQkNim53VtYylO+V4y28s4jvakNDZi7qZqTQijtlf+iPjSGX/
v+6lBx/aX9XtzCSt/R39hfK843cWk963+zqEFNY3dXdwn9aPtS2JrC8F96lb
NKM+1Gmksb4d3K/+HNy/Pg3uWBtrXP07eA+6TjPog+At6HhNrbeCN6L7gjek
T4J3oj01qV4L3pHu0Ez6SGfxkfVd3U8FQvbHdAlDSWn/n+6hHYntL+tWptOE
eGb/6Hom0ItkZtd1Jz9QkShmx3Upw2hPErMruo0ZNCW+2b+6gYn0phJh5id0
Gd/TgWaEm5/TjUyiD5WJav6HLmc4HWlOFaL5dlJXMIJORFKV6L79qSsZSWda
UI3PqE4NalKL2tShLjH895SuYhRdaMkH5ud1E5PpS3KzG7qL2aSzv6cHyGb9
TCO0nr4HbOaF5A==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$4490473#3"]& ]}}], {}}, {
               GridLines -> Dynamic[
                  Map[{{#, 
                    GrayLevel[0.7]}}& , 
                   MousePosition[{"Graphics", Graphics}, None]]], 
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{-5., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {10., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {15., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-10., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-9., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-8., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-7., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-6., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-4., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-3., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-2., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {9., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {11., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {12., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {13., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {14., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {16., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {17., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {18., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {19., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {20., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.6, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.4, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.2, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0.2, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0.4, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0.6, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0.8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.2, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.4, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.6, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.2, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.4, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.6, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.2, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.4, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.6, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.2, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.4, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.6, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {None, None}, 
                DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> 
                True, ImagePadding -> All, DisplayFunction -> Identity, 
                AspectRatio -> 1, Axes -> {True, True}, AxesLabel -> {
                  FormBox[
                   TagBox["x", HoldForm], TraditionalForm], 
                  FormBox["\"\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
                AxesStyle -> Directive[
                  AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                DisplayFunction :> Identity, 
                Frame -> {{False, False}, {False, False}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  AbsoluteThickness[0.2]], 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {None, None}, 
                GridLinesStyle -> {
                  GrayLevel[0.85], 
                  GrayLevel[0.9]}, ImageSize -> 330., 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultMeshStyle" -> PointSize[Medium], 
                  "PointSizeFunction" -> "SmallPointSize", "ScalingFunctions" -> 
                  None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                PlotRange -> {{-0.712701605411107, 
                 4.712701605411107}, {-6.6409838346661285`, 
                 15.64098385132115}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}}], 
              TagBox[
               GridBox[{{
                  GraphicsBox[{
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, ImageSize -> 
                    NCache[
                    Rational[143, 10], 14.3], 
                    BaselinePosition -> (Center -> Center)}], 
                  StyleBox[
                   TagBox[
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "x"}], "+", 
                    SuperscriptBox["x", "2"]}], HoldForm], {
                   FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                  GraphicsBox[{
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, ImageSize -> 
                    NCache[
                    Rational[143, 10], 14.3], 
                    BaselinePosition -> (Center -> Center)}], 
                  StyleBox[
                   TagBox[
                    RowBox[{
                    RowBox[{"6", " ", "x"}], "-", 
                    SuperscriptBox["x", "2"]}], HoldForm], {
                   FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.3}}, "Rows" -> {{0.3}}}],
                "Grid"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Right", FontFamily -> "Roboto", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "3"}, {
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "template" -> "curve 1:${field}", "count" -> 
        "1", "pulldown" -> "false", "current" -> "1", "default" -> 
        "{\"F\", \"AreaBetweenCurvesCalculator\", \"f1\"} -> \"1 - 2 x + \
x^2\""}, {
        XMLElement[
        "value", {
         "valid" -> "true", "name" -> "AreaBetweenCurvesCalculator.f1", 
          "desc" -> "1 - 2 x + x^2", "input" -> 
          "{\"F\", \"AreaBetweenCurvesCalculator\", \"f1\"} -> \"1 - 2 x + \
x^2\""}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "template" -> "curve 2:${field}", "count" -> 
        "1", "pulldown" -> "false", "current" -> "1", "default" -> 
        "{\"F\", \"AreaBetweenCurvesCalculator\", \"f2\"} -> \"6 x - x^2\""}, {
        XMLElement[
        "value", {
         "valid" -> "true", "name" -> "AreaBetweenCurvesCalculator.f2", 
          "desc" -> "6 x - x^2", "input" -> 
          "{\"F\", \"AreaBetweenCurvesCalculator\", \"f2\"} -> \"6 x - \
x^2\""}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariableInclude", "template" -> 
        "Also include: ${desc}", "count" -> "1", "pulldown" -> "false", 
        "default" -> 
        "{\"FVarOpt\", \"1\"} -> {{}, {{{\"AreaBetweenCurvesCalculator\", \
\"variable\"}, {\"AreaBetweenCurvesCalculator\", \"rangestart\"}, \
{\"AreaBetweenCurvesCalculator\", \"rangeend\"}}}, {}}"}, {
        XMLElement[
        "value", {
         "name" -> 
          "AreaBetweenCurvesCalculator.variable,AreaBetweenCurvesCalculator.\
rangestart,AreaBetweenCurvesCalculator.rangeend", "desc" -> "end points", 
          "input" -> 
          "{\"FVarOpt\"} -> {{\"AreaBetweenCurvesCalculator\", \"variable\"}, \
{\"AreaBetweenCurvesCalculator\", \"rangestart\"}, \
{\"AreaBetweenCurvesCalculator\", \"rangeend\"}}"}, {}]}]}], 
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "Compute the area between two functions", "score" -> 
        "0.5135135135135135", "level" -> "medium"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "3", "datatypes" -> "AreaBetweenCurves", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "5.9110000000000005", "parsetiming" -> 
    "0.357", "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP45791d188i1d5gfa4i46000051eib447f997g4di", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "19", "related" -> "", 
    "version" -> "2.6", "inputstring" -> 
    "Compute the area between two functions"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2023, 3, 2, 14, 54, 14.3821772`8.910399586282397}, "Line" -> 7,
     "SessionID" -> 24284925751544484449}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", 
    "ResourceFunction[\"AreaBetweenCurves\"][{f*x == 3*x^2 + x + 1, g[x] == 4 \
- 4*x^4}, x]"}, Typeset`open$$ = True, Typeset`newq$$ = 
   "Compute the area between two functions f (x) = 3 x^2 + x + 1 and g(x) = 4 \
- 4 (x^4) . "}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{616., {1063., 21.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"80f44e18-2399-409f-917c-c0d8e2095471"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    DynamicModuleBox[{Typeset`open = False}, 
     FrameBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                
                FontColor->RGBColor[
                 0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.6538461538461539 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["AreaBetweenCurves", "ResourceFunctionLabel"], " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->Rational[12, 13] Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}], 
          ItemBox[
           PaneBox[
            TogglerBox[Dynamic[Typeset`open], {True->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeCloser"],
              
              ImageSizeCache->{
               12.100000000000001`, {2., 10.100000000000001`}}], False->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeOpener"],
              
              ImageSizeCache->{
               12.100000000000001`, {2., 10.100000000000001`}}]},
             Appearance->None,
             BaselinePosition->Baseline,
             ContentPadding->False,
             FrameMargins->0],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{1, 1}, {0, 0}}],
           Frame->{{
              RGBColor[
              0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
               0.5], False}, {False, False}}]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
       GridBox[{
         {GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  AdjustmentBox[
                   
                   StyleBox["\<\"[\[FilledSmallSquare]]\"\>", 
                    "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["AreaBetweenCurves", "ResourceFunctionLabel"], 
                   " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"]], False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"]]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
         {
          StyleBox[
           PaneBox[GridBox[{
              {
               RowBox[{
                TagBox["\<\"Version (latest): \"\>",
                 "IconizedLabel"], " ", 
                TagBox["\<\"5.3.0\"\>",
                 "IconizedItem"]}]},
              {
               TagBox[
                
                TemplateBox[{
                 "\"Documentation \[RightGuillemet]\"", 
                  "https://resources.wolframcloud.com/FunctionRepository/\
resources/abc37cb4-4b69-4bcd-94ba-ec92af70b0da/"},
                 "HyperlinkURL"],
                "IconizedItem"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
           FontFamily->"Roboto",
           FontSize->11]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
             GrayLevel[0.8]}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open],
       BaselinePosition->Baseline,
       ImageSize->Automatic],
      Background->RGBColor[
       0.9686274509803922, 0.9764705882352941, 0.984313725490196],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 0}},
      FrameStyle->RGBColor[
       0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
      RoundingRadius->4]],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "AreaBetweenCurves"},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["AreaBetweenCurves"],
   Selectable->False], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f", " ", "x"}], "\[Equal]", 
      RowBox[{"1", "+", "x", "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "2"]}]}]}], ",", 
     RowBox[{
      RowBox[{"g", "[", "x", "]"}], "\[Equal]", 
      RowBox[{"4", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "4"]}]}]}]}], "}"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.8867540331453667`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"a55a4fca-1ddf-491b-9585-93e87b275f4a"]
}, Open  ]],

Cell["Izra\[CHacek]unaj f(3), kjer je f(x)=1+1/x.", "Text",
 CellChangeTimes->{{3.824279221136812*^9, 3.824279248408711*^9}, {
  3.82427946829105*^9, 3.824279470231556*^9}, {3.8242795117979584`*^9, 
  3.8242795119608803`*^9}},ExpressionUUID->"956fddda-adc3-4d90-ad08-\
0bd467b00fa6"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Compute f(3), where f(x)=1+1/x.", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Plot", "Plot", 1, 1, "Content"}, "ExtrusionOpen" -> 
      True, "Formats" -> {
       "cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"ReplaceAll[1 + 1/x, {x -> 3}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               TagBox[
                RowBox[{"1", "+", 
                  FractionBox["1", "x"]}], HoldForm], 
               StyleBox["\" where \"", {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], 
               RowBox[{
                 TagBox["x", HoldForm], "\[LongEqual]", 
                 TagBox["3", HoldForm]}]}, "RowDefault"], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "EvaluateAt", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"1 + 1/x /. {x -> 3}"}], 
       XMLElement["moutput", {}, {"4/3"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox["4", "3"], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate form", "input" -> 
         "Result__Approximate form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Result__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Plot", "scanner" -> "Plot", "id" -> "Plot", "position" -> 
     "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot[1 + 1/x, {x, -48.5, 54.5}, Epilog -> Point[{3, 4/3}]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max11444$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`min11443$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min11443$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max11444$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$5182690$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min11443$\
5182695$$ = 0, 
                 CalculateUtilities`GraphicsUtilities`Private`max11444$\
5182696$$ = 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max11444$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`\
min11443$$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$5182690$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min11443$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min11443$\
5182695$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max11444$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max11444$\
5182696$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$5182669[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][
                    1 + $CellContext`x^(-1), {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min11443$$], 
                    (
                    Piecewise[{{
                    3. + 55.05581583395932 Tan[1.5040801783846716` #], # < 
                    0}}, 3. + 
                    55.05581583395932 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min11443$$], \
-48.499999999999915`], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min11443$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max11444$$]], 
                    (
                    Piecewise[{{
                    3. + 55.05581583395932 Tan[1.5040801783846716` #], # < 
                    0}}, 3. + 55.05581583395932 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min11443$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max11444$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min11443$$ + 
                    0.10299999999999983`, 
                    CalculateUtilities`GraphicsUtilities`Private`max11444$$]],
                     54.499999999999915`]}, 
                    LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    PlotStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    AbsoluteThickness[1]]}}, Epilog -> {
                    AbsolutePointSize[5], 
                    Hue[0], 
                    Point[{3, 
                    Rational[4, 3]}]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min11443$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max11444$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$5182669]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$5182669[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$5182669[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/APkPiMtPH+\
AQnoYEwaUJLyvbfYSSxcO9juNvjz4LObpFm7SjEdoCn9cKovzeO755673oMDGaX9Xq+\
nL1rzQXKSXsHTfWuGclrImSDvjgtFtWZSpBfw2XVrYmp2KIcflHjfZWveSzUF48+\
v8H3gyYyDoV8N48wwqie7CoqcJbr2jBQ7tD+ZcJkAZz/pw6dbL7afPX/\
pYTCWERhDldCP20IWuQJN0x4CXbLmLQfxzR/vlcdPM85j+n1GRUL1HesdKyAWRgrgmE/\
wreebqZuYmAFBQJEzp8nJc9j2Am0UE9mYTgt843SyttoCg8q05+ZWyc06Bfnwr+\
IDGbuYvMcl7c6OwLAwzhl9J2X1z7kb4Pl1W3glj1YTh/\
m94cgbGHZI9TKdj1rXyTNSda2Lfs7VWc2XjQZ5+pSp/\
5f2mTbLYWy3DYNOD2yNV2tvGf5JW3hZYNfPxX3bms/eUQKuGg6V4D5KMuPzKJopD7xE26erC+\
vwGDcqvmN0hlSwwolsnGW/uP64W4HXm0KMtZtsQDqingERLah1EcftDsuYGeagILHA8+\
v6ZZONZR1KwJ3ta88EYXaAeULWLU9o9tKFuoNJ8i9/VNxKLieaDHnfE4ZmVK0V/\
TWsj7LkCjKWgZHEeEFTr8EcVkmNQAXLflCCxAUIhpDsl/24b/\
7hYiWQql2F6lKexYErzXF4Ev2ywPtUZCZv7tiBoyu4bTGbSB7VqotYmi5Om80x3W8y3bihOdBDSQgt\
SfhA7zaFblP4q5vC0h7crQndmtCtCd2a0K0J/++a4CLGf6XfINm4zg=="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "3", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.98", "parsetiming" -> "0.675", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP79591h0e24cd854i2cid00002e5742849a6d2fda", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "6", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa79601h0e24cd854i2cid00005hccfb2b61d8h5ia7167914177805443390", "version" -> 
    "2.6", "inputstring" -> "Compute f(3), where f(x)=1+1/x."}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2023, 3, 2, 14, 55, 31.3505275`9.248819757218623}, "Line" -> 8,
     "SessionID" -> 24284925751544484449}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Plot", "Plot", 1, 1, "Content"}, Typeset`open$$ = True, Typeset`newq$$ = 
   "Compute f(3), where f(x)=1+1/x."}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{616., {723., 21.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"00531f5f-d606-4f0e-bb5f-c83397580fe1"],

Cell[BoxData[
 FractionBox["4", "3"]], "Output",
 CellChangeTimes->{3.886754117649209*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"9b37bac9-f3ac-439e-8592-9548174573df"]
}, Open  ]],

Cell["\<\
Izra\[CHacek]unaj obseg elipse s polosema 4 in 3. Ugotovi pribli\[ZHacek]no \
vrednost.\
\>", "Text",
 CellChangeTimes->{{3.824279529171213*^9, 3.824279558645338*^9}, {
  3.824279718775467*^9, 
  3.8242797302444415`*^9}},ExpressionUUID->"983235d9-2199-4320-aa41-\
4140786695b3"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Compute the perimeter of an ellipse with semi-axis lenghts 4 and 3. \
Figure out the aproximate value.", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Output", "22.1035"}, 
      "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ResourceFunction[\"EllipseProperties\"][Association[\"\
SemiAxisLengths\" -> {4, 3.}], {x, y}][\"Circumference\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"ellipse\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {$CellContext`GeometryData, "Ellipse"}]], 
                    Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TemplateBox[{
                    StyleBox[
                    TagBox["\"semi\[Hyphen]axis lengths\"", Identity], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                    StyleBox[
                    RowBox[{
                    TagBox["4", HoldForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TagBox["3", HoldForm]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0]}, "RowDefault"], 
                    TagBox["\"circumference\"", Identity]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Geometry", 
     "title" -> "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["moutput", {}, {"22.1035"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["22.103492160709504`", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "VisualRepresentation", "numsubpods" -> 
     "1", "position" -> "300", "scanner" -> "Geometry", "title" -> 
     "Visual representation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Circle[{0, 0}, {4, 3.}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{
               Directive[
                AbsoluteThickness[1], 
                RGBColor[0.24720000000000014`, 0.24, 0.6], 
                FaceForm[
                 RGBColor[
                  NCache[{1, 
                    Rational[254, 255], 
                    Rational[209, 255]}, {
                   1, 0.996078431372549, 0.8196078431372549}]]]], {
                CircleBox[{0, 0}, {4, 3.}]}}, {{}, {}}, {{{
                 GrayLevel[0.6], 
                 LineBox[{{0, 0}, {4., 0.}}], 
                 LineBox[{{0, 0}, {0., 3.}}]}, 
                InsetBox[
                 FormBox["4", TraditionalForm], {2., 0.}, {0., 1.5}], 
                InsetBox[
                 FormBox["3", TraditionalForm], {0., 1.5}, {-1.5, 0.}]}}}, {
             AspectRatio -> 0.75, Axes -> False, AxesLabel -> {
                FormBox["x", TraditionalForm], 
                FormBox["y", TraditionalForm]}, 
              ImageSize -> {220., {355.96747752497686`}}, 
              PlotRange -> {{-4., 4.}, {-3., 3.}}, PlotRangePadding -> 
              Scaled[0.04], Ticks -> False}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Properties", "numsubpods" -> "1", 
     "position" -> "400", "scanner" -> "Geometry", "title" -> 
     "Properties of ellipse"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"foci\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    RowBox[{
                    SubscriptBox["x", "0"], "+", "2.6457513110645907`"}], 
                    RowBox[{
                    SubscriptBox["y", "0"], "+", "0"}]}, "RowWithSeparators"],
                     "\[NoBreak]", ")"}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    RowBox[{
                    SubscriptBox["x", "0"], "-", "2.6457513110645907`"}], 
                    RowBox[{
                    SubscriptBox["y", "0"], "+", "0"}]}, "RowWithSeparators"],
                     "\[NoBreak]", ")"}]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0]}, {
                    TagBox[
                    PaneBox[
                    "\"vertices\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    RowBox[{
                    SubscriptBox["x", "0"], "+", "4"}], 
                    RowBox[{
                    SubscriptBox["y", "0"], "+", "0"}]}, "RowWithSeparators"],
                     "\[NoBreak]", ")"}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    RowBox[{
                    SubscriptBox["x", "0"], "-", "4"}], 
                    RowBox[{
                    SubscriptBox["y", "0"], "+", "0"}]}, "RowWithSeparators"],
                     "\[NoBreak]", ")"}]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0]}, {
                    TagBox[
                    PaneBox[
                    "\"covertices\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    RowBox[{
                    SubscriptBox["x", "0"], "+", "0"}], 
                    RowBox[{
                    SubscriptBox["y", "0"], "+", "3"}]}, "RowWithSeparators"],
                     "\[NoBreak]", ")"}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    RowBox[{
                    SubscriptBox["x", "0"], "+", "0"}], 
                    RowBox[{
                    SubscriptBox["y", "0"], "-", "3"}]}, "RowWithSeparators"],
                     "\[NoBreak]", ")"}]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0]}, {
                    TagBox[
                    PaneBox[
                    "\"semimajor axis length\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], "4"}, {
                    TagBox[
                    PaneBox[
                    "\"semiminor axis length\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], "3"}, {
                    TagBox[
                    PaneBox[
                    "\"area enclosed\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    "37.69911184307752`"}, {
                    TagBox[
                    PaneBox[
                    "\"circumference\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    "22.103492160709504`"}, {
                    TagBox[
                    PaneBox[
                    "\"focal parameter\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    "3.401680257083045`"}, {
                    TagBox[
                    PaneBox[
                    "\"eccentricity\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    "0.6614378277661477`"}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 RowBox[{"\"(\"", "\[NoBreak]", 
                   TemplateBox[{"\"assuming\"", "\" \"", 
                    TemplateBox[{"\"center\"", "\" \"", 
                    RowBox[{"(", "\[NoBreak]", 
                    TemplateBox[{",", "\",\"", 
                    SubscriptBox["x", "0"], 
                    SubscriptBox["y", "0"]}, "RowWithSeparators"], 
                    "\[NoBreak]", ")"}]}, "RowDefault"]}, "RowDefault"], 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "Properties__More"}, {}]}]}], 
   Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
   Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
   Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
   Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
   Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
   Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
   Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
   Typeset`pod33$$, Typeset`pod34$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "spellcheck", {
       "word" -> "lenghts", "suggestion" -> "lengths", "text" -> 
        "Interpreting \"lenghts\" as \"lengths\""}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "4", "datatypes" -> "", "timedout" -> "Identity", 
     "timedoutpods" -> "", "timing" -> "4.072", "parsetiming" -> "1.443", 
     "parsetimedout" -> "false", "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa72814b929c42e0ic72i000057652ee7a6ibb0c68350669649384844499", "id" -> 
     "MSP72914b929c42e0ic72i000051h7504g2e0caa57", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "16", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa73014b929c42e0ic72i00004301419i722h89d18350669649384844499", "version" -> 
     "2.6", "inputstring" -> 
     "Compute the perimeter of an ellipse with semi-axis lenghts 4 and 3. \
Figure out the aproximate value."}, {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "0", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
     "", "timing" -> "1.7710000000000001", "parsetimedout" -> "false", 
     "recalculate" -> "", "id" -> "", "parseidserver" -> "15", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "15", "related" -> "", 
     "version" -> "2.6", "inputstring" -> 
     "Compute the perimeter of an ellipse with semi-axis lenghts 4 and 3. \
Figure out the aproximate value."}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2023, 3, 2, 15, 6, 23.1171905`9.116509978299478}, "Line" -> 14,
     "SessionID" -> 24284925751544484449}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
   19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}, 
   Typeset`chosen$$ = {"Result", "Result", 1, 1, "Output", "22.1035"}, 
   Typeset`open$$ = True, Typeset`newq$$ = 
   "Compute the perimeter of an ellipse with semi-axis lenghts 4 and 3. \
Figure out the aproximate value."}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{616., {1067., 21.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$}, Typeset`chosen$$, Typeset`open$$,
          Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa72814b929c42e0ic72i000057652ee7a6ibb0c68350669649384844499", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[14]:=",ExpressionUUID->"74edeb2f-a421-4a2a-bf8b-61197696c8b8"],

Cell[BoxData["22.1035`"], "Output",
 CellChangeTimes->{3.8867546719527793`*^9, 3.8867547832421875`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"dcd2a53f-db78-4422-add4-ac52883fdbbe"]
}, Open  ]],

Cell["\<\
Matej ima 512 jabolk, Jana pa 1024 jabolk. Koliko jabolk imata Matej in Jana \
skupaj?\
\>", "Text",
 CellChangeTimes->{{3.8242797559107485`*^9, 3.8242798054509077`*^9}, {
  3.824279994366373*^9, 
  3.824280011871313*^9}},ExpressionUUID->"526497e1-2595-4dbd-a188-\
6ea12cdef481"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Matej has 512 apples, Jane has 1024 apples. How much apples do Matej and \
Jane  have together?", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {"Result", "Result", 1, 1, "Content"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "MathWordProblems", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    
                    TemplateBox[{"\"Matej has \"", "512", "\" apples.\""}, 
                    "RowDefault"], {LineIndent -> 0, 
                    LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {None, None}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {1 -> None, -1 -> None}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                    AllowScriptLevelChange -> False], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]]}, {
                    TagBox[
                    GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    
                    TemplateBox[{"\"Jane has \"", "1024", "\" apples.\""}, 
                    "RowDefault"], {LineIndent -> 0, 
                    LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {None, None}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {1 -> None, -1 -> None}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                    AllowScriptLevelChange -> False], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]]}, {
                    TagBox[
                    GridBox[{{
                    PaneBox[
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"How many apples do Jane and Matej have?\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {None, None}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {1 -> None, -1 -> None}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                    AllowScriptLevelChange -> False], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> Center, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.3}}}], 
                    "Column"], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                    BaselinePosition -> Center]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  ColumnsEqual -> False, RowsEqual -> False, 
                  GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                  AllowScriptLevelChange -> False], 
                 $CellContext`TagBoxWrapper["Separator" -> " | "]]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> 
     "MathWordProblems", "title" -> "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  TemplateBox[{"\"Jane and Matej\"", 
                    StyleBox["\" have\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", "1536", "\" apples\""}, "RowDefault"], 
                  StyleBox["\".\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Calculations", "numsubpods" -> "1", 
     "position" -> "300", "scanner" -> "MathWordProblems", "title" -> 
     "Calculation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox["\"\"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TemplateBox[{2}, "Spacer1"], 
              
              TemplateBox[{
               "1024", "\" + \"", "512", "\" \[LongEqual] \"", "1536"}, 
               "RowDefault"]}, "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "3", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.287", "parsetiming" -> "1.041", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP1569137ai1eeb2e973fd00003785h4eei1gh4683", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "8", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa1570137ai1eeb2e973fd00000cc3gafhda5375g53172133347439184749", "version" -> 
    "2.6", "inputstring" -> 
    "Matej has 512 apples, Jane has 1024 apples. How much apples do Matej and \
Jane  have together"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2023, 3, 2, 15, 8, 51.9725533`9.46834890335873}, "Line" -> 16, 
    "SessionID" -> 24284925751544484449}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Content"}, Typeset`open$$ = False, 
   Typeset`newq$$ = 
   "Matej has 512 apples, Jane has 1024 apples. How much apples do Matej and \
Jane  have together?"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{449.107421925012, {54., 21.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[16]:=",ExpressionUUID->"49d320d0-917b-43f6-af20-f732a1bc8d90"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   StyleBox[
    FormBox[
     StyleBox[GridBox[{
        {
         TemplateBox[{
           TemplateBox[{"\"Jane and Matej\"", 
             StyleBox["\" have\"", {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], "\" \"", "1536", "\" apples\""}, 
            "RowDefault"], 
           StyleBox["\".\"", {
             GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
             LineIndent -> 0}]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
     TraditionalForm], "Output",
    CellSize->{550, Automatic},
    AutoStyleOptions->{"HighlightFormattingErrors"->False},
    ScriptLevel->0,
    NumberPoint->".",
    RenderingOptions->{"3DRenderingMethod"->"BSPTreeOrDepthBuffer"},
    FontFamily->"Times",
    FontSize->14,
    Background->None,
    GraphicsBoxOptions->{DefaultAxesStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsAxes"],
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics"},
    DefaultFrameStyle->Directive[
      GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 1, 
      "GraphicsFrame"],
    DefaultFrameTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"],
    DefaultTicksStyle->Directive[
     FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]},
    Graphics3DBoxOptions->{
    DefaultBaseStyle->{FontFamily -> "Times", "Graphics3D"}}],
   BaseStyle->{Plain},
   FrameMargins->10,
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False],
  WolframAlphaResult[
  "Matej has 512 apples, Jane has 1024 apples. How much apples do Matej and \
Jane  have together?", {{"Result", 1}, "Content"}]]], "Output",
 CellChangeTimes->{3.8867549340229864`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"a9b0b7e1-289e-4251-86b0-0149a08478db"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886754802346695*^9, 
  3.8867548185084467`*^9}},ExpressionUUID->"19f05d1f-138d-4fbb-96ae-\
86c700a0c8ff"],

Cell["\<\
Ali je 1009 pra\[SHacek]tevilo? Izra\[CHacek]unaj vsoto \
1/2+1/3+1/5+1/7+1/11+...+1/1009. Kaj predstavlja ta vsota?\
\>", "Text",
 CellChangeTimes->{{3.824280056484812*^9, 3.8242801036171646`*^9}, {
  3.8242801715842295`*^9, 3.8242801903790665`*^9}, {3.824280231570858*^9, 
  3.824280231771147*^9}},ExpressionUUID->"4263f19c-abbb-4aff-bc8a-\
2438bca4c932"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "Is 1009 a prime number?", Typeset`newq$$ = 
   "Is 1009 a prime number?", Typeset`chosen$$ = "PrimeQ[1009]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 
                 ImageSizeCache->{
                  12.100000000000001`, {4., 8.100000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 
                 ImageSizeCache->{
                  12.100000000000001`, {4., 8.100000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Is 1009 a prime number?", 
                  Defer[
                   PrimeQ[1009]], "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"PrimeQ", "[", "1009", "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"PrimeQ", "[", "1009", "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"PrimeQ", "[", "1009", "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Is 1009 a prime number?", 
                    Defer[
                    PrimeQ[1009]], "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"PrimeQ", "[", "1009", "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"PrimeQ", "[", "1009", "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"PrimeQ", "[", "1009", "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[2]:=",ExpressionUUID->"a15f16a1-2cb7-4336-9ae6-702a3bb3e9ab"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8867555188769307`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"c3e347e0-01a7-4a6a-9d9c-5d824f795f57"]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "Calculate the sum: 1/2+1/3+1/5+1/7+1/11+...+1/1009", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "ResourceFunction[\"SequenceToSum\"][{2^(-1), 3^(-1), 5^(-1), 7^(-1), \
11^(-1), \[Ellipsis], 1009^(-1)}, n]"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Sum", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ResourceFunction[\"SequenceToSum\"][{2^(-1), 3^(-1), 5^(-1), 7^(-1), \
11^(-1), \[Ellipsis], 1009^(-1)}, n]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              RowBox[{
                FractionBox["1", "2"], "+", 
                FractionBox["1", "3"], "+", 
                FractionBox["1", "5"], "+", 
                FractionBox["1", "7"], "+", 
                FractionBox["1", "11"], "+", "\"\[CenterEllipsis]\"", "+", 
                FractionBox["1", "1009"]}], HoldForm], HoldForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Sum", "scanner" -> "Sum", "id" -> "Result", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Sum[Prime[n]^(-1), {n, 1, 169}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                UnderoverscriptBox["\[Sum]", 
                 RowBox[{"n", "=", "1"}], "169"], 
                FractionBox["1", 
                 TemplateBox[{"n"}, "Prime", SyntaxForm -> SubscriptBox]]}], 
              "\[LongEqual]", 
              FractionBox[
              "434682790431151367355710376613137490669153530403926955315629448\
337848964418399628885638071385914874312235307091802898276131226809467146667066\
439959816621919571939288487790835507385504582123470239511290981355046825793024\
309557705132673598167836017144594317143542024150518344080347578580085422282270\
247404010035688961082130849531800730748141140832186144167940960631552133425780\
98857516658609888185003779963936631319962303", 
               "19766653710804075182143870771990238475539088142104672537897548\
776929384313227289497808619213628587662490595625147474943321532235492742204128\
846913537770322864572995974935654100594289056885746177674106727111011492167293\
600757722582873710083333409221248630824126186603003458015947013676475012954103\
807759699698139884769988141115940629691053820740641161140263635520790129447288\
872867072881843138566340347306438762146043190"]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "p_n is the nth prime number"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Prime.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/NumberTheoryFunctions/Prime",
            "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/PrimeNumber.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Decimal approximation", "scanner" -> "Sum", "id" -> 
     "DecimalApproximation", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "N[4346827904311513673557103766131374906691535304039269553156294483378\
489644183996288856380713859148743122353070918028982761312268094671466670664399\
598166219195719392884877908355073855045821234702395112909813550468257930243095\
577051326735981678360171445943171435420241505183440803475785800854222822702474\
040100356889610821308495318007307481411408321861441679409606315521334257809885\
7516658609888185003779963936631319962303/\
197666537108040751821438707719902384755390881421046725378975487769293843132272\
894978086192136285876624905956251474749433215322354927422041288469135377703228\
645729959749356541005942890568857461776741067271110114921672936007577225828737\
100833334092212486308241261866030034580159470136764750129541038077596996981398\
847699881411159406296910538207406411611402636355207901294472888728670728818431\
38566340347306438762146043190, 79]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                  "\"2.1990712074525900192891705448359734409671881741272823351\
198731602\[Ellipsis]\"", LineIndent -> 0.54, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"], FrameMargins -> {{0, 10}, {0, 0}}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More digits", "input" -> 
         "DecimalApproximation__More digits"}, {}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Partial sums", "scanner" -> "Sum", "id" -> 
     "PartialSums", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLinePlot[Accumulate[Table[Prime[n]^(-1), {n, 1, 169}]]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, {{{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.009166666666666668], 
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]], 
                 LineBox[CompressedData["
1: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
9xJfjZbjx8xO59H8CUCxc+G3+7n4FxLbVSI=
                  "]]}}, {{
                 Directive[
                  PointSize[0.009166666666666668], 
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]]}}, {{
                 Directive[
                  PointSize[0.009166666666666668], 
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]]}, {}}, {{
                 Directive[
                  PointSize[0.009166666666666668], 
                  RGBColor[0.24720000000000014`, 0.24, 0.6], 
                  AbsoluteThickness[1]]}, {}}}, {{}, {}}}, {
             DisplayFunction -> Identity, DisplayFunction -> Identity, 
              AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {
                FormBox["n", TraditionalForm], 
                FormBox[
                 SubscriptBox["\"S\"", "n"], TraditionalForm]}, 
              AxesOrigin -> {1., 0.}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              FrameTicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10], 
              GridLines -> {None, None}, GridLinesStyle -> Automatic, 
              ImageSize -> 220., 
              LabelStyle -> {FontSize -> 10, FontFamily -> "Roboto"}, 
              Method -> {
               "OptimizePlotMarkers" -> True, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0, 169.}, {0., 2.19907120745259}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.05]}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}, TicksStyle -> 
              Directive[FontFamily -> "Times", FontSize -> 10]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "4", "datatypes" -> "Ellipsis", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "0.888", "parsetiming" -> "0.55", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP647414b9244e7d5e6hi2000034i892a49i1g3cc8", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "16", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa647514b9244e7d5e6hi20000677i9b77ibefbh248350669649384844499", "version" -> 
    "2.6", "inputstring" -> 
    "Calculate the sum: 1/2+1/3+1/5+1/7+1/11+...+1/1009"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2023, 3, 2, 15, 29, 2.4485171`8.141478125103731}, "Line" -> 3, 
    "SessionID" -> 24284951958202058702}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", 
    "ResourceFunction[\"SequenceToSum\"][{2^(-1), 3^(-1), 5^(-1), 7^(-1), \
11^(-1), \[Ellipsis], 1009^(-1)}, n]"}, Typeset`open$$ = True, 
   Typeset`newq$$ = "Calculate the sum: 1/2+1/3+1/5+1/7+1/11+...+1/1009"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{616., {1135., 21.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"1b59581f-078e-4b51-8e4e-81af9ff24170"],

Cell[BoxData[""], "WolframAlphaShortInput",
 CellChangeTimes->{{3.886756125215098*^9, 
  3.8867561365985155`*^9}},ExpressionUUID->"0c156e65-4676-4d86-b4e9-\
c62d30a9b4ed"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8867555726209636`*^9, 3.8867555746887913`*^9}, {
  3.886755725177593*^9, 3.8867557258186874`*^9}, {3.886755990044945*^9, 
  3.886755990661894*^9}},ExpressionUUID->"30e310ea-70df-4b7d-9132-\
484465876d38"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Naloga 2", "Section",
 CellChangeTimes->{{3.8242800245874147`*^9, 3.8242800277175612`*^9}, {
  3.82428030154875*^9, 
  3.824280302737523*^9}},ExpressionUUID->"e0e99eb6-5dc4-427e-9e91-\
f366f683ed3c"],

Cell["Naslednje naloge re\[SHacek]i z vnosom z naravnim jezikom.", "Text",
 CellChangeTimes->{{3.8242804525122347`*^9, 
  3.824280473332304*^9}},ExpressionUUID->"8df4e0ec-64a3-4fd2-8994-\
edef9ee9baf6"],

Cell[CellGroupData[{

Cell["Naloge", "Subsection",
 CellChangeTimes->{{3.824280575592417*^9, 
  3.8242805937980185`*^9}},ExpressionUUID->"7dac8cc7-f7ea-4b36-a501-\
caf00a6f3b92"],

Cell["Dolo\[CHacek]i povr\[SHacek]ino Slovenije in skupno dol\[ZHacek]no \
njene meje.", "Text",
 CellChangeTimes->{{3.8242805969743814`*^9, 
  3.824280652236888*^9}},ExpressionUUID->"72cbf5bf-0293-4a39-b45b-\
d89408d5eb1d"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "Area of Slovenia", Typeset`newq$$ = 
   "Area of Slovenia", Typeset`chosen$$ = 
   "Entity[\"Country\", \"Slovenia\"][EntityProperty[\"Country\", \"Area\"]]",
    Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 
                 ImageSizeCache->{
                  12.100000000000001`, {4., 8.100000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 
                 ImageSizeCache->{
                  12.100000000000001`, {4., 8.100000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "Area of Slovenia", 
                  Defer[
                   Entity["Country", "Slovenia"][
                    EntityProperty["Country", "Area"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Area of Slovenia", 
                    Defer[
                    Entity["Country", "Slovenia"][
                    EntityProperty["Country", "Area"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"Slovenia\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
                    "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", 
                    "\"country\""}, "Entity"], "[", 
                    TemplateBox[{"\"total area\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
                    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[4]:=",ExpressionUUID->"0acf4703-9d0d-4211-b80d-31355f354ff2"],

Cell[BoxData[
 TemplateBox[{"20273.`4.", 
   RowBox[{
     SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
   SuperscriptBox["\"Kilometers\"", "2"]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8867562678825626`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"f193325c-6524-4f9f-a325-f2a15ffcb9d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Parimeter of Slovenia's border", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Input", "Quantity[1133., \"Kilometers\"]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Country\", \"Slovenia\"][EntityProperty[\"Country\", \
\"BoundaryLength\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Slovenia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Slovenia"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"full boundary length\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Data", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n  "}], 
       XMLElement["minput", {}, {"Quantity[1133., \"Kilometers\"]"}], 
       XMLElement["moutput", {}, {"Quantity[1133., \"Kilometers\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
                TagBox[
                 RowBox[{
                   TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["1133", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1133", "SRString" -> "1133"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"kilometers\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                ZeroWidthTimes -> False], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["152", "\"nd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"152", "\[InvisibleSpace]", "\"nd\""}]]]}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Roboto", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}, "RowDefault"], LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "Result__Show non-metric"}, {}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "BorderingCountries:CountryData", 
     "numsubpods" -> "1", "position" -> "300", "scanner" -> "Data", "title" -> 
     "Bordering countries/regions"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Country\", \"Slovenia\"][EntityProperty[\"Country\", \
\"BorderingCountries\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"Austria\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {CountryData, "Austria"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Croatia\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {CountryData, "Croatia"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Hungary\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {CountryData, "Hungary"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Italy\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {CountryData, "Italy"}]], Identity], 
                TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show border lengths", "input" -> 
         "BorderingCountries:CountryData__Show border lengths"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "UnitConversion", "numsubpods" -> "3", 
     "position" -> "400", "scanner" -> "Unit", "title" -> 
     "Unit conversions"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["703.8", 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> "703.8", "SRString" -> "703.8"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"miles\"", {
                   FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox[
                   RowBox[{"1.133", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "6"]}], 
                   $CellContext`TagBoxWrapper[
                   "StringBoxes" -> RowBox[{"1.133", "\[Times]", 
                    SuperscriptBox["10", "6"]}], "SRString" -> 
                    "1.133 times 10 to the 6"], SyntaxForm -> CenterDot], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"meters\"", {
                   FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["611.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "611.6", "SRString" -> "611.6"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"nmi\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                   Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"nautical miles\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "ComparisonAsLength", "numsubpods" -> 
     "1", "position" -> "500", "scanner" -> "Unit", "title" -> 
     "Comparison as length"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TemplateBox[{"\" \[TildeTilde] \"", 
               TemplateBox[{"\"\"", "7", "\".\"", "3"}, "RowDefault"], 
               "\" \"", 
               StyleBox["\"\[Times]\"", 
                GrayLevel[0.3], FontSize -> 10.219999999999999`, StripOnInput -> 
                False], "\"\[MediumSpace]\"", 
               StyleBox[
               "\"length of the Thirlmere Aqueduct (world's longest \
tunnel)\"", FontFamily -> "Roboto", FontSize -> Smaller, StripOnInput -> 
                False], 
               TemplateBox[{"\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"\[MediumSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["154.3", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "154.3", "SRString" -> "154.3"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"km\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\"\[MediumSpace]\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}, "RowDefault"], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "CorrespondingQuantity", "numsubpods" -> 
     "2", "position" -> "600", "scanner" -> "Unit", "title" -> 
     "Corresponding quantities"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Light travel time ", 
                    Cell[
                    BoxData[
                    FormBox["t", TraditionalForm]]], " in vacuum from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"t", "\[LongEqual]", 
                    
                    RowBox[{"x", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "c"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Light travel time ", 
                    $CellContext`CalculateSymbol["t"], " in vacuum from ", 
                    $CellContext`InlineForm["t \[LongEqual] x/c"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3.8", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "3.8", "SRString" -> "3.8"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ms\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"milliseconds\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Light travel time ", 
                    Cell[
                    BoxData[
                    FormBox["t", TraditionalForm]]], " in an optical fiber ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"t", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"1.48`", "\[InvisibleSpace]", "x"}], 
                    "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                    "c"}]}], PolynomialForm[#, TraditionalOrder -> False]& ]},
                     "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Light travel time ", 
                    $CellContext`CalculateSymbol["t"], 
                    " in an optical fiber ", 
                    $CellContext`InlineForm["t \[LongEqual] 1.48x/c"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5.6", "SRString" -> "5.6"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ms\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"milliseconds\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "spellcheck", {
       "word" -> "Parimeter", "suggestion" -> "perimeter", "text" -> 
        "Interpreting \"Parimeter\" as \"perimeter\""}, {}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "6", "datatypes" -> "Country", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.066", "parsetiming" -> "0.463", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP25841dff53ce90d7d4fg000011bf6bh7c5if7ff5", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "17", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa25851dff53ce90d7d4fg000023ddib932197e8573454770973695860617", "version" -> 
    "2.6", "inputstring" -> "Parimeter of Slovenia's border"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2023, 3, 2, 15, 31, 35.8867569`9.30750910644387}, "Line" -> 5, 
    "SessionID" -> 24284951958202058702}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Input", "Quantity[1133., \"Kilometers\"]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Parimeter of Slovenia's border"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{224.10742192501203`, {63., 21.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[5]:=",ExpressionUUID->"ea1bbd8f-03f9-4de1-91d3-f87e7895f2e0"],

Cell[BoxData[
 TemplateBox[{"1133.`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8867562959797544`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"35155206-44e8-429d-be49-b8089b900c7a"]
}, Open  ]],

Cell["Koliko Slovenij prekrije povr\[SHacek]ino Rusije?", "Text",
 CellChangeTimes->{{3.8242806672924557`*^9, 3.8242806783029656`*^9}, {
  3.8242808338637877`*^9, 
  3.824280836015839*^9}},ExpressionUUID->"b73b474a-3ce6-4aa4-b883-\
67ae18353942"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Area of Russia vs Slovenia", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "{Entity[\"Country\", \"Russia\"][EntityProperty[\"Country\", \
\"Area\"]], Entity[\"Country\", \"Slovenia\"][EntityProperty[\"Country\", \
\"Area\"]]}"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Data", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "{Entity[\"Country\", \"Russia\"][EntityProperty[\"Country\", \
\"Area\"]], Entity[\"Country\", \"Slovenia\"][EntityProperty[\"Country\", \
\"Area\"]]}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Russia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Russia"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}, {
                    StyleBox[
                    TagBox[
                    TagBox["\"Slovenia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Slovenia"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 
                    Automatic], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center], 
                  PaneBox[
                   StyleBox[
                    TagBox[
                    
                    GridBox[{{"\"total area\""}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], HoldForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Russia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Russia"}]], Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> 1, FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"1.71", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "7"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"1.71", "\[Times]", 
                    SuperscriptBox["10", "7"]}], "SRString" -> 
                    "1.71 times 10 to the 7"], SyntaxForm -> CenterDot], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"km\"", "2"], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"square kilometers\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox[
                    TagBox["\"Slovenia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Slovenia"}]], Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> 1, FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["20273", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "20273", "SRString" -> "20273"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    SuperscriptBox["\"km\"", "2"], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"square kilometers\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "Result__Show non-metric"}, {}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Relative values", "scanner" -> "Data", "id" -> 
     "Comparisons:Area:CountryData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                   StyleBox["\"visual\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                   StyleBox["\"ratios\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\[SpanFromLeft]", 
                 TagBox[
                  PaneBox[
                   StyleBox["\"comparisons\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 StyleBox[
                  TagBox[
                   TagBox["\"Russia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Russia"}]], Identity], {
                  FontColor -> GrayLevel[0.3]}, StripOnInput -> False], 
                 GraphicsBox[{
                   EdgeForm[
                    RGBColor[0.702388, 0.690517, 0.69395]], 
                   GrayLevel[0.941192], 
                   RectangleBox[{0, 0}, {0.4, 0.08}], 
                   GrayLevel[1], 
                   RectangleBox[{0.4, 0}, {0.4, 0.08}]}, 
                  PlotRange -> {{0, 0.52}, {-0.02, 0.09}}, ImageSize -> 60], 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["843.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "843.4", "SRString" -> "843.4"]]}], 
                    Identity, TagBoxNote -> {"Hyperlink" -> "843.4"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity], "1", 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["84240", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "84240", "SRString" -> "84240"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                   StyleBox["\" larger\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}, {
                 StyleBox[
                  TagBox[
                   TagBox["\"Slovenia\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {CountryData, "Slovenia"}]], Identity], {
                  FontColor -> GrayLevel[0.3]}, StripOnInput -> False], 
                 GraphicsBox[{
                   EdgeForm[
                    RGBColor[0.702388, 0.690517, 0.69395]], 
                   GrayLevel[0.941192], 
                   RectangleBox[{0, 0}, {0.0004742709806072461, 0.08}], 
                   GrayLevel[1], 
                   RectangleBox[{0.0004742709806072461, 0}, {0.4, 0.08}]}, 
                  PlotRange -> {{0, 0.52}, {-0.02, 0.09}}, ImageSize -> 60], 
                 "1", 
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.001186", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.001186", "SRString" -> "0.001186"]]}],
                     Identity, 
                    TagBoxNote -> {"Hyperlink" -> "0.001186"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0, ZeroWidthTimes -> False], Identity], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["99.88", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "99.88", "SRString" -> "99.88"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                   StyleBox["\" smaller\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Right, Right, Left}, 
                 "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}, {1, 
                    4} -> {Center, Baseline}, {1, 5} -> {Center, Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Reverse", "input" -> 
         "Comparisons:Area:CountryData__Reverse"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "3", "datatypes" -> "Country", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "0.787", "parsetiming" -> "0.325", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP122228c0873f774e0f4000064206642cbea6ge1", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "15", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa123228c0873f774e0f40000248abdg06ci1g30b8884920455003441207", "version" -> 
    "2.6", "inputstring" -> "Area of Russia vs Slovenia"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2023, 3, 2, 15, 39, 45.6402717`9.411923087562995}, "Line" -> 
    12, "SessionID" -> 24284951958202058702}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", 
    "{Entity[\"Country\", \"Russia\"][EntityProperty[\"Country\", \"Area\"]], \
Entity[\"Country\", \"Slovenia\"][EntityProperty[\"Country\", \"Area\"]]}"}, 
   Typeset`open$$ = True, Typeset`newq$$ = "Area of Russia vs Slovenia"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{616., {506., 21.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"305c9c70-be50-457c-80e2-05a8447e0793"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1.7098242`4.*^7", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"], ",", 
   TemplateBox[{"20273.`4.", 
     RowBox[{
       SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
     SuperscriptBox["\"Kilometers\"", "2"]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.886756781503281*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"75cf7333-1691-4008-8545-319a1cd2e6c5"]
}, Open  ]],

Cell["Kolik\[SHacek]na je temperatura sonca?", "Text",
 CellChangeTimes->{{3.8242811582633038`*^9, 3.8242811937323923`*^9}, {
  3.824281309914006*^9, 
  3.8242813124048896`*^9}},ExpressionUUID->"487958ce-c9c5-4468-8635-\
db4394b748f9"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Temperature of the sun", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "Entity[\"Star\", \"Sun\"][EntityProperty[\"Star\", \
\"EffectiveTemperature\"]]"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Star\", \"Sun\"][EntityProperty[\"Star\", \
\"EffectiveTemperature\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"Sun\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {StarData, "Sun"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"effective temperature\""}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               $CellContext`TagBoxWrapper["Separator" -> " | "]], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"StarData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"AllensAstrophysicalQuantities"}], 
         "\n    ", 
         XMLElement["datasource", {}, {"HYGCatalog"}], "\n    ", 
         XMLElement["datasource", {}, {"NationalSpaceScienceDataCenter"}], 
         "\n    ", 
         XMLElement["datasource", {}, {"R136StarCluster"}], "\n    ", 
         XMLElement["datasource", {}, {"StellarClassificationTable"}], 
         "\n   "}], 
       XMLElement["moutput", {}, {"Quantity[5772., \"Kelvins\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["5772", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5772", "SRString" -> "5772"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"K\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                  Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"kelvins\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Unit conversions", "scanner" -> "Unit", "id" -> 
     "UnitConversion", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "5"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["5499", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5499", "SRString" -> "5499"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]C\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"degrees Celsius\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["9930", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "9930", "SRString" -> "9930"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]F\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"degrees Fahrenheit\"", 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Roboto", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["10390", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "10390", "SRString" -> "10390"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]R\"", FontFamily -> "Roboto", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"degrees Rankine\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["4399", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4399", "SRString" -> "4399"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]R\[EAcute]\"", FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                 Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"degrees R\[EAcute]aumur\"", 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Roboto", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              RowBox[{
                TagBox[
                 TagBox[
                  RowBox[{
                    TagBox["2894", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2894", "SRString" -> "2894"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"\[Degree]R\[OSlash]\"", FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                 Dot], "  ", 
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"degrees R\[OSlash]mer\"", 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Roboto", FontSize -> Smaller, 
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}], "Unit", SyntaxForm -> Dot], 
             LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
             ZeroWidthTimes -> False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "5"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Comparison as temperature", "scanner" -> "Unit", "id" -> 
     "ComparisonAsEffectiveTemperature", "position" -> "400", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             InterpretationBox[
              Cell[
               BoxData[
                FormBox[
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["120", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "120", "SRString" -> "120"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"K\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\" above \"", 
                   StyleBox[
                   "\"inner core boundary temperature of the earth\"", 
                    FontFamily -> "Roboto", FontSize -> Smaller, StripOnInput -> 
                    False], "\" \"", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5650", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "5650", "SRString" -> "5650"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"K\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], TraditionalForm]]], 
              TextCell[
               $CellContext`RowTemplate["`1` above `2` `3`", {
                 Quantity[122.`1.292067016422509, 
                  $CellContext`Unit[$CellContext`Kelvins], "Short" -> True], 
                 Style[
                 "inner core boundary temperature of the earth", FontFamily -> 
                  "Roboto", FontSize -> Smaller], 
                 $CellContext`GrayComment[
                  Quantity[5650.`3., 
                   $CellContext`Unit[$CellContext`Kelvins], "Short" -> True], 
                  BaseStyle -> "Caption"]}]]], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Corresponding quantities", "scanner" -> "Unit", "id" -> 
     "CorrespondingQuantity", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Thermodynamic energy ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    TraditionalForm], TraditionalForm]]], " from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    FormBox[
                    StyleBox["\"E\"", Italic, StripOnInput -> False], 
                    TraditionalForm], "\[LongEqual]", 
                    RowBox[{"k", "\[InvisibleSpace]", "T"}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  
                  Row[{"Thermodynamic energy ", $CellContext`capitalE, 
                    " from ", 
                    $CellContext`InlineForm["capitalE \[LongEqual] k T"], 
                    ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["50", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "50", "SRString" -> "50"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"ceV\"", FontFamily -> "Roboto", FontSize -> Smaller]}],
                     Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"centielectronvolts\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  TextData[{"Blackbody energy flux \[CapitalPhi] from ", 
                    Cell[
                    BoxData[
                    FormBox[
                    FormBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[CapitalPhi]", "\[LongEqual]", 
                    RowBox[{"\[Sigma]", "\[InvisibleSpace]", 
                    SuperscriptBox["T", "4"]}]}], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], TraditionalForm], TraditionalForm]]], 
                    ":"}]], 
                 TextCell[
                  Row[{"Blackbody energy flux \[CapitalPhi] from ", 
                    $CellContext`InlineForm[
                    "\[CapitalPhi] \[LongEqual] \[Sigma] T^4"], ":"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"6.294", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "7"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"6.294", "\[Times]", 
                    SuperscriptBox["10", "7"]}], "SRString" -> 
                    "6.294 times 10 to the 7"], SyntaxForm -> CenterDot], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"W\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "2"]}], FontFamily -> "Roboto", 
                    FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"watts per square meter\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                InterpretationBox[
                 Cell[
                  
                  TextData[{
                   "Approximate luminous exitance from a planar blackbody \
radiator perpendicular to its surface:"}]], 
                 TextCell[
                  
                  Row[{"Approximate luminous exitance from a planar blackbody \
radiator perpendicular to its surface:"}]]]}, {
                TagBox[
                 GridBox[{{"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    RowBox[{"5.793", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "9"]}], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"5.793", "\[Times]", 
                    SuperscriptBox["10", "9"]}], "SRString" -> 
                    "5.793 times 10 to the 9"], SyntaxForm -> CenterDot], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Roboto", FontSize -> Smaller], 
                    "\[InvisibleSpace]", "\[ThickSpace]", "\[InvisibleSpace]", 
                    StyleBox[
                    "\"lx\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"lux\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{1}}, "Rows" -> {{Automatic}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "3"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Hertzsprung-Russell diagram", "scanner" -> "Data", 
     "id" -> "HertzsprungRussellDiagram:StarData", "position" -> "600", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"StarData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"HYGCatalog"}], "\n   ", 
         XMLElement["datasource", {}, {"R136StarCluster"}], "\n   ", 
         XMLElement["datasource", {}, {"StarsAndTheirSpectra"}], "\n   ", 
         XMLElement["datasource", {}, {"StellarClassificationTable"}], 
         "\n   ", 
         XMLElement["datasource", {}, {"AllensAstrophysicalQuantities"}], 
         "\n   ", 
         XMLElement["datasource", {}, {"NationalSpaceScienceDataCenter"}], 
         "\n  "}], 
       XMLElement[
       "minput", {}, {
        "ResourceFunction[\"HertzsprungRussellDiagram\"][Entity[\"Star\", \
\"Sun\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{
              GrayLevel[0.5], 
              InsetBox[
               FormBox[
                StyleBox["\"main sequence\"", "SR", StripOnInput -> False], 
                TraditionalForm], 
               NCache[{-Log[17000], 
                 Log[100]}, {-9.740968623038354, 4.605170185988092}]], 
              InsetBox[
               FormBox[
                StyleBox["\"supergiants\"", "SR", StripOnInput -> False], 
                TraditionalForm], 
               NCache[{-Log[8000], 
                 Log[500000]}, {-8.987196820661973, 13.122363377404328`}]], 
              InsetBox[
               FormBox[
                StyleBox["\"giants\"", "SR", StripOnInput -> False], 
                TraditionalForm], 
               NCache[{-Log[4000], 
                 Log[300]}, {-8.294049640102028, 5.703782474656201}]], 
              RGBColor[1, 0, 0], 
              PointSize[0.02], 
              PointBox[{{-8.660773919893762, 0.}}], {
               InsetBox[
                FormBox[
                 StyleBox["\"Sun\"", "SR", StripOnInput -> False], 
                 TraditionalForm], {-8.660773919893762, 0.}, {0, 1}]}}, 
             ImageSize -> 495., AspectRatio -> 0.75, Frame -> True, 
             FrameTicks -> {{{{-13.815510557964274`, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-11.512925464970229`, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-9.210340371976182, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-6.907755278982137, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-4.605170185988091, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {-2.3025850929940455`, 
                  FormBox[
                   TemplateBox[{"10", 
                    RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {0, 
                  FormBox["1", TraditionalForm]}, {
                  NCache[
                   Log[10], 2.302585092994046], 
                  FormBox[
                   
                   TemplateBox[{"10", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {
                  NCache[
                   Log[100], 4.605170185988092], 
                  FormBox[
                   
                   TemplateBox[{"10", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {
                  NCache[
                   Log[1000], 6.907755278982137], 
                  FormBox[
                   
                   TemplateBox[{"10", "3"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {
                  NCache[
                   Log[10000], 9.210340371976184], 
                  FormBox[
                   
                   TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {
                  NCache[
                   Log[100000], 11.512925464970229`], 
                  FormBox[
                   
                   TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}, {
                  NCache[
                   Log[1000000], 13.815510557964274`], 
                  FormBox[
                   
                   TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm]}}, {{-11.5129, 
                  FormBox["\"25\"", TraditionalForm]}, {-8.22023, 
                  FormBox["\"20\"", TraditionalForm]}, {-6.11426, 
                  FormBox["\"15\"", TraditionalForm]}, {-3.40368, 
                  FormBox["\"10\"", TraditionalForm]}, {-0.132484, 
                  FormBox["\"5\"", TraditionalForm]}, {5.06595, 
                  FormBox["\"0\"", TraditionalForm]}, {12.2264, 
                  FormBox["\"-5\"", TraditionalForm]}}}, {{{
                  NCache[-Log[500], -6.214608098422191], 
                  FormBox["500", TraditionalForm]}, {
                  NCache[-Log[800], -6.684611727667927], 
                  FormBox["800", TraditionalForm]}, {
                  NCache[-Log[1500], -7.313220387090301], 
                  FormBox["1500", TraditionalForm]}, {
                  NCache[-Log[3000], -8.006367567650246], 
                  FormBox["3000", TraditionalForm]}, {
                  NCache[-Log[6000], -8.699514748210191], 
                  FormBox["6000", TraditionalForm]}, {
                  NCache[-Log[12000], -9.392661928770137], 
                  FormBox["12000", TraditionalForm]}, {
                  NCache[-Log[25000], -10.126631103850338`], 
                  FormBox["25000", TraditionalForm]}, {
                  NCache[-Log[50000], -10.819778284410283`], 
                  FormBox["50000", TraditionalForm]}}, {{
                  NCache[-Log[874], -6.773080375655535], 
                  FormBox["\"T\"", TraditionalForm], 0}, {
                  NCache[-Log[1300], -7.170119543449628], 
                  FormBox["\"\"", TraditionalForm]}, {
                  NCache[-Log[1650], -7.408530566894626], 
                  FormBox["\"L\"", TraditionalForm], 0}, {
                  NCache[-Log[2000], -7.600902459542082], 
                  FormBox["\"\"", TraditionalForm]}, {
                  NCache[-Log[2950], -7.989560449333865], 
                  FormBox["\"M\"", TraditionalForm], 0}, {
                  NCache[-Log[3900], -8.268731832117737], 
                  FormBox["\"\"", TraditionalForm]}, {
                  NCache[-Log[4600], -8.433811582477187], 
                  FormBox["\"K\"", TraditionalForm], 0}, {
                  NCache[-Log[5300], -8.575462099540212], 
                  FormBox["\"\"", TraditionalForm]}, {
                  NCache[-Log[5650], -8.639410824140487], 
                  FormBox["\"G\"", TraditionalForm], 0}, {
                  NCache[-Log[6000], -8.699514748210191], 
                  FormBox["\"\"", TraditionalForm]}, {
                  NCache[-Log[6800], -8.824677891164198], 
                  FormBox["\"F\"", TraditionalForm], 0}, {
                  NCache[-Log[7600], -8.935903526274423], 
                  FormBox["\"\"", TraditionalForm]}, {
                  NCache[-Log[8800], -9.082507000466299], 
                  FormBox["\"A\"", TraditionalForm], 0}, {
                  NCache[-Log[10000], -9.210340371976184], 
                  FormBox["\"\"", TraditionalForm]}, {
                  NCache[-Log[17500], -9.769956159911606], 
                  FormBox["\"B\"", TraditionalForm], 0}, {
                  NCache[-Log[25000], -10.126631103850338`], 
                  FormBox["\"\"", TraditionalForm]}, {
                  NCache[-Log[47500], -10.768484990022733`], 
                  FormBox["\"O\"", TraditionalForm], 0}}}}, FrameLabel -> {{
                FormBox[
                 TemplateBox[{"\"luminosity \"", 
                   StyleBox[
                    TemplateBox[{"\"(\"", 
                    SubscriptBox["\"L\"", "\"\[CircleDot]\""], "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                 TraditionalForm], 
                FormBox["\"absolute visual magnitude\"", TraditionalForm]}, {
                FormBox[
                 TemplateBox[{"\"temperature \"", 
                   StyleBox["\"(K)\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], TraditionalForm], 
                FormBox["\"\"", TraditionalForm]}}, PlotRange -> 
             NCache[{{-11.156250521031495`, -Log[475]}, {-16.11809565095832, 
                 Log[
                 10000000]}}, {{-11.156250521031495`, -6.163314804034641}, \
{-16.11809565095832, 16.11809565095832}}], Prolog -> {
               InsetBox[
                GraphicsBox[{
                  GrayLevel[0.86], 
                  EdgeForm[], 
                  Opacity[0.025], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{1., 
                    0.}, {0., 1.}}, {0., 0.}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.995, 
                    0.}, {0., 0.995}}, {-0.042847341946146145`, 
                    0.023905620001313466`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.99, 
                    0.}, {0., 0.99}}, {-0.08569468389229229, 
                    0.04781124000262782}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.985, 
                    0.}, {0., 0.985}}, {-0.12854202583843843`, 
                    0.07171686000394129}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.98, 
                    0.}, {0., 0.98}}, {-0.17138936778458458`, 
                    0.09562248000525564}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.975, 
                    0.}, {0., 0.975}}, {-0.21423670973073072`, 
                    0.1195281000065691}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.97, 
                    0.}, {0., 0.97}}, {-0.25708405167687687`, 
                    0.14343372000788346`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.965, 
                    0.}, {0., 0.965}}, {-0.299931393623023, 
                    0.16733934000919692`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.96, 
                    0.}, {0., 0.96}}, {-0.34277873556916916`, 
                    0.1912449600105104}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.955, 
                    0.}, {0., 0.955}}, {-0.3856260775153153, 
                    0.21515058001182474`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.95, 
                    0.}, {0., 0.95}}, {-0.42847341946146145`, 
                    0.2390562000131382}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.945, 
                    0.}, {0., 0.945}}, {-0.4713207614076076, 
                    0.26296182001445256`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.94, 
                    0.}, {0., 0.94}}, {-0.514168103353752, 
                    0.28686744001576603`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.935, 
                    0.}, {0., 0.935}}, {-0.5570154452998981, 
                    0.3107730600170795}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{
                    0.9299999999999999, 0.}, {0., 
                    0.9299999999999999}}, {-0.5998627872460451, 
                    0.33467868001839385`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.925, 
                    0.}, {0., 0.925}}, {-0.6427101291921904, 
                    0.3585843000197073}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.92, 
                    0.}, {0., 0.92}}, {-0.6855574711383365, 
                    0.3824899200210208}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.915, 
                    0.}, {0., 0.915}}, {-0.7284048130844818, 
                    0.40639554002233513`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.91, 
                    0.}, {0., 0.91}}, {-0.7712521550306279, 
                    0.4303011600236486}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.905, 
                    0.}, {0., 0.905}}, {-0.8140994969767741, 
                    0.45420678002496295`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.9, 
                    0.}, {0., 0.9}}, {-0.8569468389229202, 
                    0.4781124000262764}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.895, 
                    0.}, {0., 0.895}}, {-0.8997941808690664, 
                    0.5020180200275899}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.89, 
                    0.}, {0., 0.89}}, {-0.9426415228152125, 
                    0.5259236400289042}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.885, 
                    0.}, {0., 0.885}}, {-0.9854888647613587, 
                    0.5498292600302177}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.88, 
                    0.}, {0., 0.88}}, {-1.0283362067075048`, 
                    0.5737348800315321}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.875, 
                    0.}, {0., 0.875}}, {-1.071183548653651, 
                    0.5976405000328455}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.87, 
                    0.}, {0., 0.87}}, {-1.114030890599797, 
                    0.6215461200341599}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.865, 
                    0.}, {0., 0.865}}, {-1.1568782325459432`, 
                    0.6454517400354733}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.86, 
                    0.}, {0., 0.86}}, {-1.1997255744920885`, 
                    0.6693573600367868}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.855, 
                    0.}, {0., 0.855}}, {-1.2425729164382346`, 
                    0.6932629800381012}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.85, 
                    0.}, {0., 0.85}}, {-1.2854202583843808`, 
                    0.7171686000394146}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.845, 
                    0.}, {0., 0.845}}, {-1.328267600330527, 
                    0.741074220040729}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.84, 
                    0.}, {0., 0.84}}, {-1.371114942276673, 
                    0.7649798400420424}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.835, 
                    0.}, {0., 0.835}}, {-1.4139622842228192`, 
                    0.7888854600433564}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.83, 
                    0.}, {0., 0.83}}, {-1.4568096261689654`, 
                    0.8127910800446703}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.825, 
                    0.}, {0., 0.825}}, {-1.4996569681151115`, 
                    0.8366967000459842}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{
                    0.8200000000000001, 0.}, {0., 
                    0.8200000000000001}}, {-1.5425043100612568`, 
                    0.8606023200472972}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.815, 
                    0.}, {0., 0.815}}, {-1.5853516520074038`, 
                    0.884507940048612}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.81, 
                    0.}, {0., 0.81}}, {-1.628198993953549, 
                    0.908413560049925}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{
                    0.8049999999999999, 0.}, {0., 
                    0.8049999999999999}}, {-1.671046335899696, 
                    0.9323191800512394}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.8, 
                    0.}, {0., 0.8}}, {-1.7138936778458405`, 
                    0.9562248000525528}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{
                    0.7949999999999999, 0.}, {0., 
                    0.7949999999999999}}, {-1.7567410197919875`, 
                    0.9801304200538672}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.79, 
                    0.}, {0., 0.79}}, {-1.7995883617381327`, 
                    1.0040360400551807`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.785, 
                    0.}, {0., 0.785}}, {-1.842435703684279, 
                    1.0279416600564941`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.78, 
                    0.}, {0., 0.78}}, {-1.885283045630425, 
                    1.051847280057808}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.775, 
                    0.}, {0., 0.775}}, {-1.9281303875765712`, 
                    1.075752900059122}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.77, 
                    0.}, {0., 0.77}}, {-1.9709777295227173`, 
                    1.0996585200604359`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.765, 
                    0.}, {0., 0.765}}, {-2.0138250714688635`, 
                    1.1235641400617498`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.76, 
                    0.}, {0., 0.76}}, {-2.0566724134150096`, 
                    1.1474697600630637`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.755, 
                    0.}, {0., 0.755}}, {-2.0995197553611558`, 
                    1.1713753800643776`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.75, 
                    0.}, {0., 0.75}}, {-2.142367097307302, 
                    1.195281000065691}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.745, 
                    0.}, {0., 0.745}}, {-2.185214439253447, 
                    1.219186620067005}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.74, 
                    0.}, {0., 0.74}}, {-2.2280617811995933`, 
                    1.2430922400683189`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.735, 
                    0.}, {0., 0.735}}, {-2.2709091231457394`, 
                    1.2669978600696328`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.73, 
                    0.}, {0., 0.73}}, {-2.3137564650918856`, 
                    1.2909034800709467`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.725, 
                    0.}, {0., 0.725}}, {-2.3566038070380317`, 
                    1.3148091000722606`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.72, 
                    0.}, {0., 0.72}}, {-2.399451148984178, 
                    1.3387147200735745`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.715, 
                    0.}, {0., 0.715}}, {-2.442298490930324, 
                    1.3626203400748884`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.71, 
                    0.}, {0., 0.71}}, {-2.48514583287647, 
                    1.3865259600762019`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{
                    0.7050000000000001, 0.}, {0., 
                    0.7050000000000001}}, {-2.5279931748226154`, 
                    1.4104315800775153`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.7, 
                    0.}, {0., 0.7}}, {-2.5708405167687625`, 
                    1.4343372000788297`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{
                    0.6950000000000001, 0.}, {0., 
                    0.6950000000000001}}, {-2.613687858714907, 
                    1.4582428200801432`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.69, 
                    0.}, {0., 0.69}}, {-2.656535200661054, 
                    1.4821484400814575`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.685, 
                    0.}, {0., 0.685}}, {-2.699382542607199, 
                    1.5060540600827705`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{
                    0.6799999999999999, 0.}, {0., 
                    0.6799999999999999}}, {-2.742229884553346, 
                    1.5299596800840853`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.675, 
                    0.}, {0., 0.675}}, {-2.7850772264994914`, 
                    1.5538653000853984`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{
                    0.6699999999999999, 0.}, {0., 
                    0.6699999999999999}}, {-2.8279245684456384`, 
                    1.5777709200867127`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.665, 
                    0.}, {0., 0.665}}, {-2.8707719103917837`, 
                    1.6016765400880262`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{
                    0.6599999999999999, 0.}, {0., 
                    0.6599999999999999}}, {-2.9136192523379307`, 
                    1.6255821600893405`}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{0.655, 
                    0.}, {0., 0.655}}, {-2.956466594284076, 
                    1.649487780090654}}], 
                  GeometricTransformationBox[
                   FilledCurveBox[
                    BSplineCurve[CompressedData["
1:eJw9U31Mk3cQ7kQiIhsMSkdb4P29b1toaetKh8oGkx865UP8KChULBs2a6wO
QY0OhmtsKjicdWvkQxkbhoECGZrCBhMh9oTGwfyAKR8qUzEroIEJTmixdjr3
R98/LpfLXZ6757k7Up2XqlnAYDBWvrb//YmH+r3xfwZBf0iz/AJIYazmrmEg
gQOu5YYh3fsSaHS4Kk9JgmFmzmfmsx1CqNE4qk7NhoJ+xfDvOw9S4Ovx6jvn
1whsJ13guMWCrubrU3fMCOarY1hreL5QHHXvDxuHhOiNz0xNexbCU6nprEpH
AgoK7/h79qllyQeuKucTEiB/6jfbktG4W0qy5VIeBUKq/ype54EX7X3+vTOV
B0ZOrGHRRSYWt5pmvf/hgSpdPv7cEoyTs/y56kI+lLQYVuF+ElObCqyKOAFo
74YVG0XheOzmV42qRgF0bTcN9FVG4FiVrX3aLICyRIvMm5Tgo+cCtX7HBPCy
Y+jjepsE96sjx/I3COB4qjY+K1+KPRrsPzjb+HR9GPtgt2KER+NVjMhO9t6h
YLpwe0G5vwjnvDj8FoNPQbatr/zBISEu9wrV+H1CQszlLQ+vmIXYrcfWJwVn
5UMivMd65E0GIHhU5H30kTYCe+94vDN+P6LxI2vje5CdAPFg/YLdWWKci+R/
BRoJOp9pHgmNjCRo/C+UWWtK2gmoeOYQpv4owIpgz4mGFQgyK5urCzN4dD/1
t17fhL9B4aU/6S8rAkhg8E3VuTcI3J7S2olekvDL1bRxzySEjbWeyzKaKLp+
c1fEOq6UR+O54/ODLrvyNImjOI18ax0Ffn4rdT1kCO4uGg0tFVMwezzNXKcL
xMpj0mRu7+t9KxPOBRT74sRfp9qmi0jYBHOOd/P88WrucPHyXBJuZ8smo5VM
bMrxispIJKFnv8HnwcJ3aP2Qa3IbdYCDrz2e35ByH9H3oNosS+JqEHykHuvp
GEH4sKmk3jlOACuJKbCrKRz83qRHbBVBz+/WT98pTisN42H3fbv5tA2uz9Zt
JGg+c/YTZ1RsBHgggT3EDcQt94xbz+cgkJXelFuT3sbM08xrP9cg0H7JSg+q
8MTsmIh/cy4gYAQ0RN8QjsfVLk65YhAi0C+7Pu9sfWUZ1PUdGRgm6H/xf2Gp
6d1NgOz+jEi0jwUTCYyJtR+GQF2m4pAhmYLOMiyx+nCh6Uze5xP7wmHLp6b0
lLVsKOve1TB6QAzuf74d4EVpdkngPwJ+0IQ=
                    "], SplineDegree -> 5, SplineClosed -> True]], {{{
                    0.6499999999999999, 0.}, {0., 
                    0.6499999999999999}}, {-2.999313936230223, 
                    1.6733934000919684`}}]}, AspectRatio -> 0.75, PlotRange -> 
                 NCache[{{-11.156250521031495`, -
                    Log[475]}, {-16.11809565095832, 
                    Log[
                    10000000]}}, {{-11.156250521031495`, -6.163314804034641}, \
{-16.11809565095832, 16.11809565095832}}], 
                 Method -> {
                  "ColorFormat" -> 
                   "Real32"}], {-11.156250521031495`, -16.11809565095832}, {
                Left, Bottom}, {4.992935716996854, 32.23619130191664}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False, False, False, False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False, False, False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "sun", "template" -> 
        "Assuming \"sun\" is referring to stars${separator}Use as ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
        "{\"C\", \"sun\"} -> {\"Star\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "Star", "desc" -> " referring to stars", "input" -> 
          "{\"C\", \"sun\"} -> {\"Star\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "SolarInteriorLayerClass", "desc" -> 
          "a class of solar layers", "input" -> 
          "{\"C\", \"sun\"} -> {\"SolarInteriorLayerClass\"}"}, {}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
StarDataSourceInformationNotes.html", "text" -> "Star data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "6", "datatypes" -> "Star", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.961", "parsetiming" -> "0.307", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP7894137ahff9eich13e7000047d887f73f0bf69e", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "8", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa7895137ahff9eich13e700003e8g7abef7aec9ea3172133347439184749", "version" -> 
    "2.6", "inputstring" -> "Temperature of the sun"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2023, 3, 2, 15, 41, 27.4898558`9.191747377243402}, "Line" -> 2,
     "SessionID" -> 24284957969414799966}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", 
    "Entity[\"Star\", \"Sun\"][EntityProperty[\"Star\", \
\"EffectiveTemperature\"]]"}, Typeset`open$$ = True, Typeset`newq$$ = 
   "Temperature of the sun"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{616., {1384., 21.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"078a3c63-5eaf-4cf6-856e-4f82883fcfbd"],

Cell[BoxData[
 TemplateBox[{"5772.`4.", "\"K\"", "kelvins", "\"Kelvins\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.886756882002268*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f74e690a-bac7-417f-aa8c-31425abcf4f5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Naloga 3", "Section",
 CellChangeTimes->{{3.8236748742147074`*^9, 3.823674881539955*^9}, {
  3.824281335008315*^9, 
  3.8242813351618867`*^9}},ExpressionUUID->"522eec24-e21c-4acc-a5ef-\
fe5403dcf51a"],

Cell["\<\
V tej nalogi si bomo pripravili nabor podatkov in s pomo\[CHacek]jo tega \
nabora naredili primer preproste statisti\[CHacek]ne analize.\
\>", "Text",
 CellChangeTimes->{{3.8242813413445754`*^9, 
  3.8242813832826505`*^9}},ExpressionUUID->"50ffaa19-721a-4675-8edb-\
3f1bb972a80d"],

Cell[CellGroupData[{

Cell["Priprava podatkov", "Subsection",
 CellChangeTimes->{{3.8242830914220295`*^9, 
  3.824283123841911*^9}},ExpressionUUID->"26a06061-9741-4ecf-b5a6-\
13e5759fe696"],

Cell["\<\
Definiraj seznam vseh dr\[ZHacek]av EU. Pomaga\[SHacek] si lahko z naravnim \
jezikom.\
\>", "Text",
 CellChangeTimes->{{3.824281856652864*^9, 3.824281882911785*^9}, {
  3.824281941032139*^9, 
  3.824281947804047*^9}},ExpressionUUID->"52cd3b1c-58e4-4f40-8075-\
701bfe034922"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "List of EU countries", Typeset`newq$$ = 
   "List of EU countries", Typeset`chosen$$ = 
   "EntityList[EntityClass[\"Country\", \"EuropeanUnion\"]]", Typeset`open$$ =
    False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 
                 ImageSizeCache->{
                  12.100000000000001`, {4., 8.100000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 
                 ImageSizeCache->{
                  12.100000000000001`, {4., 8.100000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "List of EU countries", 
                  Defer[
                   EntityList[
                    EntityClass["Country", "EuropeanUnion"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"EntityList", "[", 
                  TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                   "EntityClass"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"EntityList", "[", 
                  TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                   "EntityClass"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""}, "EntityClass"], "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "List of EU countries", 
                    Defer[
                    EntityList[
                    EntityClass["Country", "EuropeanUnion"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                    "EntityClass"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                    "EntityClass"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""}, "EntityClass"], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[1]:=",ExpressionUUID->"68428b75-4d27-42c5-97f0-0ab088ba649d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Austria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Belgium\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bulgaria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Croatia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cyprus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Czech Republic\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Denmark\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Estonia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Finland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"France\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Germany\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Greece\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hungary\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ireland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Italy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Latvia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lithuania\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Luxembourg\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Malta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Netherlands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Poland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Portugal\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Romania\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Slovakia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Slovenia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Spain\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sweden\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8867570032779474`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c2aebc76-d08f-4003-a9a6-9b85629730a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seznam", " ", "=", " ", 
  NamespaceBox["WolframAlphaQueryParseResults",
   DynamicModuleBox[{Typeset`q$$ = "List of EU countries", Typeset`newq$$ = 
    "List of EU countries", Typeset`chosen$$ = 
    "EntityList[EntityClass[\"Country\", \"EuropeanUnion\"]]", 
    Typeset`open$$ = False}, 
    PaneSelectorBox[{False->
     DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
      False}, 
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            InputFieldBox[Dynamic[Typeset`newq$$], String,
             Appearance->None,
             BaseStyle->{"CalculateInput"},
             ContinuousAction->True,
             Enabled->True,
             FieldSize->{{1, 40}, {1, 
                DirectedInfinity[1]}},
             TrapSelection->False], 
            ItemBox[
             ButtonBox[
              PaneSelectorBox[{True->
               TagBox[
                TooltipBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "WABitmaps", "OrangeSquarePlus"],
                  
                  ImageSizeCache->{
                   12.100000000000001`, {4., 8.100000000000001}}],
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                   StandardForm]]],
                Annotation[#, 
                 Dynamic[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                 "Tooltip"]& ], False->
               TagBox[
                TooltipBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "WABitmaps", "GraySquarePlus"],
                  
                  ImageSizeCache->{
                   12.100000000000001`, {4., 8.100000000000001}}],
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                   StandardForm]]],
                Annotation[#, 
                 Dynamic[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                 "Tooltip"]& ]}, Dynamic[Typeset`show$$],
               ImageSize->All],
              Appearance->None,
              ButtonFunction:>(Quiet[
                 WolframAlpha[]]; If[
                 Or[
                  CurrentValue["OptionKey"], 
                  CurrentValue["AltKey"]], SelectionMove[
                   ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                 NotebookWrite[
                   ButtonNotebook[], 
                   Cell[
                   Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  "List of EU countries", 
                   Defer[
                    EntityList[
                    EntityClass["Country", "EuropeanUnion"]]], "Fast parse"]; 
                 Typeset`open$$ = False]),
              Evaluator->Automatic,
              Method->"Queued"],
             Alignment->{Right, Top},
             StripOnInput->False]},
           {
            PaneBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 StyleBox[
                  RowBox[{"EntityList", "[", 
                   TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                    "EntityClass"], "]"}],
                  StripOnInput->False,
                  NumberMarks->False], True->
                 StyleBox[
                  RowBox[{"EntityList", "[", 
                   TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                    "EntityClass"], "]"}],
                  StripOnInput->False,
                  ShowSyntaxStyles->False,
                  NumberMarks->False,
                  FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                  CurrentValue["MouseOver"]],
                 BaseStyle->{ShowStringCharacters -> True},
                 FrameMargins->0,
                 ImageSize->Automatic],
                Alignment->Left,
                Appearance->None,
                BaseStyle->{},
                ButtonFunction:>(SelectionMove[
                   ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                   ButtonNotebook[], 
                   Cell[
                    BoxData[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""}, "EntityClass"], "]"}]], "Input"], All]; 
                 SelectionMove[
                   ButtonNotebook[], After, CellContents]),
                Evaluator->Automatic,
                ImageSize->Automatic,
                Method->"Preemptive"],
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                 StandardForm]]],
              Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
               "Tooltip"]& ],
             AppearanceElements->{},
             BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
             ImageSize->{Automatic, {1, 100}},
             Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          FrameStyle->GrayLevel[0.85],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxDividers->{
           "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"],
        Alignment->Top,
        Background->Dynamic[
          FEPrivate`If[
           FEPrivate`And[
            FEPrivate`SameQ[
             FEPrivate`Head[Typeset`newq$$], String], 
            FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
           RGBColor[1., 0.975, 0.95], 
           GrayLevel[1]]],
        BaselinePosition->Baseline,
        FrameStyle->GrayLevel[0.85],
        ImageSize->Automatic,
        RoundingRadius->5,
        StripOnInput->False],
       EventHandlerTag[{
        "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
         FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
         PassEventsDown -> Automatic, PassEventsUp -> True}]],
      DynamicModuleValues:>{}], True->
     TagBox[GridBox[{
        {
         DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
          False}, 
          TagBox[
           FrameBox[
            TagBox[GridBox[{
               {
                InputFieldBox[Dynamic[Typeset`newq$$], String,
                 Appearance->None,
                 BaseStyle->{"CalculateInput"},
                 ContinuousAction->True,
                 Enabled->True,
                 FieldSize->{{1, 40}, {1, 
                    DirectedInfinity[1]}},
                 TrapSelection->False], 
                ItemBox[
                 ButtonBox[
                  PaneSelectorBox[{True->
                   TagBox[
                    TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                    Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                   TagBox[
                    TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                    Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                   Typeset`show$$],
                   ImageSize->All],
                  Appearance->None,
                  ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "List of EU countries", 
                    Defer[
                    EntityList[
                    EntityClass["Country", "EuropeanUnion"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                  Evaluator->Automatic,
                  Method->"Queued"],
                 Alignment->{Right, Top},
                 StripOnInput->False]},
               {
                PaneBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                    "EntityClass"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""},
                    "EntityClass"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Alignment->Left,
                    Appearance->None,
                    BaseStyle->{},
                    ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"EntityList", "[", 
                    TemplateBox[{"\"European Union\"", 
                    RowBox[{"EntityClass", "[", 
                    RowBox[{"\"Country\"", ",", "\"EuropeanUnion\""}], "]"}], 
                    "\"EntityClass[\\\"Country\\\", \\\"EuropeanUnion\\\"]\"",
                     "\"countries\""}, "EntityClass"], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                    Evaluator->Automatic,
                    ImageSize->Automatic,
                    Method->"Preemptive"],
                   DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                  Annotation[#, 
                   Dynamic[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]],
                    "Tooltip"]& ],
                 AppearanceElements->{},
                 BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                 ImageSize->{Automatic, {1, 100}},
                 Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
              },
              AutoDelete->False,
              BaselinePosition->{1, 1},
              FrameStyle->GrayLevel[0.85],
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxDividers->{
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            Alignment->Top,
            Background->Dynamic[
              FEPrivate`If[
               FEPrivate`And[
                FEPrivate`SameQ[
                 FEPrivate`Head[Typeset`newq$$], String], 
                FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
               RGBColor[1., 0.975, 0.95], 
               GrayLevel[1]]],
            BaselinePosition->Baseline,
            FrameStyle->GrayLevel[0.85],
            ImageSize->Automatic,
            RoundingRadius->5,
            StripOnInput->False],
           
           EventHandlerTag[{
            "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
             "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
             "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
             True}]],
          DynamicModuleValues:>{}]},
        {
         InterpretationBox[
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEExpressions", "NecklaceAnimator"][20]],
           AnimatorBoxOptions->{ImageSize->20}],
          Animator[Appearance -> "Necklace", ImageSize -> 20],
          BaseStyle->{"Deploy"}]}
       },
       BaselinePosition->{1, 1},
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}, Dynamic[
      TrueQ[Typeset`open$$]],
     BaseStyle->{Deployed -> True},
     ImageSize->Automatic],
    DynamicModuleValues:>{}],
   BaseStyle->{Deployed -> True},
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True]}]], "Input",
 CellChangeTimes->{{3.8867570134973125`*^9, 3.886757024214204*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"817ecbdc-ddea-46c8-a259-d288bda86035"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Austria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Belgium\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bulgaria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Croatia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cyprus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Czech Republic\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Denmark\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Estonia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Finland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"France\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Germany\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Greece\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hungary\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ireland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Italy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Latvia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lithuania\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Luxembourg\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Malta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Netherlands\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Poland\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Portugal\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Romania\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Slovakia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Slovenia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Spain\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sweden\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.886757025827454*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"b18a406a-8848-40e6-88de-589e4e966457"]
}, Open  ]],

Cell["\<\
Kolik\[SHacek]na je dol\[ZHacek]ina seznama (tj. \[SHacek]tevilo \
dr\[ZHacek]av Evropske unije)?\
\>", "Text",
 CellChangeTimes->{{3.8242819978763757`*^9, 
  3.824282036670769*^9}},ExpressionUUID->"1290e2b5-96b2-4cab-acad-\
87409ae820b2"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "The number of elements in seznam", 
   Typeset`newq$$ = "The number of elements in seznam", Typeset`chosen$$ = 
   "Length[seznam]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 
                 ImageSizeCache->{
                  12.100000000000001`, {4., 8.100000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 
                 ImageSizeCache->{
                  12.100000000000001`, {4., 8.100000000000001}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[Typeset`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "The number of elements in seznam", 
                  Defer[
                   Length[$CellContext`seznam]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Length", "[", "seznam", "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Length", "[", "seznam", "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Length", "[", "seznam", "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], "MouseExited" :> 
        FEPrivate`Set[Typeset`show$$, False], Method -> "Preemptive", 
        PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{Typeset`show$$ = False, Typeset`assumptionsQ$$ = 
         False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  Typeset`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "The number of elements in seznam", 
                    Defer[
                    Length[$CellContext`seznam]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Length", "[", "seznam", "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Length", "[", "seznam", "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Length", "[", "seznam", "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> FEPrivate`Set[Typeset`show$$, True], 
            "MouseExited" :> FEPrivate`Set[Typeset`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[4]:=",ExpressionUUID->"702f42d8-8b56-4a73-ad94-60c2e629101e"],

Cell[BoxData["27"], "Output",
 CellChangeTimes->{3.8867570805551033`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"ef4c69a8-7ea8-45c1-9363-ddf2c1a3a415"]
}, Open  ]],

Cell["\<\
Poi\[SHacek]\[CHacek]i \[SHacek]tevilo vseh lastnosti, ki jih imajo dr\
\[ZHacek]ave s tega seznama. Nasvet: ukaz EntityProperties.\
\>", "Text",
 CellChangeTimes->{{3.82428205207804*^9, 
  3.824282140880015*^9}},ExpressionUUID->"6cd44166-c96b-4bd6-8a65-\
26aef9c5588e"],

Cell[BoxData[
 RowBox[{"EntityProperties", "[", "seznam", "]"}]], "Input",
 CellChangeTimes->{{3.88675741508648*^9, 3.8867574298770323`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"812076af-f1e8-499e-81b2-5a8417c24ba2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"active home listings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ActiveHomeListingCount\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ActiveHomeListingCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"adjusted net national income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AdjustedNetNationalIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AdjustedNetNationalIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"seasonal bank borrowings from Fed, plus adjustments\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AdjustmentSeasonalBorrowings\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AdjustmentSeasonalBorrowings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"regions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AdministrativeDivisions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AdministrativeDivisions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"adult population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AdultPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AdultPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"obese adults\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AdultsObese\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AdultsObese\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of aggravated assaults\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggravatedAssault\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggravatedAssault\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of aggravated assault\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggravatedAssaultRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggravatedAssaultRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate home value\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHomeValue\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHomeValue\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate home value, householder 15 to 24 years\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHomeValue15To24\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHomeValue15To24\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate home value, householder 25 to 34 years\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHomeValue25To34\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHomeValue25To34\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate home value, householder 35 to 64 years\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHomeValue35To64\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHomeValue35To64\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate home value, householder 65 years and over\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHomeValue65\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHomeValue65\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate household income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateHouseholdIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateHouseholdIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aggregate weekly hours index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AggregateWeeklyHoursIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AggregateWeeklyHoursIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"agricultural irrigated land fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgriculturalIrrigatedLandFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgriculturalIrrigatedLandFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"agricultural land fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgriculturalLandFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgriculturalLandFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"agricultural production index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgriculturalProductionIndex\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"AgriculturalProductionIndex\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"agricultural production per capita index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"AgriculturalProductionPerCapitaIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgriculturalProductionPerCapitaIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"agricultural products\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgriculturalProducts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgriculturalProducts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureConsumption\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgricultureConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumption per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureConsumptionPerCapita\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureConsumptionPerCapita\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"harvest area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureHarvestArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgricultureHarvestArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"harvest area per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureHarvestAreaPerCapita\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureHarvestAreaPerCapita\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgricultureProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"production per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureProductionPerCapita\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AgricultureProductionPerCapita\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average yield\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureYield\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgricultureYield\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"yield per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AgricultureYieldPerCapita\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AgricultureYieldPerCapita\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"arrivals by air\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AirArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AirArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aircraft carriers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AircraftCarriers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AircraftCarriers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"air force\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AirForce\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AirForce\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"airports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Airports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Airports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"air transport\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AirTransport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AirTransport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"alcohol fuel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Alcohol\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Alcohol\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total primary energy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AllPrimaryFuels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AllPrimaryFuels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"alternate names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AlternateNames\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AlternateNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"AM radio stations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AMRadioStations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AMRadioStations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual annulments\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualAnnulments\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualAnnulments\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual births\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualBirths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualBirths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual deaths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualDeaths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualDeaths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual divorces\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualDivorces\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualDivorces\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual HIV/AIDS deaths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualHIVAIDSDeaths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualHIVAIDSDeaths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual marriages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AnnualMarriages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AnnualMarriages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"antenatal care coverage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AntenatalCareCoverage\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AntenatalCareCoverage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual\[Hyphen]crop land area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ArableLandArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ArableLandArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual\[Hyphen]crop land fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ArableLandFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ArableLandFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"armored infantry fighting vehicles\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ArmoredInfantryFightingVehicles\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ArmoredInfantryFightingVehicles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"armored personnel carriers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ArmoredPersonnelCarriers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ArmoredPersonnelCarriers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"army\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Army\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Army\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"artillery\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Artillery\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Artillery\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"attack helicopters\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AttackHelicopters\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AttackHelicopters\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"automobile production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AutomobileProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AutomobileProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average home listing price\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AverageHomeListingPrice\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AverageHomeListingPrice\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average hourly earnings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AverageHourlyEarnings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AverageHourlyEarnings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average length of stay\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AverageLengthOfStay\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AverageLengthOfStay\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average number of meetings with tax officials\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"AverageNumberOfTimesFirmsSpentInMeetingsWithTaxOfficials\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AverageNumberOfTimesFirmsSpentInMeetingsWithTaxOfficials\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average time to clear exports through customs\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"AverageTimeToClearExportsThroughCustoms\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"AverageTimeToClearExportsThroughCustoms\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average weekly hours\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AverageWeeklyHours\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AverageWeeklyHours\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average weekly overtime hours\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AverageWeeklyOvertimeHours\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"AverageWeeklyOvertimeHours\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"aviation gasoline\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"AviationGasoline\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"AviationGasoline\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bankers acceptance rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BankersAcceptance\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BankersAcceptance\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bank prime loan rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BankPrimeLoanRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BankPrimeLoanRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bank prime loan rate changes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BankPrimeLoanRateChanges\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BankPrimeLoanRateChanges\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"benefits cost index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BenefitsCostIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BenefitsCostIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"birth rate fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BirthRateFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BirthRateFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"births attended by skilled health personnel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"BirthsAttendedBySkilledHealthPersonnel\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"BirthsAttendedBySkilledHealthPersonnel\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"births by caesarean section\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BirthsByCaesareanSection\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BirthsByCaesareanSection\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"book titles published\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BookTitles\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BookTitles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bordering countries/regions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BorderingCountries\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BorderingCountries\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"shared border lengths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BordersLengths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BordersLengths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full boundary length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BoundaryLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BoundaryLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"burden of customs procedure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BurdenOfCustomsProcedure\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BurdenOfCustomsProcedure\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of burglaries\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Burglary\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Burglary\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of burglary\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BurglaryRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BurglaryRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"business activity index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BusinessActivityIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BusinessActivityIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"professional arrivals\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BusinessArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BusinessArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"business entry rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BusinessEntryRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"BusinessEntryRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"business extent of disclosure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"BusinessExtentOfDisclosureIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"BusinessExtentOfDisclosureIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"calling code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CallingCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CallingCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"capacity utilization rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CapacityUtilization\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CapacityUtilization\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"capital city\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CapitalCity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CapitalCity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"capital location\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CapitalLocation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CapitalLocation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"S&P/Case\[Hyphen]Shiller home price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CaseShillerIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CaseShillerIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"central bank intervention\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CentralBankIntervention\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CentralBankIntervention\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"certificate of deposit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CertificateOfDeposit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CertificateOfDeposit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"changes in inventories\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChangesInInventories\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChangesInInventories\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"checkable deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CheckableDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CheckableDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"chemicals fraction of manufacturing value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChemicalsFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChemicalsFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"child employment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildEmploymentFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChildEmploymentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"child population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChildPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"vitamin A supplementation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"ChildrenAged6To59MonthsReceivedVitaminA\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenAged6To59MonthsReceivedVitaminA\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"children not enrolled in schools\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildrenOutOfSchool\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChildrenOutOfSchool\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"overweight children\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildrenUnderFiveOverweight\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"ChildrenUnderFiveOverweight\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"antimalarial treatment for fever\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"ChildrenUnderFiveReceivedAntimalarialTreatment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveReceivedAntimalarialTreatment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"stunted children\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildrenUnderFiveStunted\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ChildrenUnderFiveStunted\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"underweight children\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildrenUnderFiveUnderweight\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveUnderweight\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"children with ARI symptoms taken to facility\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ChildrenUnderFiveWithARISymptoms\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveWithARISymptoms\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"diarrheal treatment with ORT\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"ChildrenUnderFiveWithDiarrheaReceivingORT\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveWithDiarrheaReceivingORT\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"children sleeping under insecticide-treated nets\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"ChildrenUnderFiveWithInsecticideNets\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ChildrenUnderFiveWithInsecticideNets\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cinema attendance\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CinemaAttendance\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CinemaAttendance\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of cinemas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Cinemas\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Cinemas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cinema seats\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CinemaSeats\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CinemaSeats\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"civilian employment population ratio\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CivilianEmploymentPopulationRatio\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CivilianEmploymentPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"civilian labor force\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CivilianLaborForce\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CivilianLaborForce\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"civilian participation rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CivilianParticipationRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CivilianParticipationRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"civilian unemployment rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CivilianUnemploymentRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CivilianUnemploymentRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"classes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Classes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Classes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"climate types\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ClimateTypes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ClimateTypes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lignite brown coal\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CoalLigniteBrown\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CoalLigniteBrown\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"coal\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CoalTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CoalTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"coal\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CoalTotalShortTons\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CoalTotalShortTons\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"coast guard\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CoastGuard\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CoastGuard\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"coastline length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CoastlineLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CoastlineLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"commercial banks assets\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CommercialBanksAssets\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CommercialBanksAssets\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"commercial banks credit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CommercialBanksCredit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CommercialBanksCredit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"commercial paper\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CommercialPaper\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CommercialPaper\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"commercial paper of nonfinancial companies\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CommercialPaperNonFinancial\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"CommercialPaperNonFinancial\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"community and traditional health workers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"CommunityAndTraditionalHealthWorkers\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CommunityAndTraditionalHealthWorkers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"community and traditional health workers per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"CommunityAndTraditionalHealthWorkersPopulationRatio\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"CommunityAndTraditionalHealthWorkersPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"compensation per hour index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CompensationPerHourIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CompensationPerHourIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"school completion rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CompletionRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CompletionRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"prevalence of condom use by young people\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CondomUseByYoungPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CondomUseByYoungPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"construction value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ConstructionValueAdded\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ConstructionValueAdded\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumer credit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ConsumerCredit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ConsumerCredit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumer price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ConsumerPriceIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ConsumerPriceIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumer sentiment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ConsumerSentiment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ConsumerSentiment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"container port traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ContainerPortTraffic\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ContainerPortTraffic\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"continent\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Continent\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Continent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"contraceptive prevalence\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ContraceptivePrevalence\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ContraceptivePrevalence\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"contributing family workers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ContributingFamilyWorkers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ContributingFamilyWorkers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"contributing family workers fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ContributingFamilyWorkersFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ContributingFamilyWorkersFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"conventional mortgage rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ConventionalMortgageRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ConventionalMortgageRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate bond yield\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CorporateBondYield\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CorporateBondYield\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate capital consumption adjustment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"CorporateCapitalConsumptionAdjustment\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateCapitalConsumptionAdjustment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate cash flow\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CorporateCashFlow\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CorporateCashFlow\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate dividends\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CorporateDividends\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CorporateDividends\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate inventory valuation adjustment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"CorporateInventoryValuationAdjustment\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateInventoryValuationAdjustment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate profits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CorporateProfits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CorporateProfits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"corporate proprietors income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CorporateProprietorsIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"CorporateProprietorsIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical cost of business start up procedures\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CostOfBusinessStartUpProcedures\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CostOfBusinessStartUpProcedures\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical cost to export one container\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CostToExport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CostToExport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical cost to import one container\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CostToImport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CostToImport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"country code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CountryCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CountryCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"consumer price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CPI\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CPI\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"CPIA rating\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Cpia\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Cpia\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"credit depth of information\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CreditDepthOfInformationIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"CreditDepthOfInformationIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total rate of crime\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CrimeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CrimeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total number of crimes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CrimeTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CrimeTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"perennial-crop land area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CropsLandArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CropsLandArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"perennial-crop land fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CropsLandFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CropsLandFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"currency code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrencyCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrencyCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"currency in circulation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrencyInCirculation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrencyInCirculation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"currency name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrencyName\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrencyName\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"currency short name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrencyShortName\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrencyShortName\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"currency unit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrencyUnit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrencyUnit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"current account\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrentAccount\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrentAccount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"current account balance\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrentAccountBalance\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"CurrentAccountBalance\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"current expenditure on health\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"CurrentExpenditureOnHealth\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"CurrentExpenditureOnHealth\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average daily hotel stays\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DailyAverageHotels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DailyAverageHotels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"daily newspaper circulation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DailyNewspapers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DailyNewspapers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"death rate fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DeathRateFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DeathRateFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"debt measure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DebtMeasure\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DebtMeasure\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"DEC alternative conversion factor\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DecAlternativeConversionFactor\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DecAlternativeConversionFactor\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"demand deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DemandDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DemandDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"dentistry personnel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DentistryPersonnel\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DentistryPersonnel\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"dentistry personnel per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DentistryPersonnelPopulationRatio\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DentistryPersonnelPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"dependencies\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Dependencies\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Dependencies\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"dependency parent\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DependencyParent\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DependencyParent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"deposit interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DepositInterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DepositInterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"deposits with Federal Reserve banks\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DepositsWithFederalReserveBanks\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DepositsWithFederalReserveBanks\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"destroyers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Destroyers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Destroyers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"discount rate changes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DiscountRateChanges\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DiscountRateChanges\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"discount window borrowing\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DiscountWindowBorrowing\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DiscountWindowBorrowing\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"discrepancy in expenditure estimate of GDP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"DiscrepancyInExpenditureEstimateOfGDP\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"DiscrepancyInExpenditureEstimateOfGDP\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"disposable personal income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DisposablePersonalIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DisposablePersonalIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical documents required per export shipment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DocumentsToExport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DocumentsToExport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical documents required per import shipment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DocumentsToImport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DocumentsToImport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"improved drinking water sources\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DrinkingWater\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DrinkingWater\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DryNaturalGas\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DryNaturalGas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"DryNaturalGasCubicFeet\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"DryNaturalGasCubicFeet\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ease of doing business\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EaseOfDoingBusinessIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EaseOfDoingBusinessIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"economic aid\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EconomicAid\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EconomicAid\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"economically active children\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EconomicallyActiveChildrenFraction\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"EconomicallyActiveChildrenFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total school duration\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EducationDuration\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EducationDuration\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"effective federal funds rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EffectiveFederalFundsRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EffectiveFederalFundsRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"elderly population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElderlyPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElderlyPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid frequency\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridFrequency\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricalGridFrequency\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid plug images\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridPlugImages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricalGridPlugImages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid plug codes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridPlugs\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricalGridPlugs\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid socket images\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridSocketImages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ElectricalGridSocketImages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid socket codes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridSockets\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricalGridSockets\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electrical grid voltages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricalGridVoltages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricalGridVoltages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electricity from biomass\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityBiomass\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityBiomass\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electricity from fossil fuels\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityConventionalThermal\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ElectricityConventionalThermal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"geothermal electricity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityGeothermal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityGeothermal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"hydroelectric electricity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityHydroelectric\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityHydroelectric\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pumped\[Hyphen]storage hydroelectricity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityHydroPumpedStorage\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ElectricityHydroPumpedStorage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"nuclear electricity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityNuclear\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityNuclear\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electricity from solar, tide, or waves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricitySolarTideWave\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricitySolarTideWave\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total electricity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electricity from renewables\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityTotalRenewables\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ElectricityTotalRenewables\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"electricity from wind\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricityWind\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ElectricityWind\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"falling water resources for electric power\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ElectricPowerFallingWaterResources\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ElectricPowerFallingWaterResources\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"emigration rate of tertiary educated\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmigrationRateOfTertiaryEducated\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"EmigrationRateOfTertiaryEducated\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employees compensation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmployeesCompensation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EmployeesCompensation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"self\[Hyphen]employed with employees\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Employers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Employers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employers fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmployersFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EmployersFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Employment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Employment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employment cost index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmploymentCostIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EmploymentCostIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employment fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmploymentFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EmploymentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employment to population ratio\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EmploymentToPopulationRatio\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"EmploymentToPopulationRatio\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"school ending age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EndingAge\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EndingAge\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"entity classes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EntityClasses\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EntityClasses\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"environmental agreements\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EnvironmentalAgreements\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EnvironmentalAgreements\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"environmental issues\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EnvironmentalIssues\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EnvironmentalIssues\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ethnic groups\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EthnicGroups\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EthnicGroups\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ethnic mix\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"EthnicGroupsFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"EthnicGroupsFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"exchange rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExchangeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExchangeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure fractions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExpenditureFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on ancillary services\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnAncillaryServices\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditureOnAncillaryServices\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on day care\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnDayCare\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExpenditureOnDayCare\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"health spending\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnHealth\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExpenditureOnHealth\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on home health care\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnHomeHealthCare\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"ExpenditureOnHomeHealthCare\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on in-patient care\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnInpatientCare\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditureOnInpatientCare\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on medical services\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnMedicalServices\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditureOnMedicalServices\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on out-patient care\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnOutpatientCare\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"ExpenditureOnOutpatientCare\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on over-the-counter medicines\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"ExpenditureOnOverthecounterMedicines\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditureOnOverthecounterMedicines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure on prescription medicines\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditureOnPrescriptionMedicines\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditureOnPrescriptionMedicines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure per student\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditurePerStudent\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExpenditurePerStudent\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"expenditure per student fraction of GDP per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExpenditurePerStudentFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ExpenditurePerStudentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"export commodities\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExportCommodities\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExportCommodities\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"export partners\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExportPartners\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExportPartners\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"export partners fractions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExportPartnersFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExportPartnersFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"exports as a capacity to import\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExportsAsACapacityToImport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ExportsAsACapacityToImport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"export value\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExportsValue\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExportsValue\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"extended credit borrowings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExtendedCreditBorrowings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExtendedCreditBorrowings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"external balance\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExternalBalance\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExternalBalance\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"external debt\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ExternalDebt\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ExternalDebt\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"factors affecting reserve balances of depository institutions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"FactorsAffectingReserveBalancesOfDepositoryInstitutions\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FactorsAffectingReserveBalancesOfDepositoryInstitutions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal debt\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalDebt\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalDebt\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal deficit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalDeficit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalDeficit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal demand deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalDemandDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalDemandDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal demand deposits and note balances\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalDemandDepositsNoteBalances\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FederalDemandDepositsNoteBalances\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalInvestment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal note balances\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalNoteBalances\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalNoteBalances\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Federal Reserve bank discount rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalReserveBankDiscountRate\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FederalReserveBankDiscountRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"federal surplus\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FederalSurplus\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FederalSurplus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female adult population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleAdultPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemaleAdultPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female child population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleChildPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemaleChildPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female elderly population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleElderlyPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemaleElderlyPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female infant mortality fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleInfantMortalityFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FemaleInfantMortalityFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female life expectancy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleLifeExpectancy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemaleLifeExpectancy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female median age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemaleMedianAge\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemaleMedianAge\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"female population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FemalePopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FemalePopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fertilizer consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FertilizerConsumption\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FertilizerConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fertilizer production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FertilizerProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FertilizerProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"FHA mortgage rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FHAMortgageRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FHAMortgageRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fighters\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Fighters\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Fighters\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ground\[Hyphen]attack fighters\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FightersGroundAttack\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FightersGroundAttack\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"final consumption expenditure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FinalConsumptionExpenditure\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"FinalConsumptionExpenditure\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"final sales of domestic product\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FinalSalesOfDomesticProduct\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"FinalSalesOfDomesticProduct\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"final sales to domestic purchasers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FinalSalesToDomesticPurchasers\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FinalSalesToDomesticPurchasers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"firms formally registered when operations started\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"FirmsFormallyRegisteredWhenOperationsStarted\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"FirmsFormallyRegisteredWhenOperationsStarted\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"firms offering formal training\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FirmsOfferingFormalTraining\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"FirmsOfferingFormalTraining\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"firms using banks to finance investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FirmsUsingBanksToFinanceInvestment\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FirmsUsingBanksToFinanceInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"firms with female participation in ownership\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"FirmsWithFemaleParticipationInOwnership\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FirmsWithFemaleParticipationInOwnership\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fiscal year date\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FiscalYearDate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FiscalYearDate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fish production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FishProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FishProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fixed broadband internet subscribers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FixedBroadbandInternetSubscribers\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FixedBroadbandInternetSubscribers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fixed capital consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FixedCapitalConsumption\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FixedCapitalConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"flag\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Flag\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Flag\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"flag description\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FlagDescription\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FlagDescription\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"flag image\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FlagImage\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FlagImage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"flexible seasonal credit rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FlexibleSeasonalCreditRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"FlexibleSeasonalCreditRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"FM radio stations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FMRadioStations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FMRadioStations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"food, beverages and tobacco fraction of manufacturing value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FoodBeveragesTobaccoFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FoodBeveragesTobaccoFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"food production index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FoodProductionIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FoodProductionIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"food production per capita index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FoodProductionPerCapitaIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FoodProductionPerCapitaIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of rapes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForcibleRape\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForcibleRape\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of rape\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForcibleRapeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForcibleRapeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"foreign exchange reserves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForeignExchangeReserves\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForeignExchangeReserves\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"change in foreign owned assets\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForeignOwnedAssets\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForeignOwnedAssets\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"foreign owned ships\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForeignOwnedShips\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForeignOwnedShips\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"foreign registered ships\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForeignRegisteredShips\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForeignRegisteredShips\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"forest and woodland area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ForestWoodlandArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ForestWoodlandArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"freshwater withdrawals\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FreshwaterWithdrawals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FreshwaterWithdrawals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"freshwater withdrawals fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FreshwaterWithdrawalsFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"FreshwaterWithdrawalsFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"frigates\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Frigates\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Frigates\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full coordinates\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FullCoordinates\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FullCoordinates\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FullName\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FullName\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full native names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"FullNativeNames\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"FullNativeNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gas-diesel oils\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GasDieselOils\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GasDieselOils\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GDP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GDP\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GDP deflator\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GDPDeflator\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GDPDeflator\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GDP per employed person\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GDPPerPersonEmployed\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GDPPerPersonEmployed\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"general government final consumption expenditure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"GeneralGovernmentFinalConsumptionExpenditure\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"GeneralGovernmentFinalConsumptionExpenditure\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Gini index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GiniIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GiniIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross national income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GNI\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GNI\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"government consumption expenditures and gross investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"GovernmentConsumptionExpendituresGrossInvestment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"GovernmentConsumptionExpendituresGrossInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government current expenditures\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentCurrentExpenditures\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"GovernmentCurrentExpenditures\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government current receipts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentCurrentReceipts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentCurrentReceipts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government debt\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentDebt\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentDebt\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government education spending as portion of GNI\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"GovernmentEducationSpendingFractionGNI\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"GovernmentEducationSpendingFractionGNI\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentInvestment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government receipts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentReceipts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentReceipts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government saving\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentSaving\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentSaving\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"government surplus\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GovernmentSurplus\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GovernmentSurplus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"grants in aid\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrantsInAid\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrantsInAid\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"greenhouse gas emissions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GreenhouseGasEmissions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GreenhouseGasEmissions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross capital formation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossCapitalFormation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossCapitalFormation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross domestic income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossDomesticIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossDomesticIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GDP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossDomesticProduct\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossDomesticProduct\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Gross Domestic Purchases\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossDomesticPurchases\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossDomesticPurchases\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross domestic savings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossDomesticSavings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossDomesticSavings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross fixed capital formation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossFixedCapitalFormation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"GrossFixedCapitalFormation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross national expenditure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossNationalExpenditure\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossNationalExpenditure\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross national expenditure deflator\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossNationalExpenditureDeflator\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"GrossNationalExpenditureDeflator\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GNP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossNationalProduct\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossNationalProduct\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross savings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossSavings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossSavings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GSP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossStateProduct\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GrossStateProduct\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"gross value added at factor cost\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GrossValueAddedAtFactorCost\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"GrossValueAddedAtFactorCost\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"groups\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Groups\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Groups\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total guests in hotels and similar accommodations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"GuestsInHotels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"GuestsInHotels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"has polygon?\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HasPolygon\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HasPolygon\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Human Development Index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HDI\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HDI\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"highest elevation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HighestElevation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HighestElevation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"highest point\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HighestPoint\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HighestPoint\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"HIV-AIDS death rate fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HIVAIDSDeathRateFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HIVAIDSDeathRateFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"HIV/AIDS fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HIVAIDSFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HIVAIDSFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"HIV/AIDS population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HIVAIDSPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HIVAIDSPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"home ownership rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HomeOwnershipRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HomeOwnershipRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"hospital beds\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HospitalBedsPer10000Population\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"HospitalBedsPer10000Population\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"hours worked index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HoursWorkedIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HoursWorkedIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"household credit market outstanding debt\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"HouseholdCreditMarketOutstandingDebt\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"HouseholdCreditMarketOutstandingDebt\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"household debt service\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HouseholdDebtService\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HouseholdDebtService\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"household final consumption expenditure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"HouseholdFinalConsumptionExpenditure\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"HouseholdFinalConsumptionExpenditure\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"household financial obligation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HouseholdFinancialObligation\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"HouseholdFinancialObligation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"FHFA home price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousePriceIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousePriceIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"FHFA home price index annual average\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousePriceIndexAnnualAverage\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"HousePriceIndexAnnualAverage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"new single\[Hyphen]family home sales\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousesSold\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousesSold\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"housing affordability index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousingAffordability\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousingAffordability\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"housing permits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousingPermit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousingPermit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"home listings with increased price\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousingPriceIncreasedCount\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"HousingPriceIncreasedCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"home listings with reduced price\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousingPriceReducedCount\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousingPriceReducedCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"housing starts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousingStarts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousingStarts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"households\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"HousingUnits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"HousingUnits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"illiteracy rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IlliteracyFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IlliteracyFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"implicit price deflator\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImplicitPriceDeflator\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImplicitPriceDeflator\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"import commodities\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImportCommodities\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImportCommodities\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"import partners\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImportPartners\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImportPartners\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"import partners fractions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImportPartnersFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImportPartnersFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"import value\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImportsValue\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImportsValue\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"improved sanitation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ImprovedSanitation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ImprovedSanitation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"income payments\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IncomePayments\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IncomePayments\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"income receipts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IncomeReceipts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IncomeReceipts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"income share\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IncomeShare\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IncomeShare\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"independence date\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IndependenceDate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IndependenceDate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"independence year\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IndependenceYear\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IndependenceYear\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"industrial production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IndustrialProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IndustrialProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"industrial production growth\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IndustrialProductionGrowth\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"IndustrialProductionGrowth\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"infant mortality fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InfantMortalityFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InfantMortalityFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"infectious diseases\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InfectiousDiseases\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InfectiousDiseases\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"inflation rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Inflation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Inflation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"inflation expectation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InflationExpectation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InflationExpectation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"inflation rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InflationRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InflationRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"informal payments to public officials\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InformalPaymentsToPublicOfficials\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"InformalPaymentsToPublicOfficials\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"institutional money funds\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InstitutionalMoneyFunds\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InstitutionalMoneyFunds\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"intake rate in grade 1\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IntakeRateInGrade1\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IntakeRateInGrade1\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"interest rate spread\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InterestRateSpread\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InterestRateSpread\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"international migrant stock\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternationalMigrantStock\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternationalMigrantStock\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"international organizations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternationalOrganizations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"InternationalOrganizations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"international organizations observer\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternationalOrganizationsObserver\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"InternationalOrganizationsObserver\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"internet code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternetCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternetCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"internet hosts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternetHosts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternetHosts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average broadband download rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternetSpeedDownloadRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternetSpeedDownloadRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average broadband upload rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternetSpeedUploadRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternetSpeedUploadRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"internet usage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InternetUsers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InternetUsers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"inventory to sales ratio\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InventoryToSalesRatio\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"InventoryToSalesRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"investment on medical facilities\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"InvestmentOnMedicalFacilities\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"InvestmentOnMedicalFacilities\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"IP addresses\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IPCount\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IPCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total IRA and Keogh accounts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IRAKeoghAccounts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IRAKeoghAccounts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"irrigated land area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IrrigatedLandArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IrrigatedLandArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"irrigated land fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IrrigatedLandFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"IrrigatedLandFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Islamic Revolutionary Guard corps\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"IslamicRevolutionaryGuardCorps\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"IslamicRevolutionaryGuardCorps\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"firms with ISO quality certification\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ISOCertificationOwnership\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ISOCertificationOwnership\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ISO name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ISOName\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ISOName\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"International Telecommunication Union region\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ITURegion\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ITURegion\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"laboratory health workers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LaboratoryHealthWorkers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LaboratoryHealthWorkers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"laboratory health workers per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"LaboratoryHealthWorkersPopulationRatio\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"LaboratoryHealthWorkersPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"labor force\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LaborForce\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LaborForce\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"labor force fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LaborForceFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LaborForceFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"labor participation rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LaborParticipationRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LaborParticipationRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"land area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"crop land area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LandAreaCrops\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LandAreaCrops\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"languages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Languages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Languages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"language dialects\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LanguagesDialects\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LanguagesDialects\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"language fractions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LanguagesFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LanguagesFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of larcenies\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LarcenyTheft\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LarcenyTheft\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of larceny\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LarcenyTheftRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LarcenyTheftRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"largest cities\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LargestCities\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LargestCities\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"latitude\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Latitude\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Latitude\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lead time to export\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LeadTimeToExport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LeadTimeToExport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lead time to import\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LeadTimeToImport\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LeadTimeToImport\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"annual abortions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LegalAbortions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LegalAbortions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"leisure arrivals\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LeisureArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LeisureArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lending interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LendingInterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LendingInterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"license plate code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LicensePlateCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LicensePlateCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"life expectancy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LifeExpectancy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LifeExpectancy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"liner shipping connectivity index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LinerShippingConnectivityIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"LinerShippingConnectivityIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"liquid assets\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LiquidAssets\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LiquidAssets\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"literacy rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LiteracyRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LiteracyRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"livestock population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LivestockPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LivestockPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"logistics performance index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LogisticsPerformanceIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LogisticsPerformanceIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"longitude\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Longitude\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Longitude\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"long\[Hyphen]term unemployment rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LongTermUnemploymentRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LongTermUnemploymentRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"losses due to theft, robbery, vandalism, and arson\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"LossesDueToTheftRobberyVandalismAndArson\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"LossesDueToTheftRobberyVandalismAndArson\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lowest elevation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LowestElevation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LowestElevation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"lowest point\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"LowestPoint\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"LowestPoint\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"M2 interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"M2InterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"M2InterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"M2 minus interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"M2MinusInterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"M2MinusInterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"machinery and transport equipment fraction of manufacturing value \
added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"MachineryAndTransportEquipmentFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"MachineryAndTransportEquipmentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"main battle tanks\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MainBattleTanks\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MainBattleTanks\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"major industries\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MajorIndustries\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MajorIndustries\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"major ports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MajorPorts\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MajorPorts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male adult population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleAdultPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaleAdultPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male child population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleChildPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaleChildPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male elderly population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleElderlyPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaleElderlyPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male infant mortality fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleInfantMortalityFraction\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"MaleInfantMortalityFraction\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male life expectancy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleLifeExpectancy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaleLifeExpectancy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male median age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaleMedianAge\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaleMedianAge\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"male population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MalePopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MalePopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"management time dealing with officials\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ManagementTimeDealingWithOfficials\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ManagementTimeDealingWithOfficials\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"manufacturers new orders\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ManufacturersNewOrders\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ManufacturersNewOrders\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"marine corps\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MarineCorps\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MarineCorps\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"protected fraction of territorial waters\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MarineProtectedAreasFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"MarineProtectedAreasFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"maritime claims\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MaritimeClaims\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MaritimeClaims\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"meat production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MeatProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MeatProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MedianAge\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MedianAge\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median home listing time on market\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MedianDaysOnHousingMarket\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MedianDaysOnHousingMarket\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median home listing price\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MedianHomeListingPrice\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MedianHomeListingPrice\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median home listing price per square foot\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"MedianHomeListingPricePerSquareFeet\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"MedianHomeListingPricePerSquareFeet\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median home sale price\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MedianHomeSalePrice\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MedianHomeSalePrice\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median home size\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MedianHomeSizeInSquareFeet\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"MedianHomeSizeInSquareFeet\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median home value\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MedianHomeValue\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MedianHomeValue\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"median household income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MedianHouseholdIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MedianHouseholdIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"memberships\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Memberships\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Memberships\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"merchant ships\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MerchantShips\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MerchantShips\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"merchant ships dead weight\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MerchantShipsDeadWeight\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MerchantShipsDeadWeight\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"merchant ships gross\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MerchantShipsGross\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MerchantShipsGross\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"merchant ship types\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MerchantShipTypes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MerchantShipTypes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military age females\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryAgeFemales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryAgeFemales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military age males\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryAgeMales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryAgeMales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military age population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryAgePopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryAgePopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military age rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryAgeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryAgeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military expenditure fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryExpenditureFraction\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"MilitaryExpenditureFraction\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military expenditures\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryExpenditures\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryExpenditures\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military fit females\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryFitFemales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryFitFemales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military fit males\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryFitMales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryFitMales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"military fit population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MilitaryFitPopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MilitaryFitPopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"minimum wage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MinimumWage\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MinimumWage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"miscellaneous value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MiscellaneousValueAdded\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MiscellaneousValueAdded\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"mobile cellular subscriptions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MobileCellularSubscriptions\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"MobileCellularSubscriptions\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"monetary base\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MonetaryBase\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MonetaryBase\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"monetary services index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MonetaryServicesIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MonetaryServicesIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"money multiplier\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MoneyMultiplier\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MoneyMultiplier\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"money supply\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MoneySupply\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MoneySupply\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motor gasoline\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MotorGasoline\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MotorGasoline\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of motor vehicle thefts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MotorVehicleTheft\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MotorVehicleTheft\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of motor vehicle thefts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MotorVehicleTheftRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MotorVehicleTheftRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"multifactor productivity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MultifactorProductivity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MultifactorProductivity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"incidents of murder and nonnegligent manslaughter\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MurderNonnegligentManslaughter\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"MurderNonnegligentManslaughter\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of murder and nonnegligent manslaughter\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MurderNonnegligentManslaughterRate\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"MurderNonnegligentManslaughterRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"MZM interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"MZMInterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"MZMInterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Name\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Name\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"national gendarmerie\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NationalGendarmerie\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NationalGendarmerie\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"national guard\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NationalGuard\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NationalGuard\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"national income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NationalIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NationalIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"nationality name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NationalityName\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NationalityName\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"native names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NativeNames\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NativeNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas exports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalGasExports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalGasExports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas imports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalGasImports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalGasImports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas reserves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalGasReserves\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalGasReserves\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas price\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalGasSpotPrice\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalGasSpotPrice\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural hazards\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalHazards\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalHazards\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural resources\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalResources\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalResources\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural resources rents\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NaturalResourcesRents\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NaturalResourcesRents\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"navy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Navy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Navy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"neonates protected against neonatal tetanus\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"NeonatesProtectedAgainstNeonatalTetanus\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"NeonatesProtectedAgainstNeonatalTetanus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"net current transfers from abroad\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NetCurrentTransfersFromAbroad\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"NetCurrentTransfersFromAbroad\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"net income from abroad\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NetIncomeFromAbroad\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NetIncomeFromAbroad\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"net migration\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NetMigration\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NetMigration\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"newborns with low birth weight\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NewbornsWithLowBirthWeight\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"NewbornsWithLowBirthWeight\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"new businesses registered\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NewBusinessesRegistered\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NewBusinessesRegistered\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"new home listings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NewHomeListingCount\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NewHomeListingCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"newspaper circulation\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NewspaperCirculation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NewspaperCirculation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of newspaper titles\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NewspaperTitles\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NewspaperTitles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"size of nuclear stockpile\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NuclearWarheads\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NuclearWarheads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of owner\[Hyphen]occupied housing units\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NumberOfHomes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NumberOfHomes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of marine protected areas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NumberOfMarineProtectedAreas\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"NumberOfMarineProtectedAreas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"teachers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NumberOfTeachers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"NumberOfTeachers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of terrestrial protected areas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NumberOfTerrestrialProtectedAreas\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"NumberOfTerrestrialProtectedAreas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"nursing and midwifery personnel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"NursingAndMidwiferyPersonnel\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"NursingAndMidwiferyPersonnel\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"nursing and midwifery personnel per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"NursingAndMidwiferyPersonnelPopulationRatio\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"NursingAndMidwiferyPersonnelPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"official languages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OfficialLanguages\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OfficialLanguages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"oil exports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OilExports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OilExports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"oil imports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OilImports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OilImports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"oil reserves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OilReserves\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OilReserves\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"DTP immunization\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OneYearOldsImmunizedWithDTP3\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"OneYearOldsImmunizedWithDTP3\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"hepatitis B immunization\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OneYearOldsImmunizedWithHepB3\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"OneYearOldsImmunizedWithHepB3\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Hib immunization\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OneYearOldsImmunizedWithHib3\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"OneYearOldsImmunizedWithHib3\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"MCV immunization\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OneYearOldsImmunizedWithMCV\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"OneYearOldsImmunizedWithMCV\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"other arrivals\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OtherArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OtherArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"other checkable deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OtherCheckableDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OtherCheckableDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"other health service providers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OtherHealthServiceProviders\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"OtherHealthServiceProviders\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"other manufacturing fraction of manufacturing value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OtherManufacturingFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"OtherManufacturingFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"economic output\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Output\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Output\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"output per hour\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OutputPerHour\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OutputPerHour\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total hotel nights\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OvernightHotels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OvernightHotels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"overnight term Eurodollars\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OvernightTermEurodollars\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OvernightTermEurodollars\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"overnight and term RPs\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"OvernightTermRPs\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"OvernightTermRPs\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"paper and paperboard production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PaperPaperboardProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PaperPaperboardProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"part time employment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PartTimeEmployment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PartTimeEmployment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"part time employment fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PartTimeEmploymentFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"PartTimeEmploymentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"paved airport lengths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PavedAirportLengths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PavedAirportLengths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"paved airports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PavedAirports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PavedAirports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"paved roads fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PavedRoadsFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PavedRoadsFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pending home listings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PendingHomeListCount\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PendingHomeListCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"per capita income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PerCapitaIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PerCapitaIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"persistence to grade 5\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersistenceToGrade5\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PersistenceToGrade5\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"persistence to last grade of primary\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersistenceToLastGradeOfPrimary\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PersistenceToLastGradeOfPrimary\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"personal consumption expenditures\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersonalConsumptionExpenditures\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PersonalConsumptionExpenditures\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"personal income\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersonalIncome\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PersonalIncome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"personal saving\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersonalSaving\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PersonalSaving\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"personal saving rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PersonalSavingRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PersonalSavingRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"crude oil\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumCrudeOil\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumCrudeOil\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"crude oil\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumCrudeOilBarrels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumCrudeOilBarrels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas plant liquids\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumNGPL\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumNGPL\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"natural gas plant liquids\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumNGPLBarrels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumNGPLBarrels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total petroleum\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"petroleum\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PetroleumTotalBarrels\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PetroleumTotalBarrels\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pharmaceutical personnel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PharmaceuticalPersonnel\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PharmaceuticalPersonnel\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pharmaceutical personnel per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"PharmaceuticalPersonnelPopulationRatio\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PharmaceuticalPersonnelPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"physicians\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Physicians\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Physicians\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"physicians per capita\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PhysiciansPopulationRatio\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PhysiciansPopulationRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pipelines\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Pipelines\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Pipelines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"PMI composite index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PMICompositeIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PMICompositeIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"polygon\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Polygon\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Polygon\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Population\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Population\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by educational attainment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationByEducationalAttainment\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PopulationByEducationalAttainment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by migration in previous 12 months\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationByGeographicalMobility\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PopulationByGeographicalMobility\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by language spoken at home\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationByLanguageSpokenAtHome\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PopulationByLanguageSpokenAtHome\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by marital status\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationByMaritalStatus\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PopulationByMaritalStatus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by poverty status\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationByPovertyStatus\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PopulationByPovertyStatus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population by school enrollment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationBySchoolEnrollment\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PopulationBySchoolEnrollment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationDensity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PopulationDensity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"population growth\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PopulationGrowth\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PopulationGrowth\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"center coordinates\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Position\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Position\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"potential GDP\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PotentialGrossDomesticProduct\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PotentialGrossDomesticProduct\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"poverty gap\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PovertyGap\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PovertyGap\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"poverty fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PovertyHeadcount\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PovertyHeadcount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"PPP conversion factor gdp\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PPPConversionFactorGDP\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PPPConversionFactorGDP\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"PPP conversion factor for private consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"PPPConversionFactorPrivateConsumption\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PPPConversionFactorPrivateConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"presidential guard\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PresidentialGuard\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PresidentialGuard\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PriceIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PriceIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"primary credit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrimaryCredit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PrimaryCredit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"private credit bureau coverage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrivateCreditBureauCoverage\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"PrivateCreditBureauCoverage\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"private domestic investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrivateDomesticInvestment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PrivateDomesticInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"private fixed investment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrivateFixedInvestment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PrivateFixedInvestment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"private inventories change\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrivateInventoriesChange\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PrivateInventoriesChange\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"private saving\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PrivateSaving\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PrivateSaving\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"producer price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ProducerPriceIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ProducerPriceIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"progression to secondary school\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ProgressionToSecondarySchool\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ProgressionToSecondarySchool\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total rate of property crime\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PropertyCrimeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PropertyCrimeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total number of property crimes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PropertyCrimeTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PropertyCrimeTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"proportion of seats held by women in national parliaments\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"ProportionOfSeatsHeldByWomenInNationalParliaments\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ProportionOfSeatsHeldByWomenInNationalParliaments\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"public credit registry coverage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PublicCreditRegistryCoverage\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PublicCreditRegistryCoverage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"public spending on education\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PublicSpendingOnEducation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PublicSpendingOnEducation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"public education spending\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PublicSpendingOnEducationFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"PublicSpendingOnEducationFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pump price for diesel fuel\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PumpPriceForDieselFuel\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PumpPriceForDieselFuel\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"pump price for gasoline\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PumpPriceForGasoline\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PumpPriceForGasoline\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"students\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Pupils\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Pupils\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"fraction of students\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PupilsFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PupilsFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"student/teacher ratio\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"PupilTeacherRatio\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"PupilTeacherRatio\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"quality of port infrastructure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"QualityOfPortInfrastructure\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"QualityOfPortInfrastructure\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"radio receivers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RadioReceivers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RadioReceivers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"radio stations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RadioStations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RadioStations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"arrivals by rail\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RailArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RailArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"railway length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RailLines\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RailLines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"railway gauge lengths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RailwayGaugeLengths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RailwayGaugeLengths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"railway gauge rules\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RailwayGaugeRules\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RailwayGaugeRules\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rail transport\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Railways\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Railways\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ratio of female to male students\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RatioOfFemaleToMale\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RatioOfFemaleToMale\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ratio of young literate female to male\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RatioOfYoungLiterateFemaleToMale\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RatioOfYoungLiterateFemaleToMale\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"real effective exchange rate index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RealEffectiveExchangeRateIndex\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RealEffectiveExchangeRateIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"real interest rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RealInterestRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RealInterestRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"refinery gain/loss\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RefineryProcessingGain\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RefineryProcessingGain\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"refinery production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RefineryTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RefineryTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"refugees from other countries\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RefugeePopulationAsylum\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RefugeePopulationAsylum\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"refugees in other countries\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RefugeePopulationOrigin\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RefugeePopulationOrigin\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"region names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RegionNames\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RegionNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"religions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReligionsFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReligionsFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"renewable internal freshwater resources\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"RenewableInternalFreshwaterResources\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RenewableInternalFreshwaterResources\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rental income of persons\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RentalIncomeOfPersons\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RentalIncomeOfPersons\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"students repeating a grade\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Repeaters\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Repeaters\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"required reserves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RequiredReserves\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RequiredReserves\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"research and development researchers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ResearchDevelopmentScientists\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ResearchDevelopmentScientists\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve adjustment magnitude\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveAdjustmentMagnitude\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"ReserveAdjustmentMagnitude\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve air force\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveAirForce\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveAirForce\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve army\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveArmy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveArmy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve balances\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveBalances\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveBalances\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve bank credit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveBankCredit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveBankCredit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve marine corps\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveMarineCorps\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveMarineCorps\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserve navy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ReserveNavy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ReserveNavy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"reserves\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Reserves\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Reserves\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"retail money funds\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RetailMoneyFunds\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RetailMoneyFunds\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"retail sales\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RetailSales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RetailSales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"risk premium on lending\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RiskPremiumOnLending\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RiskPremiumOnLending\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road accidents causing injury\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadAccidentsInjuryAccidents\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsInjuryAccidents\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road accidents causing injury per amount of traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsInjuryAccidentsPerHundredMillionVehicleKilometers\""}\
], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsInjuryAccidentsPerHundredMillionVehicleKilometers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road accidents causing injury per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsInjuryAccidentsPerHundredThousandPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsInjuryAccidentsPerHundredThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people injured in road accidents\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadAccidentsPeopleInjured\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleInjured\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people injured in road accidents per amount of traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsPeopleInjuredPerHundredMillionVehicleKilometers\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleInjuredPerHundredMillionVehicleKilometers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people injured in road accidents per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsPeopleInjuredPerHundredThousandPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleInjuredPerHundredThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people killed in road accidents\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadAccidentsPeopleKilled\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadAccidentsPeopleKilled\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people killed in road accidents per amount of traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsPeopleKilledPerHundredMillionVehicleKilometers\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleKilledPerHundredMillionVehicleKilometers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"people killed in road accidents per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"RoadAccidentsPeopleKilledPerHundredThousandPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadAccidentsPeopleKilledPerHundredThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"arrivals by road\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"highways density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkHighwaysDensity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkHighwaysDensity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"length of highways\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkHighwaysLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkHighwaysLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motorways density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkMotorwaysDensity\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkMotorwaysDensity\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"length of motorways\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkMotorwaysLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkMotorwaysLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"other roads density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkOthersDensity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkOthersDensity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"length of other road types\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkOthersLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkOthersLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total road density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkRoadDensity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkRoadDensity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"secondary roads density\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkSecondaryRoadsDensity\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkSecondaryRoadsDensity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"length of secondary roads\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkSecondaryRoadsLength\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadNetworkSecondaryRoadsLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadNetworkTotalLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadNetworkTotalLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road transport\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Roads\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Roads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road sector diesel fuel consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadSectorDieselFuelConsumption\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadSectorDieselFuelConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road sector energy consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadSectorEnergyConsumption\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"RoadSectorEnergyConsumption\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road sector energy consumption fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"RoadSectorEnergyConsumptionFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadSectorEnergyConsumptionFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"road sector gasoline fuel consumption\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadSectorGasolineFuelConsumption\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"RoadSectorGasolineFuelConsumption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"bus traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadTrafficBuses\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficBuses\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motorcycle traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadTrafficMotorcycles\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficMotorcycles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"passenger car traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadTrafficPassengerCars\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficPassengerCars\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total road traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadTrafficTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"truck and van traffic\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoadTrafficTrucksAndVans\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoadTrafficTrucksAndVans\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of robberies\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Robbery\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Robbery\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"rate of robbery\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RobberyRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RobberyRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"roundwood production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"RoundwoodProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"RoundwoodProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"saving\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Saving\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Saving\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"savings deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SavingsDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SavingsDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"savings and small time deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SavingsSmallTimeDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SavingsSmallTimeDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"sawnwood production\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SawnwoodProduction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SawnwoodProduction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"schematic polygon\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SchematicPolygon\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SchematicPolygon\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"school enrollment fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SchoolEnrollmentFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SchoolEnrollmentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"seasonal bank borrowings from Fed\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SeasonalBorrowings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SeasonalBorrowings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"sector labor fractions\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SectorLaborFractions\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SectorLaborFractions\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"secure internet servers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SecureInternetServers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SecureInternetServers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"securities lent to dealers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SecuritiesLentToDealers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SecuritiesLentToDealers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"self employed\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SelfEmployed\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SelfEmployed\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"self employed fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SelfEmployedFraction\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SelfEmployedFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"service related deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ServiceRelatedDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ServiceRelatedDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"shape\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Shape\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Shape\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"share of women employed\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ShareOfWomenEmployed\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ShareOfWomenEmployed\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"short wave radio stations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ShortWaveRadioStations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ShortWaveRadioStations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"signed environmental agreements\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SignedEnvironmentalAgreements\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"SignedEnvironmentalAgreements\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"spot oil price\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SpotOilPrice\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SpotOilPrice\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"school starting age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"StartingAge\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"StartingAge\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"start up procedures to register a business\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"StartUpProceduresToRegisterABusiness\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"StartUpProceduresToRegisterABusiness\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"statistical discrepancy\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"StatisticalDiscrepancy\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"StatisticalDiscrepancy\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"strength of legal rights\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"StrengthOfLegalRightsIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"StrengthOfLegalRightsIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"submarines\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Submarines\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Submarines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"suffrage type\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"SuffrageType\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"SuffrageType\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"target federal funds rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TargetFederalFundsRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TargetFederalFundsRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"number of business taxes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TaxPayments\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TaxPayments\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"telephone lines\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TelephoneLines\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TelephoneLines\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"television receivers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TelevisionReceivers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TelevisionReceivers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"television stations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TelevisionStations\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TelevisionStations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"terms of trade adjustment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TermsOfTradeAdjustment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TermsOfTradeAdjustment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"terrain types\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TerrainTypes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TerrainTypes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"terrestrial protected areas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TerrestrialProtectedAreas\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TerrestrialProtectedAreas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{
    "\"textiles and clothing fraction of manufacturing value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TextilesAndClothingFraction\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"TextilesAndClothingFraction\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"time deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TimeDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical time required to build a warehouse\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeRequiredToBuildAWarehouse\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToBuildAWarehouse\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical time required to enforce a contract\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeRequiredToEnforceAContract\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToEnforceAContract\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical time required to obtain an operating license\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"TimeRequiredToObtainAnOperatingLicense\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToObtainAnOperatingLicense\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical time required to register property\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeRequiredToRegisterProperty\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToRegisterProperty\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typical time required to start a business\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeRequiredToStartABusiness\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TimeRequiredToStartABusiness\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total time and savings deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeSavingsDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TimeSavingsDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"time to prepare and pay taxes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeToPrepareAndPayTaxes\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TimeToPrepareAndPayTaxes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"time to resolve insolvency\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeToResolveInsolvency\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TimeToResolveInsolvency\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"time zones\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TimeZones\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TimeZones\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"current tobacco use among adolescents\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TobaccoUseAdolescents\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TobaccoUseAdolescents\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"current tobacco use among adults\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TobaccoUseAdults\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TobaccoUseAdults\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total annual visitors\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total borrowings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalBorrowings\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalBorrowings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total registered businesses\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalBusinessesRegistered\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalBusinessesRegistered\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total business inventory\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalBusinessInventory\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalBusinessInventory\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total business tax rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalBusinessTaxRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalBusinessTaxRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total fertility rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TotalFertilityRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TotalFertilityRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trade value\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Trade\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Trade\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trade balance\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TradeBalance\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TradeBalance\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trade deficit\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TradeDeficit\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TradeDeficit\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trade value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TradeValueAdded\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TradeValueAdded\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trade-weighted exchange index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TradeWeightedExchangeIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"TradeWeightedExchangeIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"transportation value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TransportationValueAdded\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TransportationValueAdded\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"traveler's checks outstanding\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TravelersChecksOutstanding\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"TravelersChecksOutstanding\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"treasury security\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Treasury\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Treasury\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"treasury average yield\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TreasuryAverageYield\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TreasuryAverageYield\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"treasury deposits\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TreasuryDeposits\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"TreasuryDeposits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"treasury securities composite rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"TreasurySecuritiesCompositeRate\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"TreasurySecuritiesCompositeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"UN code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UNCode\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UNCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unemployed people\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Unemployment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Unemployment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unemployment average duration\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnemploymentAverageDuration\""}], "]"}],
      "\"EntityProperty[\\\"Country\\\", \\\"UnemploymentAverageDuration\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unemployment median duration\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnemploymentMedianDuration\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"UnemploymentMedianDuration\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unemployment rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnemploymentRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnemploymentRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unilateral current transfers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnilateralCurrentTransfers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"UnilateralCurrentTransfers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unit labor cost\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitLaborCost\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnitLaborCost\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unit nonlabor cost\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitNonlaborCost\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnitNonlaborCost\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"UN number\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UNNumber\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UNNumber\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unpaved airport lengths\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnpavedAirportLengths\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnpavedAirportLengths\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unpaved airports\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnpavedAirports\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnpavedAirports\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unpaved road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnpavedRoadLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"UnpavedRoadLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unweighted sample housing units\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnweightedSampleHousingUnits\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"UnweightedSampleHousingUnits\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"unweighted sample population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"UnweightedSamplePopulation\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"UnweightedSamplePopulation\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"uranium\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Uranium\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Uranium\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"change in US owned assets abroad\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"USOwnedAssetsAbroad\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"USOwnedAssetsAbroad\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"GDP value added\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ValueAdded\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ValueAdded\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"losses due to electrical outages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ValueLostDueToElectricalOutages\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"ValueLostDueToElectricalOutages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"vault cash\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VaultCash\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VaultCash\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"vehicle sales\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehicleSales\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VehicleSales\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"buses in use\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehiclesInUseBuses\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VehiclesInUseBuses\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"buses in use per road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"VehiclesInUseBusesPerKilometersOfRoads\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseBusesPerKilometersOfRoads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"buses in use per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"VehiclesInUseBusesPerThousandPeople\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseBusesPerThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motorcycles in use\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehiclesInUseMotorcycles\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VehiclesInUseMotorcycles\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motorcycles in use per road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"VehiclesInUseMotorcyclesPerKilometersOfRoads\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseMotorcyclesPerKilometersOfRoads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"motorcycles in use per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"VehiclesInUseMotorcyclesPerThousandPeople\""}],
        "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseMotorcyclesPerThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"passenger cars in use\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehiclesInUsePassengerCars\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUsePassengerCars\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"passenger cars in use per road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"VehiclesInUsePassengerCarsPerKilometersOfRoads\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUsePassengerCarsPerKilometersOfRoads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"passenger cars in use per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"VehiclesInUsePassengerCarsPerThousandPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUsePassengerCarsPerThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total vehicles in use\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehiclesInUseTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VehiclesInUseTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total vehicles in use per road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"VehiclesInUseTotalPerKilometersOfRoads\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTotalPerKilometersOfRoads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total vehicles in use per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", "\"VehiclesInUseTotalPerThousandPeople\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTotalPerThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trucks and vans in use\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VehiclesInUseTrucksAndVans\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTrucksAndVans\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trucks and vans in use per road length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"VehiclesInUseTrucksAndVansPerKilometersOfRoads\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTrucksAndVansPerKilometersOfRoads\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"trucks and vans in use per population\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"Country\"", ",", 
         "\"VehiclesInUseTrucksAndVansPerThousandPeople\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \
\\\"VehiclesInUseTrucksAndVansPerThousandPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total rate of violent crime\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ViolentCrimeRate\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ViolentCrimeRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"total number of violent crimes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"ViolentCrimeTotal\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"ViolentCrimeTotal\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"vulnerable employment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VulnerableEmployment\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"VulnerableEmployment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"vulnerable employment fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"VulnerableEmploymentFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"VulnerableEmploymentFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"wage and salaried workers\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WageAndSalariedWorkers\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WageAndSalariedWorkers\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"wage and salaried workers fraction\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WageAndSalariedWorkersFraction\""}], 
       "]"}], "\"EntityProperty[\\\"Country\\\", \
\\\"WageAndSalariedWorkersFraction\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"wage cost index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WagesCostIndex\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WagesCostIndex\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"water area\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WaterArea\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WaterArea\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"arrivals by sea\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WaterArrivals\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WaterArrivals\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"water productivity\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WaterProductivity\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WaterProductivity\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"waterway length\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WaterwayLength\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WaterwayLength\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"employment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"Workforce\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"Workforce\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"wholesale price index\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Country\"", ",", "\"WPI\""}], "]"}], 
     "\"EntityProperty[\\\"Country\\\", \\\"WPI\\\"]\""},
    "EntityProperty"]}], "}"}]], "Input",
 CellChangeTimes->{{3.886757548964019*^9, 
  3.886757550735982*^9}},ExpressionUUID->"a124b559-7e5c-49fb-a82f-\
68bf1fc0e27e"],

Cell["\<\
Katera entiteta podaja povr\[SHacek]ino dr\[ZHacek]ave? Dolo\[CHacek]i povr\
\[SHacek]ino Slovenije.\
\>", "Text",
 CellChangeTimes->{{3.824282171373453*^9, 3.8242822430401754`*^9}, {
  3.8242823503769093`*^9, 3.8242823623521137`*^9}, {3.8242825520470743`*^9, 
  3.8242825580614233`*^9}},ExpressionUUID->"32bd6f13-fdab-472c-8b8a-\
b5a0d3734f1f"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"\"total area\"", 
   RowBox[{"EntityProperty", "[", 
     RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
   "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
  "EntityProperty"]], "Input",
 CellChangeTimes->{{3.8867576095726767`*^9, 3.886757620163183*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"c19f2f99-d85c-4166-b7f3-82ebe2d2f935"],

Cell[BoxData[
 TemplateBox[{"\"total area\"", 
   RowBox[{"EntityProperty", "[", 
     RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
   "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
  "EntityProperty"]], "Output",
 CellChangeTimes->{3.886757625331542*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"6afaf77a-ebe3-4b07-9a02-5be69c3821c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityTypeName", "[", 
  TemplateBox[{"\"total area\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
   "EntityProperty"], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[7]:=",ExpressionUUID->"8a7f412c-1428-43a1-a24e-a11e0850ef33"],

Cell[BoxData["\<\"Country\"\>"], "Output",
 CellChangeTimes->{3.8867576293161144`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"8bdc1d89-9d39-4802-98cb-f878ee3d97e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"total area\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
   "EntityProperty"], "Slovenia"}]], "Input",
 CellChangeTimes->{{3.8867576544727225`*^9, 3.8867576558997264`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"dee27d6f-b1b8-44ce-bfd0-aab27c097d12"],

Cell[BoxData[
 RowBox[{"Slovenia", " ", 
  TemplateBox[{"\"total area\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Country\"", ",", "\"Area\""}], "]"}], 
    "\"EntityProperty[\\\"Country\\\", \\\"Area\\\"]\""},
   "EntityProperty"]}]], "Output",
 CellChangeTimes->{3.8867576574046917`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"49807db9-8b47-4753-8a78-069521650851"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalName", "[", 
  TemplateBox[{"\"land area\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
    "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
   "EntityProperty"], "]"}]], "Input",
 CellChangeTimes->{{3.8867577112489624`*^9, 3.886757754917163*^9}, 
   3.886758138513592*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"01a89be5-79ba-4866-99ed-3f96b7632dde"],

Cell[BoxData["\<\"LandArea\"\>"], "Output",
 CellChangeTimes->{3.8867579014163885`*^9, 3.8867581403482356`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"1c3976ca-39d2-49bd-9c57-3d1f6060125c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seznam_povrsin", " ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"m", "->", " ", 
     RowBox[{
      TemplateBox[{"\"land area\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
        "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
       "EntityProperty"], "[", "m", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "seznam"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.886758021818594*^9, 3.886758076941164*^9}, {
  3.8867581484545975`*^9, 3.886758168095677*^9}, {3.8867582154403105`*^9, 
  3.8867582198227215`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"cd28cb29-7517-44a2-a514-11f46aa24293"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"82445.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belgium\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"30278.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"108489.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Croatia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"55974.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cyprus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"9241.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Czech Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"77247.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Denmark\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"42434.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Estonia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"42388.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Finland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"303815.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"France\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"549970.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Germany\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"348672.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Greece\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"130800.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Hungary\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"89608.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Ireland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"68883.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Italy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"294140.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Latvia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"62249.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Lithuania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"62680.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Luxembourg\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2586.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Malta\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"316.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Netherlands\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"33893.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Poland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"304255.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Portugal\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"91470.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Romania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"229891.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovakia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"48105.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"20151.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Spain\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"498980.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Sweden\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"410335.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.886758078987518*^9, 3.886758159283634*^9, {3.8867581960562143`*^9, 
   3.886758221655659*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"4ac8014c-570e-471d-a037-f2b1a168728e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8867579056449957`*^9, 3.886757913148655*^9}, {
  3.886757946355514*^9, 
  3.8867579613718147`*^9}},ExpressionUUID->"9f347592-b7b1-4e35-b900-\
e3075db89e1b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Belgium\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Croatia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Cyprus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Czech Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Denmark\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Estonia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Finland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"France\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Germany\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Greece\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Hungary\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Ireland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Italy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Latvia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Lithuania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Luxembourg\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Malta\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Netherlands\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Poland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Portugal\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Romania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Slovakia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Slovenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Spain\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
     "Entity"], ",", 
    TemplateBox[{"\"Sweden\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""},
     "Entity"]}], "}"}], "[", "\<\"Area\"\>", "]"}]], "Output",
 CellChangeTimes->{3.886757914314011*^9, 3.886757951805442*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"3eb48639-1d0d-4251-8ccc-405ed0a9ca30"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8867579315400248`*^9, 
  3.8867579539511957`*^9}},ExpressionUUID->"7d1e8539-fbfb-413d-9c86-\
cc3c7cde9a7b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886757777608261*^9, 3.886757858080939*^9}, 
   3.8867578994499807`*^9},ExpressionUUID->"291225b6-2eae-46db-bcb2-\
a5976fef65c4"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8867578960265603`*^9, 
  3.8867578960505743`*^9}},ExpressionUUID->"e41cc48e-17ab-4640-918f-\
1a14a395ae0d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8867575775630198`*^9, 
  3.8867575846761813`*^9}},ExpressionUUID->"69bbabb8-477d-4e34-b5c9-\
c69764118a64"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Priprava seznamov", "Subsection",
 CellChangeTimes->{{3.8242831376355333`*^9, 
  3.824283155659627*^9}},ExpressionUUID->"2ebdb9ca-467a-4df5-82a1-\
97a6c8e4264d"],

Cell["Definiraj seznam povr\[SHacek]in vseh dr\[ZHacek]av Evropske unije.", \
"Text",
 CellChangeTimes->{{3.8242831618588204`*^9, 
  3.8242831773672743`*^9}},ExpressionUUID->"6de16e4b-bba7-4fa2-8d03-\
c9ceb2d797bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"novseznam", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"m", "->", " ", 
     RowBox[{
      TemplateBox[{"\"land area\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
        "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
       "EntityProperty"], "[", "m", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "seznam"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8867582429658337`*^9, 3.886758256414528*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"2361a50e-3a54-403b-b69c-979f1ed430e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"82445.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belgium\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"30278.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"108489.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Croatia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"55974.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cyprus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"9241.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Czech Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"77247.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Denmark\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"42434.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Estonia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"42388.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Finland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"303815.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"France\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"549970.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Germany\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"348672.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Greece\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"130800.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Hungary\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"89608.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Ireland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"68883.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Italy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"294140.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Latvia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"62249.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Lithuania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"62680.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Luxembourg\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2586.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Malta\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"316.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Netherlands\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"33893.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Poland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"304255.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Portugal\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"91470.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Romania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"229891.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovakia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"48105.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"20151.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Spain\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"498980.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Sweden\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"410335.`", 
      RowBox[{
        SuperscriptBox["\"km\"", "2"]}], "kilometers squared", 
      SuperscriptBox["\"Kilometers\"", "2"]},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8867582377601333`*^9, 3.886758258381091*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"4317407a-f53d-431c-8a82-0158ef57397e"]
}, Open  ]],

Cell["\<\
Definiraj seznam, ki bo vseboval obseg vsake dr\[ZHacek]ave (tj. \
dol\[ZHacek]ino njene dr\[ZHacek]avne meje).\
\>", "Text",
 CellChangeTimes->{{3.8242832759511766`*^9, 
  3.824283369824444*^9}},ExpressionUUID->"f9df6d2d-a853-4d1d-8d29-\
afd0c49f9224"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meje", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"m", "->", 
     RowBox[{
      TemplateBox[{"\"full boundary length\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Country\"", ",", "\"BoundaryLength\""}], "]"}], 
        "\"EntityProperty[\\\"Country\\\", \\\"BoundaryLength\\\"]\""},
       "EntityProperty"], "[", "m", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "seznam"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.886758314305831*^9, 3.88675832355044*^9}, {
  3.8867583748726206`*^9, 3.8867583855586615`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"73083b65-625f-4c6f-b492-310ab6c73514"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2562.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belgium\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1451.5`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2162.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Croatia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"7817.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cyprus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"648.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Czech Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1904.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Denmark\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"7382.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Estonia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"4427.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Finland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"3904.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"France\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"6316.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Germany\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"6094.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Greece\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"14904.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Hungary\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2177.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Ireland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1808.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Italy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"9499.2`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Latvia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1880.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Lithuania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1664.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Luxembourg\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"359.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Malta\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"196.8`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Netherlands\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1478.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Poland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"3487.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Portugal\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"3007.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Romania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2736.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovakia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1474.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1132.6`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Spain\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"6881.9`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Sweden\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"5451.`", "\"km\"", "kilometers", "\"Kilometers\""},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8867584127800035`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"c1e75912-ba8e-45b2-99b8-d9127d826517"]
}, Open  ]],

Cell["\<\
Definiraj seznam, ki bo vseboval razmerje povr\[SHacek]ina/dol\[ZHacek]ina \
meje za vsako dr\[ZHacek]avo.\
\>", "Text",
 CellChangeTimes->{{3.824284113421982*^9, 
  3.824284141405942*^9}},ExpressionUUID->"c263b8a7-c8c6-41b2-a8ed-\
56d3cc25afd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"razmerja", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"m", "->", 
     RowBox[{
      TemplateBox[{"\"land area\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
        "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
       "EntityProperty"], "/", 
      RowBox[{
       TemplateBox[{"\"full boundary length\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"Country\"", ",", "\"BoundaryLength\""}], "]"}], 
         "\"EntityProperty[\\\"Country\\\", \\\"BoundaryLength\\\"]\""},
        "EntityProperty"], "[", "m", "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "seznam"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8867584205195293`*^9, 3.8867584326205573`*^9}, {
  3.886758560300454*^9, 3.886758578156979*^9}, {3.88675861051206*^9, 
  3.886758623967249*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"9c801a10-094e-4960-a8cd-f2aa32738ed6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00039032006245121`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belgium\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0006889424733034792`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00046253469010175765`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Croatia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0001279263144428809`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cyprus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0015432098765432098`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Czech Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0005252100840336134`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Denmark\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.000135464643727987`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Estonia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00022588660492432798`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Finland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00025614754098360657`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"France\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00015832805573147562`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Germany\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00016409583196586806`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Greece\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00006709608158883521`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Hungary\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00045934772622875517`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Ireland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0005530973451327434`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Italy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00010527202290719218`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Latvia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0005319148936170213`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Lithuania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0006009615384615385`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Luxembourg\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.002785515320334262`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Malta\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00508130081300813`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Netherlands\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0006765899864682003`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Poland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00028677946659019213`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Portugal\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0003325573661456601`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Romania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0003654970760233918`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovakia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0006784260515603799`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.0008829242450997703`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Spain\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.00014530870835089145`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Sweden\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"land area\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Country\"", ",", "\"LandArea\""}], "]"}], 
       "\"EntityProperty[\\\"Country\\\", \\\"LandArea\\\"]\""},
      "EntityProperty"], " ", 
     RowBox[{"(", 
      TemplateBox[{"0.000183452577508714`", 
        RowBox[{"\"/\"", "\[InvisibleSpace]", "\"km\""}], 
        "reciprocal kilometers", 
        FractionBox["1", "\"Kilometers\""]},
       "Quantity"], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.88675857928057*^9, {3.886758617422533*^9, 3.886758625054406*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"af57f358-59fe-4f7e-84ba-d29dac42a15b"]
}, Open  ]],

Cell["Definiraj \[SHacek]e seznam, ki vsebuje BDP za vsako dr\[ZHacek]avo.", \
"Text",
 CellChangeTimes->{{3.824284184952864*^9, 
  3.8242842185739183`*^9}},ExpressionUUID->"0259aba5-14f9-4345-a419-\
3167ddd68e15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BDP", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"m", "->", 
     RowBox[{
      TemplateBox[{"\"GDP\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Country\"", ",", "\"GDP\""}], "]"}], 
        "\"EntityProperty[\\\"Country\\\", \\\"GDP\\\"]\""},
       "EntityProperty"], "[", "m", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "seznam"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8867586384807725`*^9, 3.8867586921878157`*^9}, {
  3.8867588136441607`*^9, 3.886758817744413*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"75fa62ab-57a8-4271-97c9-f6dc798b74b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Austria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"4.33258467676515`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Belgium\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"5.21861292586616`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Bulgaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"6.98893474334324`*^10", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Croatia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"5.72037832030259`*^10", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Cyprus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2.46126464877213`*^10", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Czech Republic\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2.45339322066759`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Denmark\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"3.56084867685639`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Estonia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"3.06502854717215`*^10", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Finland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2.69594831987549`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"France\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2.63031773145526`*^12", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Germany\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"3.84641392865371`*^12", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Greece\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1.8883520162591`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Hungary\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1.55808436238487`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Ireland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"4.25888950992003`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Italy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1.88870944368748`*^12", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Latvia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"3.37073208163036`*^10", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Lithuania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"5.65469574754912`*^10", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Luxembourg\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"7.33531327937076`*^10", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Malta\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1.4647384607604`*^10", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Netherlands\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"9.13865395789886`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Poland\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"5.96624355719671`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Portugal\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2.28539245045341`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Romania\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"2.48715551366635`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovakia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1.05172564491569`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Slovenia\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"5.35896095807099`*^10", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Spain\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1.28148464004358`*^12", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Sweden\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
      "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"5.4122005945925`*^11", 
      RowBox[{
        FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"year\""}], 
      "US dollars per year", 
      FractionBox["\"USDollars\"", "\"Years\""]},
     "QuantityPrefixUnit"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8867587195879393`*^9, 3.886758845183427*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"6a1e1f2d-688f-4734-a546-32fa2a8a3d84"]
}, Open  ]],

Cell["\<\
V istem koordinatnem sistemu predstavi BDP in razmerje povr\[SHacek]ina/dol\
\[ZHacek]ina meje za vsako dr\[ZHacek]avo.\
\>", "Text",
 CellChangeTimes->{{3.8242844826511707`*^9, 
  3.8242845350826993`*^9}},ExpressionUUID->"88cbd3b9-e0f2-46f1-ac7e-\
0da06423e561"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GeoBubbleChart", "[", 
   RowBox[{"BDP", ",", 
    RowBox[{"GeoRange", "->", "seznam"}]}], "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.8867588799599686`*^9, 3.886758891919044*^9}, {
  3.8867589551175776`*^9, 3.886758956367457*^9}, {3.88675899190355*^9, 
  3.886759091861243*^9}, {3.886759133523707*^9, 3.8867592011458483`*^9}, {
  3.886759324534964*^9, 3.8867593324691486`*^9}, {3.88675940243839*^9, 
  3.8867594620993276`*^9}, {3.886759534866085*^9, 3.8867595873103848`*^9}, {
  3.886759635074687*^9, 3.8867596533997145`*^9}, {3.886759720369913*^9, 
  3.8867597815799894`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"df2f99fb-f16c-48cb-b242-9cde327a2d24"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJzsvVlzHFmapjcm6UKX+gv6F7rVpW5Hph8wI7XGdNMy65GZTN2yNmtNT9vM
qK1mutuqqruqi5V7Vq6V3JNrJrElCQJcAIIkVhJAAEmQIItbktmqklzxHI/X
4/MTxz08NjiWc/HCd/fjS7ifB9/2X//L//Wf/8//2T/7Z//sX/+XzT///F/8
7//tn/zJv/g//vv/qjnxP/zxv/5f/tUf/9H/9N/98f/2R//qj/7kv/mX/3lz
5v/Y/PPnTf0XzfHk//t90k1v//CH5OU//ZNT4+XL5PLqVvLl7UbyznebmU4s
NJKz91Ox3g+/T7ezYt7y7gu3Ltv7+5je3k4mNrbc/h/+7kVuHxpnSBuevHmT
zD954tbXUNuz34vLW9kxEO06v5SuI9149CgbX3r2zO2HfUscIyR7LbQeQ/bH
PtDa8+fJ73780Yk2sz7rMa3t7Xq6xgzf/P7/SbZevUru7u66dnFO7Pvp27dO
y0+fZ22+vb3r1mVc539hZSu7prouXFN77tKdZhtC8znGxosXbnz+8Vby6nW6
PW3ieOn128quI/PVXi3n3LSc4yDGbz9+7MR6rMN2nLu247hcA10T1rX36/vX
r7N5ZaItOz/8kF0frjPbIq4j0xyHY3BMXXOu6UczjeTD6w03RPY5Dem7lUZy
qfl8nb2fXnv/2f71VFNji+lwqnxfUVFRUVFRh136Hu7L7+LYUvLr8ZXk1xNr
ya+v3E3FuL7lzXF3Dq3xYbbfHYv9No+veV/eupOcmLueXF4674bn7l5ILiye
SI7PjScfXb+bfDC9XGnfT180kj/8uDUSLW03OvZf5Xj/9Kb7Ondmz2Xqt31v
fqh2rKpaX55KVu6OJbeunixd7/Wr0VzvKtI1W5y/nM2rwnxwi3iLIX11np+Z
rce55wm2gi++fbCV4zVEHxvmg72Qz30nbm8mF+6mfMZ8y3mWm8Ra898/zZhm
arXhxk/fze9Tx9AxkfiH9cWBYjX2Cx/AF5yjWFDHtdymaV0X8R3rw6xa1/Ki
z3diPpZxTObBJOKrOy2eZRkctvD4qRtebPHFxzObydT6juMU1kOf3thMPpxO
z/+9q+k10DnvvmgzEev6zMdxxFZwkNgK5tPzAhvZZeIrDeEp8ZtjqNZ6a8/T
68oyy3FiQ9sGWI3rwHXifGmn3aYK80msq/Yh9k0bGYo33/7h947/aOPMVno9
GY6tPcq4j2vK9Sx7n54z3Bd6jx+7ML1/v3FRUVFRUVF7pP3KfI71YK4Wd2Xj
sBjTYkDNs+MsH+Bc3LUwnGmXwXdw3tm7Zxz7nbt30k0zFPdJZceAw/7p7XDZ
wt+fpjWsyn4vX46O+Z69SPkL9hvGOT/buZtsrk479vvx9YPS8xoFz3E+VZnP
v24+44XYT/YpGIV+OrY0bHZw3MWlR7lnCuaDycSIsCHrMM/yF4xnt7PTYghx
FH19n/ngQzgP5lvdafPe6bl0H0yzH2vjg3/EfnY+x+B4Yj47n6GOK0YTi3K9
7DzZ/KxdUEMxn92Wa6nzYx7rcjzsdfADDIfgDhgP3mMa/mCa+UzDcNwP8Ymu
I9dA68N8SDY6trmylh7Ht3/CQ3AR4yu7hvlebGUM52/D0Nr6OOeQ/Q0OE1+G
GE7cB+9xfdif7IRs7zNgiPVov5jPPy+YlX0wFFuzHiyo9iOYD32z+sg9Z1zD
btwXfI/zDm9pv3/voqKioqKiRql9+/2bXEu5zZOz+zW5Lmt7ywbnvust3nPb
WgZsrd/X9ZlI2+H22bo+MJ8k3oP9Li195nTqzkXHfp/fnO3KfR9Od9rkhsl8
vS6XtnfD7BdiF3gLG9uTrblK+2af4r6hnXezrbDfy6dLjvvK2K8OlbGy74dJ
f91nQcs39I1hDHGMtdths2NcbAbvIetviWC84zfDzyTL2T/bw4y2b89+NU5f
XPyp47PfIn9Gy34hHpFtz18m3tP5y95nr5nW8VlH86ztz/qIyi9UtkcNORfx
nhhPPKd5yHJhkS+iXff0fNv2SfvEfUzb6wwTwV4s03NibYUsh8lkrxPLyV8y
xGOa53MePqTW1ghT6vjwl3wzdY9gNR1b/qL2GFondI/FffY87D5kj5TNEubj
GvCs6b708m1zw5ZvyIH6/kVFRUVFRQ1R+/57N7mWsVzm42n8LEPnkzs3rTvZ
5sF+zrPIxxPm+2R2zjGe2O/qg28c9zEcX03nyean/1Ozjf8/a9hvmIzx+nWe
7zQOZ8FHb5rjb0qYTBzFUL6YczNnSm183Xwrs7a9SpmP4wzb9ra2OJFsr886
9qub84q4L7TMZz7ZoizzSYo1w9bGNP6Mlvss28F7x+caTr5Pp8Z/PbXhZJ9H
xQmyHX1t7HfWN1FD+I11tR3Mp+W9iHOSz2ZoOSxg+U3XyPqvWpue2E82RDGf
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
88rOue42HXTpWxNaBuPBfXAe/p9iv9z2Jt4gq9fQqtXX7q+m65LLBV4blBnw
58RmyL4s29kYP99/tCrbFbHFfmC+frX99HaWsyWkyY07GeeNP5xsct9mi/06
14X9dnfmh9IueA87H0PU737w6fTbCfOxrONZP6D5SCLLRUWNVnX0L3K+nLLx
ebm2u24b+0FRUYdSZZx3mH/3R+lca1OBv6e91iEbXy7GnG8V3Af/Ta7l/h9p
9zFoHk9xnLUBKrZP8X2a59SDzyW2tND6B5n5pLL8LVcba479GDIN+01trLpp
f/2vZ4dj78td94L8nIOwn+Znz2qgdklUVFSUr73qc2T/h7Jxe4FjkZuKOjSX
V7dy9Whszpe6r1lUVNTgOqqcV3b+dbfpMMvPu1l27Tviy823K9s28E0aRg5P
y3RiP3Gf79cJw/WSN9P3oTwMvFfGfKnSvJ3Y9xCsN756IRlbHS/cZnHxm32Z
v0Y2TTtvv+RuiYqKOngaZT+kip8mrHfj0aPk7P0tN96xj/i/rKioA6ujznlF
16DuNh0VKXb82MWZfIxey2/TrRPKK+YxX7Y/75tGrT/q9pXldKnKfHYobT4J
53/pt17CYWE+7GBlsX3y6ZRSn89iTjx34Vhyd+myY7+6z62K9mvulqioqIOj
YffLyngN+x5+MQxhvenmexmFatJE7ouKOhjqxnhHiXeO+vnvF/m5WDJuk9+m
ydXppk0toY59Gf8VOx/265Xvqi5jHuzXMd+zS1WxU9XJfLZ9G09TVW13SHON
y6Uch23Psh/cN7F+3cn5dV57NzkzeSyL7RP71c1zVVX37yoqKupwaRj9ldB3
E9ZjCN/Jt/P03XQY4r5YxyEqav+qK+fJpqJ8GCG/ulb/u+5zGeU1qbtNR1HB
e2Di83J5Olt2QD2rpfv0/FfICUOO0JGwkmyAho3sODY/6it0s/3tFxuf2k57
4b7t3c2+2S+U8ySU18Xa/BDcd3HiayfY79bts03+e8ex37XZ3yY7j4aT2yVy
X1RU1EFVP/2YLB7em7+0lda31TS+nXCfOLBjP/oe74PrEBV1lFXFlperu9lS
jvtsHTTjV5ctP6AMGFlvf6nbvcj+J9FkP3+b0v0aW6HWVW2IYbKetfutP25y
kuE85eZUPT3mlXFfyntna2c+X9Sm29pdztivH3VnvxMd7De2tJBcmplw3Mc1
hPvQmxdrbgj71X1tIvdFRUXtB/Xit1S2LMR3wX208n/Wfd5RUUdJlfhOdg9x
2/hSPgei2M/WYwlJPnU2R6KXg6Pu69Hrdaq7XUdZI4tT1/80AnX74L6i+uuD
sF+V9eAW8aC/jPoB1IfbD3a+MvYbZPtqtfvy7Ec+T9iPIdPZNWxyH6r7mkTu
i4qK2o/q1ufJ1W2okG/K+oXZfmLd5xkVdZhVmfEsnwWU477QOt7vWT51mV1Q
69j6nn49qsn6fb4j6+1PjfR+6LmbXMvq+OkYFxYaWZ31UA32fkT+Tn9eNz9I
lr94uZGtp7pxg9SOG7WGkTfzhx/WKrMf+TzFftj7Tp773I3P72wlr17Xfz0i
90VFRR0UldoD9H9/G++j7TzG8/uAdZ9XVNRhUWW+m+rcJvPT9JluIp8Doyj3
fVF7Qv6c7v0AQ7a479jF607BGjB7xIGR9faRvHue8xEeto1PuV28nJ+O/VrH
+XgmZb9h9+lhvzIWsXUZnu3cTV4+XXK14mC/OpivH4bTNn6NiV65b/XxtQrc
Z+r6rV9Pvnv4MBmbT4ewX90MF7kvKirqoCpnHyB39oVppw67gf2fvvX7qmgf
jIqK6q4qfFdpe5vf3sTuWfYbevvhv2/m8uxn/EGt3WXY+Z8i6+0/Zd+GFocd
az4btqaCfSYGfR47/o9hc356646iT3/zYcpERewnVnqyNZc8ebTg2O/R5s1k
c3U6WVmedsxXpc6DYgUHaesbs69+tsfPchD2Q91ye/q6MPFJcu7yScd+dfNb
5L6oqKjDIjGfr6K+Gyqq6x4VFdW7ev0tFcbhedw3rPZNLDWST2cr9NEnO+MA
O/LyD/jeiKy3P+XXUqcOXybYz38OzP8QdV8rH8v/XwZ5X1p5P/19nVnYcDX7
XlfwEVzdqd6fh/Uu32849iuqz76+POUYD9aD/XZ35t2Q6arHEfP1y2tZTpk+
ucVnvUH5sxf2I48n7HfzUTu+76Cp7t9lVFRUVJky7tP/aGPfKiqqVuXiaUvy
rwzzmI0n9BXXk1Nzm06W+07Nr5a2NTft+w1Y/9IebD2R9favQjGi72D/dTbg
mY7n121jc6+oZkOF+5nzZ7b7bHFf6Dn85Hp5rXY/L2eI/YrqM5DD89Tthst1
6bOZfDhhP/KQ4OP5/PE9x329sNOgnFXEpIOw3yCaWD3RE/ddufKRyysD+9XN
cJH7oqKiDrNk04v9raio+hTiPr/WXtlvUvVYqubnleA+tlWfERZEy9v5/Zya
y7fVb3tu3NRly3gwUBNiUL/XqD14LgtyB4n7/Pue296/3xViTXPPhbUld9mm
Mh+9zQ+rsBg8BPvZeg2W+RDz4Babg/LNEHhur2RrUgxjf69er1RmvxPnf55x
38uXW06DHJtzGHQfkfuioqKOgmI/LCpq79XhL2nq7JXVWbeC3WCzqtyXst56
1v91/b63KfexDNufa9vUprMBlnFf4XmZ2GLZfFxsYMDHIL5j9viZ89nd8+nv
4Dy4fXypkME+nK7+/4YqduAyG/dH0xu56c0n/dVtEOv0whPa5s2rdefbabf3
6yCwDD/RQe1wvbRvUPYbZntK87l4TAj7ba/Puu2GwX3DsH/2orp/z1FRUVHD
UOTAqKjRKphbqYeYPXINIvWV8HWrsp24D75zfSXTb2acfbr2tbjP9g0tA0oX
FsK+odn7wuSFeeebmWxe3df/qKnjXW5qn7v/L3g2NhvLF2I1aqSTQ/OLGyn7
fTqbzqeOHkOf0bI2yBbs82dFv2b2++7VtG4DzzzsV8oCnp8nv5d+mGxtB3/P
lC1uXDvZUYvP9xUdJLfmQdf209ultRzGH066Wn4Z+534WTI+/dnAdQT1npKG
ff1D+6z7dx0VFRU1bEUGjIoavmx99G6/JXhL/pxaFz6j30s/Flsd41/dzG+H
DdCfxzTz1R/27SV2Xb+Po3hAWO/Wg/YxLPcF3xUtv0DFfTkWjO+PvX/mpjy+
EttZu7PhP9WD9Pcj5hL78WwwT+wHBx6/GWY/J/PMd8S0Vngu4L5uvIfI9cLz
TU0/22fv164E+92ZPZtMj3/huM/nhMPCbTqXfs8Hm165r2eT/VYvuFoOTJ+7
8WFy6uIvHPv1eqynL+5V4rMq51t1XdV2xA+47t90VFRU1KgVOTAqqj8pt71v
47O/HbgMtrLzLPdZf074C+bDdse4z3j0f3w7INsj9kefmL7LzYfpvpBd18+X
wfpiP7hvdSfdx9W1M8mV1UvJ1ws3St8FWZ7/1rDu+3GU1JErSPfJxGRm4wU+
nTwr9HlhLjgv1CceW0yfN9gP2x+M1tGegH2x1/p/cGU3H0+4D8YjZjVkAyrj
gyIOEPf1wwsHjQsHaW+VGD/YT+OwH3lxej3Oi1dLQfbr51x7zW/Ds1X37zoq
KipqL1XGgJEDo6LyyrivS35D359SOTcZt2xmuU9cKH17L8x92o6+MNv63Kfj
wJD4g3b0pU3fCO5DjvtWvnTHVIxgWV2IyH17+MxNrBXa0zLus+/tAt7jWWKI
7axSP7rJZOI+bILy/8y1zfo3T6515ocpEfuD/ar2z30bn2LwemWcW1dPJrem
TiS7u0uF61iefOPNP2jsN4imH56pnNsT7jt34Vhf7EcumUHbyrMt9VLLsO7f
d1RUVFSdihwYFRVQKzdGVvu8iz8bPCa+Yz24T/xmuQ82g7FYBm/5rBXqm7A/
cZ/r77ZsJtdXGx3cl/ZV19t91rf5/tDjpwtuHutg/xN/Mv7q1aobhuyQrh3y
+az73hxiZfl1FKc30elTXPZ+xrb39EXKTL36zum5wuaGbRD262ij6kG2avX1
cm49tcXkeWRIjs7ra43MxlPVp3Hs/Icp9zVl5+9lHpGDpoWtKz2x35nJY8nk
WO/+noPKfxaq1hOs+zceFRUVtZ8UOTAqajO1Yxju67Y+HCe+g+Xwy8Suplg+
+uM3Hqaxe8wP2fSsD5xdDps1TB5EDRuteCn2rd8m0/Cb9qO+8+bujWTr6Zzj
Ppgv47611LeLobiPNqKQ/S9y32hl87e4WL2Jtm2PZ0r3hHtv2Zz/CfBc6Vkb
Rr+a/Xx5I8x+vZwTz/KVxc2earCrL69z4TlmP40nvdWug/tQaNmoY8oOsqqy
39npdx33oQuX36m93VVU9288Kioqaj8rcmDUUdKvx5fb+QkDdeyC23i/A/rm
zKMfTj8jrbme9jmwxcBtLPP9PLWu8q9IcJ/7v7bLd7Ho9qW8MOyPvrH8TBu7
+XyePveJ8bIc7c1xiWlxIdv43Kc4R39elTw3URWePevb6Z6/pY53Lf9b4J6r
hofyufIsLBfE7w0qYgP7PSdiBmlbWZ32bhL7ift65bWQve+waxh8urE7W9nu
h/aC+4ZRt7Du33lUVFTUQVLkwKjDqjSWbznX7w4xTZbX0BtKsucRO6e+hvqq
9M2Vk5N1ZbMRn4W4j3XYDnsc3KfafRzH+mSemr/TwX0MZzfG8vW41orzN8xu
nHfc5+eLyc7drx0gf0Rdi4qsHGUk30mbJ7PkvQr3Yfvj/wF6lhoVcmX2q82W
DbGXun/ok+sp9yl/6KCM0msODwnmW7k7NnIm6eec9qINg9TYm2tcrsx9X197
19VJZDvqOwyjxsMormvtv/eoqKioA6xuHBhZMOqgKGfn07zAM9ztmfa5L5TD
kGWsK2ZTH159W/rxOjbrYNuB+xa3J7J9wHV+LF7Ix4/9Vum33W5cSsaXZ5PJ
lfvBGL8sr6nPfdZOZfM8anmPcWBHTpNprJyfL7bbc6a4Tuyy9n8Mo5LqRFYV
3Oc//6F+e1We43mvGsNltb485bivjP2o8zeKa7Yf+G9Q9WLzg/2w+718urRv
2a/233tUVFTUIVNkwaiDIOVGVA4Xy31Fz6jyssBlYreQ6Ivje1mUY8P/LaS5
VtI+sGIC7f60nc99Ykz65Nj6QtyH/Y78nWX9tWsPzzjum1gbd9xXdL1ybGLz
j8hGFeBAMU2sARiWyxv0zVwq1WXvcR96FrEDEkc6iv4/drtebH6n58Is6vfb
+7XjVRHc8WRrrm/+GJQxDjr3Vant0MF+s+879oMByfc5CvYbRHX/3qOioqIO
u6pwYOwPRu218txX3T8R7rM1+cSAtpaDYuOeBuwTWs+P2wqtIxX1YVzumNep
LUZ5OkPrwX3E+JVxn3/M3LWC4Tw28e14fm25LDelV5OgW02MoyJdT8t9g+5T
z6ViS4ehMwsbTYZruGEwx2cX1d3Px963uzPfF38cdG4bRNTYI8avH/az9r/F
+cv76jrW/buPioqKOoqKLBi15wrY9rI4vgLug9/k8yi/OmLtqJ+ndeA+BDep
hrvrMzY5jG38fodvyyvKU8EybDey5ymWq/f+26Kz5fncR/0+4vmU86WI+zI7
Xo9sYjlQ1z/zD63oy3gYlbFvi6Wr5IvtR4P2j3nuJpdS3jseqOtRVTdHZH/s
JlgP5ltbnHDj/e6H395RrfsA+/XLfDbnZ+S+qKioqChfVVnwKPYVowaXe26c
X+JynvtKtrHcp/gmm4cTVlKuFvoU9A+Zp9p59J1t/QWxo1URG3JMuE85Owfp
68B9aT9uMVnemXL2PXEf03Bf4XWzsXveMq4FCtX7C11/2fqyfXqxlMF7FtpX
q254bvk+zyeTe4fJH3aE+VBDtuZexLPr5xjqR+OB53svhH0P7hvGvoZVG8PX
fuKhkPArH5T7Ll/7MLl1++y+OFfaUPd7ICoqKiqqXL3wYGTCqJByufGb3Fel
rz2/2UiWtlLuwm+Ovh+xd4xrHdnIVJtBte9kH7A2OoYwoj0GzFdkSxjUV49j
qe4f9Rmy+U3OW9gaa+XFT+2J4tEge8nHM+CfCfOxvWrGF+UBze1P3KP4vxb/
2X2HeChbXz6mky328/LJuHUD9c5re/b8d5S5nunz2Hs8XxXh8znI89NrHpcy
1dHHh/v69e/cSw6puw3dNAjzXVn+0tV2h/3qPg+p7vdBVFRUVFR/6pUH90s/
MGpvno2QbS9ljDb3FT0jY4sbQe6j30B/+uz9RnKxyUqTG2k/ArtIiPuy/l2L
/diHtaEojyfL2Oat2aYK95XlaIf7ZG/EzoftUn6o8Jny01iODV5LeLnAlsa1
4Hx0TLGCrVPo2zhzv0VxW8c9WmnnuLSyOUT9/DFiSU2LAUfEVVWewaCNz3Lf
iNvQb9+Y/C3vXR3OO/O3t/aebeTfqdi+ulkjJDHffmY/a+8j1q9qPXc0/nAy
4743L9acRnkdq6rub1NUVFRU1HDVDw9GJjxcymLL4D5xXqAuWhn3Ta02ks3d
lP3ESgxD3IesbY9cK6E+h7WhsD/ysMBkWv62j35P1v95mx/CXOSbgfWUZ8Zy
X+VrGfCH/WB6yQ2VR4TjWRunuI/zhfs4btlvriP/S4DtsnoHyiHaWq77neNE
y1gmdnPU9QULnynb9tZz+M4e8KjyBVWNT/vkepqzUxpWO/aS/ZTDc1g+nqPU
fmY+SezXC/dNbtxxgv2YPjN5bKTc18t1rPvbFBUVFRW1d+qXCSMb7k9l96XZ
hz5GjoxWnoxMrXlpTpelnu5nEffBete2t7Ph9c0Vxz/4PPrcl6td9jbf72B/
rGe5r+++z9vOadnaFHuHbY9pnUflaxzI5SLu41jk4ce2aLnPb5/lvqL7mLun
LW7LrSe/zgJeUn7RNvO3GMsypfxBzfgwn8OiZ0v+nZlfp8kxNGr+q/r8rO6k
uTthv2G34YNrPH97xyoHwcfzoIgYYPEc0/BfV1vf6oWU+5pDbH5u3vRnI2tj
L+w36m9SVFRUVNTB0aBcGBmxnntQxH0d+y+pzVdVIe7DvhXiHtXl0zh+l3CX
7G9Pnq109mEq5uxcXhxP3nv33yYffPDvk1/96i+Szz/729w+/HbAZ3AffKq6
f7QhlJMFjpUtz/kkFrBJ1pbtlC+V23SQvtawfzs57rN2QOsb2icDVvnNd9S1
H1/Kn+uIa9v7/sJFzxfzl7ZHk/diL7kPO98gtRuiUu0+u5v88ENqo1Os3otX
S9lyy4NhnUjGVscd+2kevrejam/kvqioqKioUWmYfHiY2HHPrksodg9/zm75
EQfkPsXFja3uZOyHL6VyveOnGepXi/2qcF8VvXi23MF96PH2XLsfFOBP4gHl
f0lbVHuCZbSJ+bQP5hMP/uIXf5589MlPs/Vt7UIYkv3DlKyvXDFaLr/SKtdW
bamyruyWuo72eF2fzxbDZnZF6xvq5S0NPStVf6eZX6f1VS1ok2XBUagsH2Xq
l9sYKfdJRbk9h+Xv+GznbhbbVzc3HWQ9+t1csvr4mmM/MR9DcaD0449rbpmW
d9OZyXdqvzejfL6joqKioqL2ioUOunq5nkU5W7py33ebPbOffDixacEayHIf
9hS4p8xOp5z6kyv3s/3CSP32Xd499pfJsXf/jWO+09++l4zPfOG47/iXP+1Y
F6ajfcpHSjutXQ5uZR3Oi3VoK+fLPAT3IdrLfrSc66F8nsxXTQcbO2jthtm9
8+9laxzuEyPCc/66Wq7jqr6GO5/dlZxPK/UvKv0uZcecXOuMKfTyl/byzLpl
2qdyj5a1p+XvOao8pOI+G+dnfZHFfa9fj75fPMo+PfwI+0U732AS91lm0/X1
2Q9h+6vOfqOL9auiUT/fUVFRUVFRw1DdXDYorw3tOgTycva0DxdXla8b59uN
rMR9cAWMI/9I2b7gJst96luTs+XVq1UXv6fa6Jb7OGbVvsql8+8n5878ytVj
wKYH98F5cN+3Mx9nddg//fQnjtHw+eT4rq/2FjvfRrYvtRPugwNpP3XoOa/j
M0tZvUBxH+v+/O//LPmHn/9ZjvvYxq5juY99qa6fWI5rxbVmmXKI2nsnhmS/
uh+wiepMyB7IkPnyXdX5sA7TtAfuEwOqzkTX52KyHR+YMWCTw/AX7ueZz/l1
VnlOWzF/o/L55F5b7pPdV9cPWx/12cnjOcrf7/rj0fXpsSUh8rpE9htMPvO5
Z6aLXRYmrMp+dZ3XXn+voqKioqKiovpQKw+G79fZF38am5/PfReXG8n09rYb
XllL6zbIv5OaBfJ3FIcU9S9C3Cd+ZLsqdbVnpk865vO5D//Or699mK+V1eS+
6ysXHPd9cfEfHBt+8vFfJ9enjifra1fbfbdmP592Ma6cn7AW7YL72P7kqXeT
1ZXpjBPwK4X7ZDfS0MYv2v2L+1TDXjlmdA01bVlO14a2KD4RvlM+GtWs0DHF
fe3r3ZZlGvmgcm85bhnjSxnjNbnNcZ+tM9+lTmAunq+Vy6Xqc+n2Jw35fyqy
9eoa6j7aa3i8op9tvzp+szGyGujPH99Lttdna/cjPAwiju/ag9PuvVJk4yvS
xOqJrtx349pJpzrOrfbvWFRUVFRUVFR3FdRi0PJe7DHyFVWOyDNz1G5ouOGZ
u5uO+5DlPtnB4BPtB14p6l/4fR2xFgwDa6nWQWn/q8lbMN/7n/w7Z9+TnS/E
fVZwH/wG95059css/g97IPvzuY9x+Gr53pjbDh9SuI/52BSZh83P5z4U4j4x
repSKI+M5Q3ZAVXzUKwnG16WG/VlfqgcOvY4/vElnzFoh2obTG3MJ5/MzGe5
Sf1nSNyXe/a8XDC23nyutqBqNfTxnMtHdBg5iKywgVp21vWTH/Cp26P9/VLL
gfwusN+o+vRwXx0scRil2g2vXpO36p6L5dMymHB5p7hORjf2o6Zf5L6oqKio
qKgoX67/7eVvKeM+5SXRfOw7X96+l62T7TvAfSdPf5CcnrjgdK4p2I99Wd6x
dc6VH9PPn4mw8fn9Hb8P0o374C1YD+57/zd/lXHfxFp5v+riYrr8+MQv3bZw
nHgR7jv/depn5eeVgfvgvIX5iy5WkHHLfce/+lnGZta+pnPR+dj8psTjwRtw
h7XF6TpajrP79q8N6ys3pWx+bCt+tnZA2Qp9e6S1Ea4+XnHch112psmAH00v
FP/fQPF5k2sd+Tlz8YAt9uvL/9g8x5kv8gjYz3/+xIJolOwH86FR9eex88F9
r58vj5QberF9HVTBerL3TT8842r4wX7K8WJj+WBD1pVfefc8nyn3XZx4v5b6
hXV/z6KioqKioqKKlXFfSY4Ny3ll3Pfw+7SfAePJrvLpd/eSy1PfJmcvnk6O
n/mNY76LS8uO+y5cOeX2hW+icqEgbGTsr4j75EvZjfu6Cd7y9wGrhfYdEtz3
6cm/Sa41+24LW2OO5ybHPivkPnhMnAf3wZmzMxfcNtgOLfexvmWGIp9PsYXN
K6Njcf0s92k7a8+TPUo1CXUMuE7sB1v629vlzNM+tD+7Ltx3av6Os0/aZ6dD
pn5gLg5Qz+dku678wM++mM+LR+1Xtr6k1bMX+ftof2PD/B0Pu/+exdG+WEs2
V6ez2L66mekwSNwHw8F9yNrw/BwuTLM+mmtcrsx+czNn9vzc6v6eRUVFRUVF
RYWVs/VV5D5ErXWf/1AZ952533C6cH08+e3Y5eY6G4794BNkuW95O8+Zvr9n
EffBXyyv4uMJc4W4D/8q4vw0/fXd7n0scd/m5i3HcAzFfmkfOv1fPeeJPfDM
uU9cvxo/09uzX7tt8BG1vKT17bRvW7PzrP+ltlVcn3jQXhPlkLHcZ+2Ldt+s
Jzuh5tvjarnfNtsuxuE+1aaoEgfYoSHVgdczntkNh1TbXefWrV98+X7qk6nt
5KPZ1zHXGq52X7+2Hf9/CbqPueegxX512I8Oq7DvLWxdcQzHtLgP2x+C9Zjv
5/2UnbCKzk6/u+fsV/c3LSoqKioqKiqsbn1eYvHkh2m5sIj7mP9PbxvJ5FIj
mVrttOvAfefvzjvuuzg/67jv1q2J5PXrRosfFpPVnelmv2fa2arYxue+Np+s
d/hjWu7rVrsP25zlPvK2SJb7LA/SttuNSx3LxK6yu8F92PVcv625DT6P7JMc
MHAfx/X728jnPl82Jk/1Ai0bylaILU41BMV9Wt8eS76a+evayYDiOt/mZ9sS
WqZx226NKweMbLu1aHItqwMxDPtbUf08X+I+bIHcI6Zhv16Pd2Gh4Y4J+w3S
V7f3y3Lfq1YtCux8kfuGL9gvNA/u0zTcxxBG5F3jc2A3fX3t3WS2+d7Zq3Oq
+5sWdXSk3My/ntoYWZ7mqKioqMMi1eerwn34YTJ9/Ha7PgCsdn01n6uziPtY
T+uS0xDNbzaSF7vLyeXzH7h9pX2eRZeXE+5THTzZ9kJcIe5jOVylfCosL+I+
8qkQh0c8HrF5Pvcxzn59XypxH+3w2U/2SrhGfHRtPK35xzazG2OufcyDB/Ht
tAxmFbJT+vPETwxtrB8SzynuT+v5teUUoxey7+mYTKvmoO6F5banxocxFIOp
+bomlvt0LOvXq/qNem6q1qQfWC3uG9T2N57Li9rJSNZeqnnP3LVtbfOmGvt9
NpvqlMuJNDoWw85HzQZx316xQ1Sn4L7tp7edxILUAfQ5j2XWZxTuQ+Rj3Yt2
1v1dizr8ynjPxQDcS/MzZzEB92pvX1RUVNR+VJbXsGA53Da5lLLalVa/3Oc+
+rZF/npTpsb4mbmU+2BI5bKH+1gHVpubOZuMXfzYcR+i/2C5T9PqW3TWGFh3
XAUz2nVC/RK4D59KmMwyn+07wX3s0y7Hj1O2K8t91DSHn+QHKf9Jcd/M/GlX
L4L4PeV/sdznn1/IRzK0TJzp539BMJ8U4mUbF2inQwwo7uNe2uXKAWP3GYo/
9POH2hyh1hbIccR92MBsTtIisV5pvGAvvwUT79dv7czjN61dupPHmMf1eNZi
dcX+WfYr6ztjF1SNS7gv9HwPyybHfsR9o7TzRRtib9cK7vPnk/uFdxFsiK0Q
9pN9EJ04/3PHfXvBfnV/16IOp7DpuSE1Xy/dcsq4r1WX1Y0b1d3mqKioqH2j
Vq78Mu6D5+A+bHj01RnCf/DbiVspy5Udw3If26i/z7bMU90GuG9p4YrjPmLd
xH2SbHi5/s/bTp9In/PK4vuolUcthiLuk2iLxuE+9jm+PJuL+RP3Wfaa+O5r
Z9fDrxPuG5/5wnEf/p299KFkHwvF9cmvVPPs+cJ7uj5+TkmkthbZHK3gS+4j
/qK+bVH15zWt5dqvzfvir6PltiaExsV9nANSfYjQc6Y6IEP5TZiak/3a/fLP
YJj9kJj92YtOXkY3H7Z5VvY9ajTAfsPgh6rrrS9PJbs785HPDoDkA0psILli
7LuM+6j14PlRtaH2b1vUoZTz5Wzl9HLMB9uJBVvcl60b+S8qKioqpyLms3YO
+AxeE/fxTYf76LOyLFSLXdPOl/N22xbDfhSHZrmP+cxTXxgbmXKghOTXnPNz
R/oSd/hcRE4Xy32+VKcB7mP82tp4xqNwnuW+ly83MraCt3RcuE+5YxjiW0rc
X8ieJxuhb9fz86fYbfz9+OuJmfz6C/76PrvZ66txcZ89vrb1r7e4z/qIFsX7
2XnWLvjWOw+fCWUHtNdJz57PgL3Y7TrsfX3UeVh7VFx7sX2/GpmdL8R9z0yO
VHys8eeUfW+Y9ryy5bPXzyeTk+eSO3PjOWaI2r8qq+t36uIv3H3EZzdyX9R+
V+bLKTuete21eK9wWxgROe5L89bVej4mT3VUVFTUnqvE1udzn+L18Onc3E37
ibAa48zTdmXcR7+V9X3bB/N74T4/P4jmcYx0H+F+iI1BQ1cufxzM42kl+x9t
wd5oue/cvZPJ8bkxt/zq2hnHfToG3Mf6MB7cNzF50tXlE/epzejtj23Ws8wT
ss2V+Xv+4ccwM/q2QvnNhq6P+E25Of36EX5Ol265UtVu5Z3RedkcMNjwXr7O
ry/eC7GhP9/t73Vneyz38b+Jnv01letFv4dWPcte9rG9u+X4jyFtvrPR+fzD
dix/9qLzfxfPjI1U7Jddhz65z25Xto87s+ec7t6+6NhvVHwQNXzh21nGfsT5
Xb72oWO/K1c/Gkkbav++RR0KOd4T6zEsYD07//PZlWxeZgu0tWD3mr1Uj5bj
ji1lNWjrvrZRUVFHS8cuXm+y31JHrQbLfBrCZWKyIu6D72A+cR/T2AVhRqaL
uA+R/4X1NL21PutqG4T6E36fX/wE9/lxbCjEQhLcB4fBd3BckZ+ncraQZ0Y5
LcV92AHhPtmgHC+93spz35WPHffZcxK/KD7Pj78Tc4Xar6H4zcbMia80316j
oj6aH9dn22LrNjD+7b3NIO/pHCw/+vfNtzciuI/9Yj/Fd3bh0fVkZWfOsR+c
facx03xubuT2Y9scOheNqw4I3PfVzc3MV7Xy78Tk9+yH/cjvAtNpWtxnJe7L
rmGLxXTdq3JambSdv33R/uA98v6L+7AL1VEDLqp/lXGf2I8h9f1GwX51f9+i
DracPU+5WlrD0vWbfAfvfe7lGci4r5XrM/MFde/2cnvhUM5DrIl0XE3DfkOs
SRQVFRXlK2O65rumKvfRT4bX4DxysGgcW97puXY+FzhvcmPLcR92v+Otug/i
OfVzQ30ExQ1qGu5bvjfm4vyIjcPeZn35Qtyn3JQ+41gbmc9N5FYhNwv5Wyz3
+fxHTk+2gfuw68nuBY/AKGIeuIJzQefO/MrZ9zgO63/0yU+DLCsfyCI2Dc3T
ufrc59sIQzlWrEK+o0XMpnVuPAzXJbfrFNkBg/fwdbpPuA/Gg/1cv/Tu+eTK
6iXHflxnV5+jOV52PvackP4PAFsq1yrPM8tg9Eq/m4nVgdjPSrX5Tt3ezP0e
NJTPp8a71fPoRVWYUTY+cZ/dFvZj/rD5IGo0evFqqSv7ZQw4+35y6/bZoR6/
7m9d1MGU4zPLSRW2Ee9dWiSW9UsnLftgqrWPlv9Glu9zD5jPnY+NN2xxn21L
5L6oqKhRKotVqujnjo9nN+5jPcbFfAyxvV1cWM7qMri+YwH32Xk29wd5OeE+
/DGtz6f1W7Q15oq4r0xwH7k/ORb5WuA7av/53Me0zY+iIdvBfTALcW/YlJT3
hHXgPpfTZfqksy2S08Vvg3KVWp/V9rXpHFd9Bp2n5TTfbqj9Vcl1459f0boh
H1R/uWVsWxfe1gnM2tziPmynn92YSb689V1y+s6F9Lo3ue/s3TNuGi6H+/rp
g4r77LErc993KevZ31C/eT4luA8GXH/c+VtQrF+v5zhIvB/3xsXwtZivaL3I
fQdPNp9nN/Z7tHlzaMet+1sXdcA0sZrPz9kDl6XMN56cuD3vmO/bxStOjGfc
J8nPsmWHG+U5FfqUThr+jP6eUVFRI5brs/LOM33ZImG3g+PEb/AdLCgbFfNY
ZrkPKY+L5T5UZO/TfrRPV4dvey6ZHPssWZgfM9uHuc/njKp9E/J5wmPwGzYl
cR850GkDQ/WL/PrmEm2AW7gm4j7mYWuC8y7d/NLty+c+y6zKySnblK1bIYXq
HvhMx3H8PKi02+ZH+cOPYe5T/J62KWJnmz+0SBNL7RwxsoFaf1bfpgg7i/vg
POXUgfWQOFA5dsqOXeT/OUjfVHY++iZ2ehDbH4L9yur7VZXvD9pxTbowIdtv
bdx27NftWJH9DpZ+/HGtEvdR4wFdnHg/+fH1g4GPW/d3LurgSL6cMF+3dd33
5Hnn/+zEfTCgmO/S0snk/N3r4WP6/pejOK8ucYTRzzMqKmqkatn5utVtQPhu
wnzduG/7eeqfSZ0HMR86cSd9L/t9gTLus/ZAFyPW5L7NjVnHfbL32fwfWfxT
IK9lVcF9oT4Qfp+W+2CNsjwzcM5XrXqEfJcs91GrT3GEltXskG20nfw3u3Ff
0TnRbjjKXqf0+pZfC7/me9ExqtR8gF25JqFt/XoOiPZiy3PxRk3O8/Op+rlV
ux2/qs8s+UDJj1n5N9TiPknc1y/7sd3Wk047+KvXJedWEKtXNK+qTl06n4yP
nUgebYfjaq2I+RsGG0SNXuI+ajqgMvYj1g/uQ8T/jU9/1vdxa//eRe1rZf6c
qrNQwkj0L8gBcOFuI+M+njGmtQ6+SMxvc18x87n+j+xtJt5vFOdXuk6rDXXf
i6ioqMMn699Zhfvw47zzeDu58ehR5tcJC7p3a4v3qnAf6/s2v51ndwr9PbUu
9dvX16662uqW6Sz3+bFrlqOq9EvgOFuzPSRsf2kNiE7uE5/BezAO4pxhCWe3
a7Yd1iOfy89+9qduHPul2qf8MJb7ZHPzax7Yc/RzalrBq2q7bafPxUU8VORj
2qt0Dn7bQ+viX3tp8WrOpifGswxoYy0H6Qf759UT9yGf/aY2K9nOixSq31D2
/5FsHcN4XO/t3XD99qpqPLjluI+68XBnGUNG7jt4os57N+4T+8F8Ur9xf3V/
86L2r3I1GSrY2uhfwHjkhlNMO/0O5sFXYj7+33h9rZFxH+rw80TivmZf6Njl
uZHkeMl8Sb2agv46dd+LqKiowylyuCAxX1kuFyTug+HgPvgO7lPddS2TiAHE
LihfzzP3G+5dzPyq3GcF9y3MXXTshL2var0AO6wi7HBl9fvSGg5bWT5Jn5+U
JwT2I88lNj75NdL2S+ffd9zHfhbmL+a2le+j2vv2x/wy207LveI+1TO36y3v
THXwkbV9WV/Obiqqo1BFqrUXOgcJu+TqznQh91lb3zC5LyTl/awk8rwY/07r
A9qP3U/cZ2P6qnBfR79+QO6jVsPLp0vJ7u6SY7+i50Q8uHJ3zK0/7HsRNVq9
er1SLd6vyXwwINzXD/vV/c2L2n8SA9n6e2Xcp3gRuI9+hK1jA+dZVjtxe9Mx
H1p/vJEsPXuWjK9eCnOf2tPivmMXZ5xGdb7K5WL/3x5tfVFRR1tFHDaQeKd9
M5cxn9M3c125j3esWO/h9w3nXzG1mubt/LKVs9PG8hVxX/Z+9vL609/v5u8J
89l5RRxkc7rYZVVZpYz7rK0J7rP75XzgPNUEYGi5DzsivIeP529O/MeM+2Qz
VI06+YP659R5TdpD8WKozrrNRyM+sjzsc1/IPmpjJ7vZF4vvYbjttNsen2eh
Sh9UvrcwItv02+f1nztN98R9+s16Nj73+2kxoZ8DtNu+Qjle9lqL85dzdfrs
b7aIAWG/54/v1druqP60sTubvSe62f8WF7/pef91f1Oj9p9sPYYi+xp9DBhO
9XjdN+N1Z21e9z/Xlp8n648tpvY+1oH7Hjx/7vyVJje3u7ZL3AcDDq22u5+7
RTk8J5b2JKdMVFTUaDUSbhsC91n7XlHbeV8yJHbvzFw17rPMB+P589if/jdH
39rnvhe7aQzR2s71ZOnRZLLxZCbrz7P+0sKVYF9C3GPj+nzu61XU1yvr91Cb
j2+M8q2Ihyz34ePJNOsgcR/xg3DfZxd/mvtmqT5fKDeNXY/rBpNwHOVFEfdx
THJSihul1Ea5ntW+KKptIb/SUM0Lrc86YtlerqmfZ0fnK15l3uzGmPOjrcp9
Nu6y33jOdvs6z2d8qTf2C/l3+uzn2wCLfodF3OfqJ/SY42UQXf3m09yx7dAf
d7/fxYnIfQdcP/yw1pX9zky+U8h+Rf7AdX+To/aPnF0P5uti32M59jo4jmme
I/oj+HTaOk/Ict+Zu+n6Lu8b+aGJT3n50g23n251rdnqGJTaVuK+li1yKOdu
avX9WrE2e1hHIioq6hDL+Kxb9cJ98J3mH2/5WMAZsBxDplcf5xlPtRvs9Nja
RrAOHGI/4j768HDfna0rbhx71dbTebcMX0+/3p3lEmuHko9kma9nEScU5Xax
3DezMZ9xH6xFDB+SH4q4j+8L621uLTr2I6aPIdzHftQ2MZVsfpb5tFx8J+7j
uPiTwt8ci2OyDNlcK+k+Uu5L4xLDNtBQfKR/beSz6rNlr7J16NUeavXBfqFr
znNg/TyZ5vmwMZa92yDDtj4NaRd11el3qM5eN5Xa8lrcZ1VkA2R6fWcjHPc6
QK6WqtpcnU6212cd9ylfp6t7UaHO+/ryVPJka27kbYwarR7/7k4J9x1zz0jR
tqHnovbvYdS+kZivdJ3mchhPuTrd/5iX0ngRcZ/yuSgennc1/Rdx33hzexeX
0WS+H37/e2fzY/1u3Jerpze2NFTuy86vqKZDVFRUVL+y3Gf7lwU5XMjLyXs1
zZWV8h3ch42P5XqXMm25j+0uLz9Krqxtdfh8Ms78Mu778IP/0GSh/yv55S/+
3A0/+OSvkzM3P2n2Lz7LcR+12+E+9e9DdcH92g392IDgMursFcf3redqEVju
k38nQ84XGyeMBPfBfIicnse//GmOScV1qq/g+61qPc3Td45jwn0Mi+r9+XbD
UJyeWNGv2+7vTzZBW7fDLvPtgCHbq39su3/fzkA9DWL+LPfJDuxqezSXi/36
uddF7GfbBvudut399+bXdihbL8d+XmygXc9n0Y72NvvXZTlX/PnUWrfTfjwe
zIbNDtGvX1lO+a8od63Vq9fte8l+Qm15/Tz9v03MAbP/de3B6dK8L7Bf2fa+
L3Dt38OoWuVsey12gvv85cdb+a/hOvodKeel3If4lrJs4/tNJ8t97v3SfP/D
fIyLFcV92PnEfFWfR2eHtLX9huXvGRUVFTVs2Tyd40s5+14Z9yG4jz59WtM6
FT6evH95V+r/ZMyj38/yMu6zuvFouyMWi2mf+469928z7pMmVk8ki99PuJrn
lvu61Tb3l/nC/kXuE6R6AJb74A2EbQ4fRBjEcp+r4dfiJfiPb5P4j+VMp9ep
3S5xX1HcnmW9kE0OyddS+UNlf1NbirYrux60P8TL4jvxpl/v3KqI+3y/0qI2
8DxsPZ1z15lx5Xq53biULfftfHshnvOq7NfLbzWr++fngmkOv7nfyXoZ/3m+
liHug+nsfOx2sJzYb27mjOM7xonlw0ZHnW5nr3u0kDzbueumYb+q10n3VfbC
juvYbA+5P2nLYWS/vbDF7oWmm+86BPsVcd+NayedivYRuS8q/65LuQ8bV6gu
H6wHy8F2MB8cyPcTxhP3ubrAS+l6TNs4Pxfz0WJEtid/y52NzaTxPOW+7ZdP
smcRHqxqv7M13UcRg2d5OCoqKqovGRtfYb4Ww4K8I53f4GYjy89ZlfsYaj24
j31tu/dsp79niPs+/+xvHevBeRcXjycnpv7RiXmfnf67HPvBffceXMvZq0K2
v6wP1oVzJHHfp5/+JLly+WM3hC9ZJu4jjgzugz/EetperIU/J98ixZLDYlwj
n/tgynbsYjpPttAiO5g9J2s3FfchF8vwsn2sUF29kH+n2k59+VC+jiIG9YWf
Kfuw7Kf9iZOrxKZxHNgvlK+lDt7TeNf6DrLhtabhtqr+oSiLBdT/bFrs59dF
J8+nzfVJvk3LG7AazCfuu3P9rMvPwn4QyxmK+2A+xsV+MBvrwH2DXDu4z/oC
3pk965hP3Hd7+nTHMfYydnFkz8wBZL+nL+45v07GeReK+8r83WHCMu7jGbLT
tX8Xo/aFYL5fF/hNivv4BvBNgvks27EO3KdvLfO1XLY/2QHhvo7f5tt0G76h
vbQ5qy2o/KMD1nV3+xBPiocj+0VFRfWgtB7fUjCOr1fus31dfDrxI5Q/Pe/Y
iwvLKd887s59/J/N+nz6fmpF3IfNj/nv/Povk3Oz7yVnr3+QXJz8IDl74VjW
P8Q+5bNdiE18W5MEV9g6B8Tcifuw+bEOdj7rc8j3QvlU/P3L/ibus8xnjwv3
YfPz2+u30fp/tr9bW7m8nYzbXC7ivrQvF86jif3Ntyna+Ej/WhZdv5evO214
sJ+4z+YKHSTnSp2yzyt+jKW/P+Vvac3rlfsytdiPcbHaxuo1x0kM37xcc9wn
VoOtYD/4TlwH88F05Nd0nNVcxjYwCcuZ586vOQ3rsR+m2Ze4bxjXj32J8+A+
y7C7O/PunJgnu+ObV+vJzYeNHNdGjVa82+Yalx37KZ+nfS+WCbYP+fTa/zFo
Xt3fyKj9Icc8hnVCvCPuo0+Svoe3XOwefRDmw3W7L+4n97+fytWFks3P1Z3a
CNex4ZtJf2dpu1Fa0yFrbyvHi+L9xH398p9qFPp5FyL3RUVF9SJbhz20nPfc
2GLrvRKIJeb9+hi7QYvh2u/RYu7TcuYpFlC+nrLvdeO+y+c/cP6dcJ617SGf
+9zwQj6mpCi+r8jPUbkfmedzH/lcqONArYXxmS+cbQ/uUy0E4suUI4X6AZLP
fa7/apjNbwsxfsppKS6yOUntuqF9WNYS98FbYjafE+04XCg2ZF1rZ5T/Jja7
br6yOoY/n22xPSoOsO4+7aCyvweGpb9Dz95HPwUbYc914I1m56ezY8N8CEZT
vxr2e/162fGduI98mrLhiafQsxedNRR9Dbv+HkwJ24kzQ8Lfk3ayjriv7vt+
VLSwdaWn/Lkd+XRXTzj241njPjqO5zm8fja7/zyT3Nu6v5FR9Sur1ac4vwL+
w79Idj89q7xPGd7coK7rl475rqyccvyndVj/hefnIhufFXUdqjBfru2mBkPG
bmLBivlZctu6nKYe+8VaDlFRUd3kasIs52x8ofW6cR/L+YbDW/AdNjv9Hw2f
euKl1ddvPFkxvhdtX0bmWe4T+01tLCfXVmaSuaWpZPn+eDI1/kXyyW9+4uL6
Tp/6ZSH3oY9PpvbAGzPnks0H04E8HOmwLFeI1rPch9+mtfPBez73+X2cJ89W
Wra2NvfZZb6PZCjvDHXb4b6Ll35TaEerKsXa+cfkXtA2xSLa5bJTylbn+5eq
tkIovs+/5kXqxhYHVTx7oTxwfp4Wf/kg3Le92z62uz/N53dh6UZmn0Nwn42l
w4anWgqvXpc/Y0WxgcMUfX8/1jAk7EbwAewg/oQZ7t8sZsaowTUI92EbpO4f
zCebLvcvd/8fLSSzU8fr/1ZG1a5QbXKf/VSnAe47O9+Oh7jx8H6y+mjZcN+t
ZHGr8/9UPvcF3zXUcd9uJJ/PlufgCp6D4vzI+ULtvRb3Zbk/i7adXMvO3bft
ZfGDA/qPRkVFHQGJ+0ryScg2h93OcaHHhvLzrMp9rj/2eDv3HsXfk6H8OyXW
g/vuPLjbwX3K44Lw4cTPsxv3hd7htuadnccQP9JrzePNzJ/O2e4s9yHxXlkf
B7Zjn6HaVtQfKKpnno9DXHfsZ5f56+OzWcaE+LmI7yxjKf9J3hYZjoeD+2A8
2oy9UMfSvBsPG9n5+Bwnu6bv4ynfW/KZVmG/UPxhP+vspQrjQgqYb1CJ+zqf
qeGz2qj4j/1W4T4JTpCNEDtS5L7RSvXa+2E+cR/7wafXj0W197T2b2VU7Sqz
i/n8J+77YDr1nYf5Nh8vJ5/fuOEk7pu4f6fnZx7mI7dLP9yXtddjPnFfUf4X
6sCXnvvEWrT3RUVFFcr6dVbhPvlrunkB7sMffufZHfeu1XzydMKD+G8i66dZ
xH2wos3nAj9+fvq9jPGw8TEuMe+9d/6qkPskajssL4W5L1SrAAY5d+ZXLo7O
577TN97t6MNU4T7EvkPcB2N1yyMjH1Hi++w8fzyU/9LuVz6a4kO7DtyH/LoT
dh3ain/rncZCLh+pGIv9wn1+7QfbzlDeTsUd6v8M/rn786oy3X5ivyD3ldj6
yoTfks0RGsoXyu+vqC3DZr/9lI+EnKPiPvmt1t2mUVwv7aPOaw+3ldVrCIkc
MLvP7rp3ofajWM5Ytz2qSFW4xuc/cR8S86FPZucc8124O++Y8Prq/dLn3P9f
JOw3lHPyY/6sL6jse835jvsK7IG57WKcX1RUVEBw3rFv5orztnzXrsdH/5D8
LMr9YveB6Fta7lPtcTjR5z75c4rpFN9HjhfVdWB+iPsQ3Afn6d3LPKaJLUxt
ccXcByMSD5jrN3nMJ19L+AN/SpiPXC2/cIz5F8nxiV8Gue9nP/vTgfydxH2h
HJS5/myTwfArVd6YUH7NKlLt9JA/a6h9XFv9fx4uhPtWdubcEK7CTieWY9rn
DZ8BFcfnr8OQ/YTYr4qeveisWyAmHbRW/KCibeRq8X+HZdwHy/m5Xbi27Gd8
qZHFrJTVCOw3x8kwWYJ91ZlrE/bzaw/WrWGzWp3s1wv3uZo62xNZ/k9J+YI4
j1Au2Lq/mVH1qtc65X7cH/wnwX0nbs8nv7110wnmUxxfKJ4P5tt+mo7rPdaN
+7AFvn6V/iZ/e6s7I2Z5Xlo+VTn+IwbHY74Q35Uyn60lvw/uZ1RU1N5IuThh
vjLuQ1W4j6E4D19OTdM3lZ0QppPfprgP+14R96Xv3oazCSrn58X52eT9T/4u
uXjp89z7GJsc3Dd7/Wwp9yHqOvjch2w9N+f7uD2XrK5MJ1/+9hcd3Pfpyb9x
Q6bf/+TfOQ78+d//meO+QdmP9vvcp7rjm7s33BDuEvdRg75qv8yvW8F54u9p
OTe97luZL6vfNuydIVsl7CdfT/hKvO/H9VnBfdQphP3YVsfulWFDNitxjn2W
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
Mu6bXruXPH3ecMwH+6HFraWM+dBXN6c6YvjKRE0/jqtaDnaZy4uw3cjmF713
1Xa7faiGFdw3vbbiONFfXubvWVQnwvcpxaZJm0uvuZfrJXJfVNToVVZPvapg
Pmx0ysNp87gg3gFwGHk5EVyn/38Ru2e5j7p5VbnvzMx0cm7iQnK6KXJsohsz
55LTV067Ogzvf/SfXH4WavLpfeZzH0Nx3+PdJRefJ5vfbz76vyu9q/1+7MLc
xYS67TAktr8y7rP17MRT3fw/JexacJ9qM9g8nRIsAEOFuA+xzfL2Uq5N8BfM
aX0lbb09sSDHZhzuYz/iPpjX5o4Q94XaltrotrIh8/h/JG2++XAz4z7lBWWZ
/Du/vdf+rvk11DVuOYbtlQ/UnfuTNvfV3Xcdhty9XkvZz9r6inw8+e3d2Wjb
+vxnmmtWxGj9+LVK/Nbqvlb9ing+RN5OuO/J1ty+zN8SVSzV2nA1HAI+E3V/
k6Pqkc99MN+JhYbz78S3COaj/3Lj4f3k9Nxmxn2bj5cz5mOacTGf8rfY54//
XxY9m3AfPGT/j4ndjG8WNjjl4ix7vpe353PTfPNs3Avf0Jet/+WxT3jtZKte
q+U+P0ZPbeqV++x+Oq65yfWimL+6n4OoqMOuveQ+8rdY7uO9Ku46efqD5Nvb
95Mb85PJ8TO/cdP4T3599ovk8/FZx4D4gV64Pu4Ey1nug/eKuO+zL/7RcZzy
sDDEFvfhF790fqUXl1N/UXGf1rPcV5TzIiS47/zZdx33aR62t8mxz7KcmHBR
iPvauViK4wJ7kTgOVoKTxIDtb8J6lucSsRx+8LkPqX0M8RNVDhm7Dvlq4D5y
1qSx6uu5tth1OQbPgWL10m9WynayAd54mDKeuI8h8WvkNrF2KPilqO6cXY9r
LdbpVfvBJlgmG9eX1ewrieuz3FeksljCfrnvxaulA8l+xIORvwXuc+f/puH8
BWG/XvZTt63yKEvMh8htGrkvCpXl8RT3aRrmOzPXcPnHYT6+VfINEvdpWjk8
4T8E81G73WdBCb6C7RTngiznaZxvEbF5LwK5vWzsIPJzHVjuY12YTzZAxLjP
apZDOaZfL0I1BENtKeO+3D0wuV5infeoqP0rVxeM32mX/iWC83ifIcYt98Fp
RdyHDTDEfesbc24b3ivyG0Ws73KsNLkOBnz/k7/ryn1Mw3lsS24W2AW/zcK+
W5c+r+8j6nOfave197eV5TRR/pKimLiq/KGaB+I+rjtcBz/5+4b5YCyWF+1f
3Fd2TLjv25mPkw8++PfJu8f+0vnLFq0r7pM98OXrvO8n0+I+7FjkhyR2DVaB
cSzP+fXGNc75h+rSheqTV7medfRVu4nz4B77+VyKavZJ4n97Hcryevb6Gzhs
Evdl51+R34L9och+Pevx76r7y9nrrGttmY/pyH1RUq+MIe7jm0ocS9kzSP4U
2f0QeV2K1u0WryAVMV+RNp5t5Xw8s99Hi/vIx8I07yqtB39yrn6bxH3MZztY
1Lf1Zb/Z5ve9ai1Cdx+cv22L+1o1/up+NqKiovLqlfvw01TNdex+vF/wt4T1
EJwGBxI/zfuU3CvE/E1MnEj9QJeWk1NzSy7XSxH3IXFf1v9/nXImOUQXN1cd
X54+9UvHeOJAy33Ms9xna/uRM5xYQOo+bDyZCb7vVPMv1DemjgPcBxe13795
7ivjq164L/Qe9rmP/v+pVm5V7mN5no710jyn+HzCfZ+e/Bt3fvYcZeMMtQ9u
Efelal83GE3ch5julgvT5ooJrcu87ae3nZ69XPTOsaQfWcA6aWxitXjQYUvc
N76Uz+dSVK8PP1B+MzB0qI37lW/r1vb6bDI7dbz2dhxFwXz8Vquyn1iPoc97
VuQDjdwX1W9OSXEfOQusjc49e02mSnNmpjnJ1naWM+7zbXLSKN69lvl87kNw
mbgP/04xH+cjRg21Vzk7i46rc+nGfcot40R8XytXROS+qKj9Jfl3qj57lW0U
n2e5j1oKvXCftrX71HuXeg7qw8J01HTQOyjEfdgTYTy2PzXxRfKbk3+ffPDJ
Xyefn/+p4zoE4yGf+5C4b2b9XLL4/USy8+yOm2a8LP4J7sIPkpg/7GLyhVTu
FNnVimqiD/vbABth59N9DcXitY9dreaz+M7nPqR8mz735bfP1w+A02z+lW7c
J/9Z2fbax9lINnZnXe0v6tuL+26s32txaWrvLKqNV8Z2qjeJPbKzdnx3/uuH
ETnOqdubeVsfKvHxZF37P9xefJir3fvDZcsijm99ecrZ+2A/arLX3aajJHJ1
ivt473bzOZCND3HfUIj5pCvLX0buO8IK5fHsVTASPp6W/2AlxDsa5kPipxBH
LW339/6vsp6Y72UgR5et9SDu89sYai/Ml88/vtnRNvYd8vOEBWVP7BBxQ5fn
kmMXZ5J3xpZqfz6ioqJS9cp9xPbx+8enEs6DtegfMiS2bmnhirPhjS1uuHfn
lXtpvQaG2AqvmNyNdr/Mu762FuS+9vuokWw9nXcxRS6O71m6LrGG+GrQBliw
iPvEe0WC03zuo+5gGfuJ+xTrxzzsaC4Ge+N6VsOOugV72cdSrpVB9yPug2vz
34KU+7rVRrRxeeI+sZ/mhdhM6yqHi3xdWcb62Lhgv7Tmc/seivtYj22r1C/w
daeVgyYUM1f0HHAcxdBpnSo5vxG1FjiW5b4q+VyqcN4g7HbYuO/182XHDvCe
hnW36agJ5sM21437QsyHuu3fsl/d39aovVUoj2e/8uPyxH34RsJ9w/xNVPXz
VHwf489eLOWWrT/e6Kjxp32nbS/OWcV57b4I/29astzHkFoVjMvGyLycvc/I
cd8+eD6ioo68qM0u386Wf2fXvC/fdXKfGK0q97n3aMuHk5hA3mPsS/6d7Es1
+pjGNpj1BVrch13O5z6WsT7Hml69k0yu3nC6tjaWXN8Y68p81gYI78GK8CXH
65bzEPZbX7vqbGLE/oW4j9p1fj26g6LrU8cd93GevW5ruU85XTRfnGR9K32/
UHwev7nfyLhPy8nhiZ9j6B5uP19021LfoSp7lbXfTovv/PU0n3PBl1XMWuUY
4j75d6KM+wK/XdYXK1epGaH2ltk/D6tePm33j+A+crc8ebQQma9GwX78b4b/
2eBP7i//8fWDvphP2n12N3LfEZTzJxwS9yH/ueolDq8X9bJfeM9nPtSO68vz
3ctmX+THN+V5ih8/m3eqcnx4j/6f2iz+K8z5Qj+z5etZ9/MRFXXkVYH7XP7j
W+S9Sn/r/A+MunrwGoLXYDvWw36H7yX8xzYcg30wn2lxGu8Kn/uQz33I5XaZ
n82WuW96y/7mv4+6cR/Dquzncx/j2ABL34ct7qMGAva/M6d+mTR2V1ytdff/
5wLue/l6OP6eg+QKraL33v2rgffhcx/n7edqSb9d7W3EfdrWrgf7cb/GV87n
/HcZh/2cf8pa+ux2u8ahXDIh0V7VC/S3xwZJm8R9Va9L8PepOu0e+2EP5Hdo
+a3qsfYb940y/tDGgln2W5y/3HPezqhR3f+8r7lYD+6zvNcL8yG4j2Ht39io
PZNjviHmjSTfSej9NEz2S2MXGj1zX5ntzv2OWn6pjIv7Xhb45RCTYpmv7J0M
49FexsWZle5NrOkQFVWvXLztUsp6JXkC4bUy7sPW1wv3EQ/o7H9rKcPBcjYv
sWx+vEtUh93Nr8B9NucmtrblxysZB8B7FxeP98R91r5XlfvcN+HZcnLp/PsZ
9/EOFffh58k7llrqdptBuI9zVQ2hUXIfsZNw36ypWTis7564T7UINndT+1d2
b1uxgPCfZUZxI3UgLPcpx8vz321kPqKqF1/Gc73UsbPts/dO3OfHIhaJdnXU
Z5cCzIfgvkGv+2Hz37Qihg/W0xDGY5yYPpZTr6/uNkZ1SrzXr40vpNq/tVF7
JtVrH8a+VAMvpFFyX1GOmPw21ZivW0yfRJ8E/ylqv/fSD6la0yHa+6Ki9oG6
cB9sh+8k/WQ4DfsZ3Ef9BfiL3/uJO420ZkKXYx1v1YZR/s9euI9lE6vrybH3
/tqJadkJbb9V8zTtc9/VB+eSayszWS115sGBp+Yvlfp62mPAfMzv9i6E+zY3
bzm7H/zHPNVeoHZ5iPuK8mJWkbhvGMxXxgK3p08nb14Ov6a1YtqUJ5bxzd38
OuI+f76uF9xHXpeFzeWM+XaezbmhzgtOw144LN4RI2L38++ZzUETOh6/K9hQ
dXBLuS8wn2vU63kMK8ZvFLxo8/MPKvjOch/+nOI+7Hx3Zs81dTay3z7VMJkP
1f6tjdozudi+Idj74Mcy7uv6DFdgNytsaGU5YoZxbM3vsK+7PKVLjvnS5dXa
wDr0E6vfm2jvi4qqS5lfZ0FeeGS5Dw3KfeyLcdiPfcF0knhvbHU5+fz0e8nU
/FXXtyS2T0zYjfskaxNE5GWB75zNr8V9s5vXM+47vXAu8+m0PoLW15N9cCxx
H3k/y9+HWx3cJya70+QS7H5bT+c6thlGnykUcyaF4sx+/OFBmk/9+YLLg1mU
I+Qffv5/Jr/8hz9PfvWPfzGUdspPEvYR98E+ln9UlyB8jTvbmXHf88XMDmjt
d7LPDepXyDW2+Wg4Dx3H1hQs24flvuBv1ORzKfpd9dLmXuyYVa/3MJ4DX4Pc
G/GeRA32Zzt3k92decd+rt1NpoD9RtH2qP6FjU/j3J9hMR+q+3sbtTcalq2P
/ZCnBO6TP6N7d/TAY8r/Yt9nZe82+kT95P+sKnLStLmuzX208/sX84772j5D
1c6TPqLqvXet6Te5ltXwq/s5iYo6anIxeyX1+eCy47fb+VnIwxLaR9kx2Id8
QvHthMX64T5yeF6/MeZqP7z/0X9KpjaWS+vWIBsfyLTlPux3+GuynOHS9owT
8XvwHX4OodyeDFnmcpN0yVspwXs2t2f6Pm1zn3LYdf7vrfs3ovx7U7zM+ke6
vlaT+SRxH9fi6Yu7Zn/puvh3wn3D/BYpPo5j0Db478q9jRz7yTfTbgfXLTfu
JLu7S7l2ir9su0PXsZ+aDHZdmyNF+/PnV9ln199rAfPJF7a352IYOV33oHZh
y+bncvdUtP8pr794j7wtiHg+2G/UbY7qX9wjBJ/rPqJhsnnd39yovZG4bxg1
4uAYmI93OzFsPguVsZG+L2kOsrYdz353LE9Ko+a+8dVLrt787Hpn7hYxn/tN
BnJf+z6j/u+rir/nMOMuo6KiqmuvuY/9wFnYCTUfX0/LfAxPT1xwtdax6VFj
HVF3vVfu8wXfid0s98GH4j7VaofpiBtkHcYt/3XjPuVqscvFfX4ODfmaru5M
V66fV1VV7Ia2/y6/VZjv3qNxx32cq10f/06Y72c/+9M+2lNc78CuI/bjf4i2
dp24j3mWtWA/uO/MnaksVl3cJ1ti6NjaR9Ucm1XsXCG2LDpv2TQL/TqlLrUb
lBO36nH3s4ruRTffz51H8y4f5/bD7xwzYNMTR8B9dZ9XVDVxv4i7RMOy8VnV
/c2N2htRs29YbAE7KqcL3Mf/qs/fWan0vFnuEyu9ffvIDVd30vcZ3EdtPW2D
LY5vr2xyw5JtSxn3FcUrhuIE+/mdpUx+d+C6ilFRUT1KsbWBvqRjsaU09o68
LKqrV7WGu0S/HV6kfgPM2A/3oTsP7iaz188m773zV44Bvzr+8xzzVWU/GE41
++AZfDXpGz9txV3Jl9W9e5v8gCz34dPJ+3ht57pjwqLjtGuXt2v3nTE1B63E
feQut7XcYbZh1HggpqxKvkbVvHPbNLnv4ZPpwnXhPtXS66UtRZwk7mN/NuYO
LlPMwAfX2t8IuA+/T1eTfq3h/Dl/e/tq8zmdz7iPdeApWFG1G9ivOAtf0q0n
G25dm99F30bfVmjbjo8ofpkMxY46Fu2y14UYRPLJ2HNW7GJX7hPv4YNdwH1l
17oO7uvVXlq0LMjPBeyHXyC2PHGf6jLYnJ1RB0PwHrGWyrkzbNX+3Y3aEw07
jyeiFh22MpjvTmPWPU9MFz1r8JHyYvI+o49y49Ejx30wn6aXnj3L2dXI00I/
o+oz3WsMIG1a2Zl3223uzvZ0DN9fNSTYuOv9ifF9UVF7rz3kPraH+1S3T/F6
cCDHUJ0GeE/2vd+OXXbxe+QKrcp9iuVTzJ+f3wVWg/vw9fS5T/6n1t5g+/yw
m7iP/ZRxX/p+XM/sbWXch+Tr6dcsDnHfcsD/gzwmtr1WPve9eBXuC8N93Vjh
9Yvl5OQXP03e/dW/qcR9lqU07m9D25TvRNwnlmIon0/LffZZhJlgP7iPdRDz
xH3wHcImCP+RA1Tz2QfjzLPnTRvst41lMB3HUe2I7VaOUbWH44n77LS4T/OQ
uK/od5OL5yuJ6dO59/LNr8KD/TB96L4Pe90iifvwCYQX4L9Yl+HgiXuGj+eo
mA/V/t2N2hMNK4+nFdxnnyWYryyXJ6yED5H6JzAe+q6xlJsH92kbmM/Gk1R5
pvvJ/SLuq7p+yD/Vl6uRtFrh3kR7X1RULXL/b5nsjKuF1ar8dsukWD7GYb5+
uO/9T/4u4zZrz9vZWsixHPvxbX5F3LfU3JY8LnON2Vzc39KjScdxtp5g+q5r
dGchs/+Qn6Z8PZfvjblaDqF9kNNzc/dG4D3aub/QezfEfYxjk/LbLu5Lc534
8YTdmcByX9VvhuU+BH+J9cQYLhfLdiqWb7ZsauI+lsM4so2F/gch7vMZEcF5
7Df3GzDcxzTjcBttwBZIu8WPcBrPNcuq/AbEffZY4r6uv80W96lmZtm6vXKf
/5wULRf3jdpu2M++fZsfOTmxESlv56jaGjVaOTttU9vrs06jOEbd392o0cvF
9Q05Zwh5XWY2VrrmdrEciE1v6uFUjvE0Duv98PvfO1nuQ1cfnHbMt/o4jf0I
xdhJVWP/adcoa6Oyf65R5XsUmS8qas9Vxn3w2CD7Vl0/l5dqK2U8+XGyb737
mMe0ywl65ZTjPWrzyXZXxn3qL4r7sAum7+I2q9lcnxqK+2x/VtxHPhdbC7BK
n9Ryn5W19fHuFvdZu59dZ3ZjrNL7tUpuEinEffYa9RpPODt13OXw/Pzzvy29
Nsqfadu3bTgO2byXisGDqVRfAe6DPWTzE/eR64Xh13eWki9vzTeZbHjfD/lq
+vOrsNrQZO18JTF9XMthfbOL8r66fCo1+Yt2E+yn3C3ivrrbtJfaDtQwOejC
L9fFZjbZ71VJX3cQ1f3djRq9hpXPRZKfJ8xHnwa+Ycjz9Or1eo7/4B8xHsyH
tl8+Sf7w//4+474nb35w0zDf5suXuf4N9j64T7kE+Ea7+L/HT5LZ7x91PM9V
WE7MN2hNiLL9n7y9mV1z7KKl17TZ7zx2cSY5dnmu9mclKuqoyPUlPeZj3uRS
+j7DVidbQxVl+/wutYuwD7iPPnSv3PfxV+9knMa2LHM2n61byerObbfM97Nk
nSrcx3Lytiivi3J3ItirjPt67fvCdJarHm/POe5bmB/LeM9yX7/v3G798h8C
NV1D83xRB2F69bTL76l5lvuqtk3fJvlFyu/U2vzo42Gz5HnBLqcadpb7ZH9i
iE0O9oP7vpz62qnDxlfiH7kv5cXylbUfDv3mfmNo7OfnJJXK6oDUKVgPPhD3
Ke9/Fps5xPp/+1Wc32FlP8Vl8l4Y9n2s/XceNXKNivvEewzHm30l7HmWpfhO
YZsT9z14/tyxGtwn2x6C+RD8Z32VlDOlnUPuZJrXs7muuI/1+rXbWb9R4vqG
yYFcC645zKfrVXZNI/NFRe2tRsF9Eryn/j48xjzVahDrudyga20WZBrmw8/T
9WlKuE/MJ+5TTpiFRw8K6/gha5cT91G/XdyneSGf+jK2Kp4f5j64STUQyJ9i
6yT0o17sMerfV1lf3Lf+ZDbbFt778IP/0Fe7ZMfzuc9dh1YNSJ/73P8Q1lIu
ZB19776emnKC9z69Op1x33tjC05+HpRe41Lr+D1mvp0ldTStgs/4PuC0UdsG
seuR11/sRywYMWG25pu477Cz39pOY6S+W7WcU6t2g9iP/wcN8z7W/VuPGvG7
tI88nmfmuvs3wXrbT9NnyOXDbHGffbbEfEjMxzisB+NZ7rv9/W7O9zP1adnM
YgIt81lm7Jf7iCWhb8P/utGgzGfbsBp4D5XeI+L7qN8XfT2jokaurEb7iHIp
yb8zxH1wXhXue7zbjj+D1aZWU98K/Q+MnCzwGRpfu1CJ+8i/iWRX8+vySeI+
/D79ffj7DR3LTvNupQa67GWrSxNZrXOGn376k765L1/7p4w90/rldlrrV/IP
ebXkavlxHpb7FuYutL91FXKF6tiy99n8mToHbHjwHeyCHctyn+x9s9MnnWau
X8i478b6veS7pfvJ55Pzbe5zMePmWa/AgHWyoc3jUrUd1tYjlu/GfdZ2W3SP
uJ+9+ti9Dfw+hi1ytVifTjiPnJ3ivtx5GE7QuOXA/cqDvbbrMHKfO68RxmjW
/Q2OGr164T6Y7+nz5retS7zAb2911oDV/3XJkYL9bOvpXEeuOZ/5NA73XVpu
uNx1Nhc57Ajz/e7H1xkjWu6DJ6vWrbKifyPmI28MHEh9dn+9qvk9y6Qc3IX3
B+6LzBcVtScaBffZfip2QhiNvJjKA3rmfrtOg1jP5mIR+1GTb2ZzrpD7Lixe
6OA+pu079traWBa/p9p7Yj7LfXdaNQskLbP8x7bWZhXivj/82Eh+fLPmhm2l
y+GtEPc9f3LP5UWB/1jnZQ8+nmKsor5eaD7H4JyWtiZy51G1ny7uY3xrYyZ5
83Kto01lfU97HLgEXrHcNzF53vXll++OZT6fcB9Dax9kSO1AuI/ttFzc9+nU
YqI6DTyL2P+y593Y0uzzqukq+VOG/VvJVDGez5fv41fEfPb6j4r70NsB+wql
7WrykLhP/Ab39VKn4SBw335v26j05kX7nSJ7H/d6FMeq+xscNVr1mtMl/f9t
+7nArqf8JNRrJ5fL1u6mq03Q8dw2uU99BpiPeRvP2jUbEDUbqM1nc7hgBxTz
+flAZTO0/qCS5T6OU+m39cNax/+34b4Q86HlR/8/e2/+JMWV3v3+4/aNuGF7
fnhtzxvXr8cTmvHgEUKyB4Q0CBCiAUnQDRLdjYR6YekFq1exSmwS+EbcqFuf
k/XNevKpk1mZtXQ24vzwjazK5eTJk1lV51PPVl4zs8l/TJX3SPa+ubXWn5ek
pF+r8vkvPmTUb5jgHHcU7hPrWe4LOV26TCfuEnNdXFvvXOx+R6IzK0ud08uL
nc9uzeX7DuM+fdedv306fN9dv5flylrYvhL4T2wI97Hexv7JLtavVap8n33B
fdpmuc/G0P3P6+w17cF91EMQ9z17eSvf1mT+Qj98TQf/vRziY17fi3LfKOeE
+2DWYb8HZTZA2OTra58VZLkPlsH/UzX9lNsT5mMf7Iw2F4xqKrA9XOurLPen
auIV8rHYOnjm82B9LKfy+TN5OfPPimO9Uc7N9dW5ZweRk6VpfqBRhI0Pv05Y
b1Js9Db4gh52Mf7iPjGf7H3TuDdt/xYnTU/wXhPmu3BrN+c+fkf43RH3MY/h
tx3m+/nFdtQvEv9Gy1Ps43kM5sO2d3Vnv7P7dC/nPpgv9nzCfeR68dxnc8AU
a/1VP+8x7pPEeNTzI5fMnR/mJsJ97MfY4AsbvU9wX2K+pKSpaprcF9rvzWmP
G18J6rKL8/iOw8bHUjX5xH/wHDUbyriPmL4Y9312+0KXCTP+Q6yD7cq+47RN
3Ifgvqs9306J3Ml7T74J/9/1a5TuOrbr6+FPqyGnV2YjqeY+1p0/+8fMz/P9
fw7nyfcZkfuqjhP33b4/m//PR8zeqOdE8Coqncf1bEZ2HcyGYDzLfKyzdWB5
L+7Dv1P19qjLjq2P7b7P4j6EnRDuw99YddF5FhUvWLD7GTtgU1vbUEVseAM1
+UbkPau283o8+HEp+CnjDzwt9lPezqXFT2vl7Hz5dL1R23bZtg5LP9q4bpje
Mt+01PZvcdL0FLivpr0P5sO/E2HLy3NCdX/nYR9i6+C+1b0rYV7guQ+uOTa/
3rn+31fDPlXxcmyD+eo8n3BiXtPv/+v7huL36bnP1pTw4n9r/Y9dxnz4dDLf
YV9x37ifL/UJ5jv9XTw/drL3JSVNUbNrnSMXF0prNkxK43Dfn//j7ztHjv5D
59Nv/xL47ezqpcBoSDF81jaYc15D7ivT1Z5tT9y3tj+Xc9/+07Wc9yz3wTVP
nlVzn+okvHi5Gfbh+5X14j7YifM0nS/7+gh12A3uk1+/5b7a8zJzDsUnHn33
N+77vr8v8XdXZt7Pec9yHzwHyymHC3kpdU13bi9kdr0u54n7YDnesy3mU4oN
kf3I/8C+sDBtsw0mpB3LfbyWHXCA+2rk0qxUjOsmzHpesB/jONJ8e0xbIM8v
7BfmEQ+uTbTtvB3DfbaeN5xg/QN5btiPfWA/XjfxA9W5JtHnca+37T60Ie4b
93Ta52n9NzlpapK9r24uT8t9cIqYj/g6JOZD2MQKn9Puvpb7WGdr/9r9qmq7
e1nugy3J4wnzsfTtwFi2BgTnevxsNTDcMO6T2I+5CcfF+lNVO9ArxqGl3JeY
LylpOjog7rOiLgN5Ws4srXU+vbUT4vPIy4n2n2axfeR7oV7DkaP/VMp9svt5
7tPruY3FzpW1jwK3XbhzJuzPcmZlvvPRzev5uiqVfS9iE5zbvFDKfTBfxnGD
9j8bQyXuYx3fr6t7l4PgJsXJifvqzpNHzeMAH9XJ91inpre4j5hF1jHnhvXE
d7yenz0Z2M8fL+6D92TThef4zRT3US8Cn86He0uZHqwGP1BxH9chX1BxH1I7
8tkR99n68Jb7ZA9E1hao/DDIclo0DtDzorUdTpH3rOC+UZ6LcWvzDfyH7HII
lT1bdfMKFeYUD27l7Jc9Z+dy7tNzJ+4j3yf7iv147XO/HFZNi/sOO09O284n
tf6bnDQ1BebDjtQwnyfMF7S+2Pn8zmzOfeQ+4Xfe5/hmLrD1cDfIruf3xrPZ
KHkzn7/MjoP94D3FDKptbIeaByln6MrujS6DXgr81vS/b/4Pttz38sVuoS91
+70bqSukmocov089e9+fryT2S0qaqMhnHOG9aee2r8t9Z2ZOdk5c/rRz/vq1
zvHF5ZzVLK/BdfCXz5FVxX1oXO6D0Thvfy5bZDtYDjtHjPuszY98KLkP6eZM
zn0wk8+PYn87RpnP9P1USupYOO4r238YC2jb1c//EmL9yO+JD6blvqocn7AX
Ppjk78RWZblP9kviCOG+vR3HfT37jbhPNsanP22H97SjtixjWO4TcyhnaNlz
XOA+kxMmxnM595nP2FRjBksE+05ibly3HgQ+nvZz423JZTlG6+QeHXhuetxm
uY9cLzCenrvQ96frnf2tG2G9jhMHsv8kxudN1STjIifZL5iP+3oQ7Nf673LS
1BSYDz/PCPvVsQHCfJkWu/OXpcB8ZflPkOU+y2UwWzEvQLNnVNwHM+Fv6v8j
E/fBhJb5Zjcvdb7aXQvr9J3MOgTHfrr6WZT5mM/Y9sV9k6j1Lu4buBeJ+ZKS
Ji6Y7925eK7cSdY0PbG4nS/xscPeJma6urMXXp9Z2gnzPObkrEOW+1g25T6x
H5yFzWx9f76z+3i9+x243J1/LtbiPvbBR0O+nbxW/F/RhjHIdvofkFoMdbjP
cubs0snASzE/NPFPk/oIZe8t7/gcjZb7lBPFHlN2Pjtfh/24DqRjaKssJ6Ty
cmLvg/t0jeu93zZxX6iP9O3NztzSQqjXsLI8W+A+f63iQNohvk85Q7XPzuNe
HbDetVn/2Mu3Sz4LLi4vzwVaw4bXVk0I7JhIPDyqdI8Zy5hdTuuo7Xi1l1dX
yj4Pzc4zqg1beT4Lbbr4PvEi+T9hQ/Z/U2x/01BdZqvab9x8OPZYm8sF+62t
wzgNtf27nDQ9Zf6DfZtfzoEN5zs59z3YjebxzL9runxEzhde6/eLdU1Yqey7
79nzvZz7rA0RJlzZXQ3zH+yBLMV6eg/nYavkveW+MlufcpEWPqOGXUs/x65m
fdl+jOHAfYLLD8gHLSnpbdFh4j54ynPf3PpGiBWD+zjm2PX1YPfz3Le4fbcW
98Fh4j7WLW5d6yxszlbyXxX3ya5XZtPjfOwb4z4xBdwXOy/cd+Tdvw/Xf/nS
e9Hfghj3xWx0VT5zqusm7rP7Wf6xjNbE7499L104mnOfjiXPh/8PUf1XXb7w
G2a4Dy7TbydMiO8i7Af3WTudv1bLi7Qn7uO1jhH3cZ2xXCiwH7xU4LVInpc2
bHhNNQnus88P41m1j9jvwdOl8LoJ98lP96Br0H39xfFa7HfYfSNHUZNrKtuX
9bKtj9oPYvnww7W5XOA+G7M5DbX9+UyannLuk8R9PRtg0/bEfdirvry9PfAs
wXyZ38luEMxXZR/0qq5/tDNgQ3z2fDv4o4r76J9Yj2VeJ/D/fZFzH3UfWA5j
vthva1m/7JLrVj37gc94zx7q55vhfWK+pKSJ68jnS1Orz67PMayHsOfh2828
b2V3IfBWiInuMhvzf7iK706+p5pwX7CRVXAf2/DxW99b6Tx6wv/8/Tg8cd/s
2kop88F3Yjf8NrEZkqPl+cu1TrkP53DFuM/mDeX1xZXjnWP/9Q9R7hv2O+HZ
zH9fWzuYza/peVHbbT2IMr+8sngtuA//Pmq6s05+luI+nokXJncNTOJrEHB+
eEzXAffBG8rJEqs1LzYWN1iO1Ta9hi9UB5Dz6Bp1TfSXcxbqPqBJ5vg8QCmv
zSRV9X8A8atwn81PW0fcB2trPijh81k358sk2U/15g/yWmPX08TmV7Wv576m
Y3UQeVy82v5sJk1fPr9L7vtJ7EuDOg/Sl8Yn5HQkh5a4r+mzGPsPk+Wz533u
I58McwYx386jjc7Sg83Ad+I+Wxce5nvx+qewROI+asv7OZBl1Crms7lOtY7f
TLjOMp/dzjbVcRjgPu5DqtuelDRxHST38XoY95ELBd4L+VnMEvb78Mx/lbLZ
wuZKJfdhExT32dwr1ExQnB7sh+/n3MZsPe57UW7nq8t9kvzgYtzH61Pnfx/Y
adh3ryRmseyi42S3E+fYvCnex1Hchx0Mv8v+d/egn6jnPr1mzLgWuI+YRdhv
dW++M7sxk1+z577sd3KvEIsGc4k9xWxsF/eVxYKJMZXT5dXrIvfJ39SOh70G
MUf2G5bZtrAz5vx3yG17ZRrGfaPGkE5CTeNJpyHYC/Y7yHPiY3oYuA89eXa7
3r1qyHFN9z+oXC5WbX82kw5GOfOJAXvMN46vE8yH/S9m3xr22y0mYj+Oj3Gi
2sUGhy1OsSF6rfg9cd+AeqxXUK8OxLXvrxVi/q7tFPN3cl1r+4vRfvv/W8V8
sTyl2Dy5DgSX6l4UlLgvKWkqCp+vCXKfvi/fu74dpPUf39wJfnLY/JS36dS3
2T68Zj4PE47KfRLM5n08tR/2OXgTBrT8Je7Dtiju4z8oWBI/TfjU5vDEdgiv
ZnmZxXDxun11uI/vQdgHux9sRH9Y6nUZ9/n/0WWX0+vY74zsWta+JVuYZT0b
28Z2mEv1D+Qjae2K8hPVe3tOcZ9YFt/Vk6f/Nee+87fPBvG7pdqIMLW4D7tf
jOtkx6Mvuo7ib1GfEdWWYgfZpvdaV+aPZq9H1w/3Zc97+5/hUVW3pnsb8s+Q
fbbrzqHGFew1TeZ4+vB27q8IX0qwHzmQ2hz/Fy83anPfNEXunUd7SwfOfm1/
NpMOVgXuw+Y3ZoxLjPua+EeGZ/9JdgzzIh3LOn4L1/Y3wvxDrIdgNDEftrsf
X78eznuO+8gBQ+5PMd/i9kaoGYH9kPPDfNTzI6+njfez/RazVv1vqH1gPq4v
vw895iOfy5GLixONNUpKSsp0GLhvZWe3c5E6bb28LlmexZ3AbdSo4bsIP0/Y
b3N9Po/ps76eytdZh/vYB57C3wx7H9+f/VyDi93vovWh3Dcq65Xldsm+0zPu
I5enuM/mjvnLX/93zn4oxik2Bq8s10aZ3cRyH+9fve7bwyz3wUs2/k22Qs99
jB3Mx3WoJiDXA/dR4wH/VV0b3Kf/LTlOcQWcV9xn68+JTS33iQNlm9Nr9lOd
dvov7tMy8zft+3z667LXxLmw8xF7mD3vvWf/DbT5NeG+g7a1xZ5N++yOUuNh
FD26vxqYY5I5XmAZ8lLCM7Cfco162+JhYL82z2/Hi/GfdkyfVdufzaR21I/1
uzVSrJ+XnqdRv6tgK3EfIn+LmE+/kZojwGnMl+SzOZT1DPNJqvlAG/ILhfmo
1T67ttnL/XJigPuaXJ9iHeE++Lisdp+4z6rt5yMp6deizKa+PvF2xX34eMJ1
N/87m3fDeTCTXYr7mH834T7sQuTS3H5yo/Py+XrwF7SxftYmCO8Rzyc/TnEf
PqbaT4xH+7Ah+V94jQ+q2uF1He6rx4X978PAIibfha8hAfe98/u/yfe1S/ki
eu6ztruYTcuyGuPu2UfcJ/9Kaw/057H2Nt6L+7hHoe3uknX8VpVxn48npx04
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
Y7m7bvA/Ur+f3jN+ttbHKCzG54w67Pwfwfvw38LrzfDcNm3vTWRBbH1wSl3u
g2PEfU3OQ9vk/az6zEp85nU/DrMYO+XnlE0PYROFdcV9B9GXGPu1/XucdEh0
tVjXb9QcL7H8LrKR2XmRnke7PmO+e4H5bK5rPut6r9oNcBl2P3Ef60Juzwlw
30+vX4b+iPuubPZzp8ObsvtxDWy310oNP/w84b7T35WPU5ZPZ/Q8OklJSc1U
p6ZD7P8UXh+7vl6oxUcM36S5T5wnm5VVjLGwSZG7sw73yV6mXKKe37J6d1lt
eb5ry7gu5JshLq27T+ZfOh8YzHKfPwb/Uua9yptoJe5jG9x3Y/50/l2qfsfY
L6tPcTmIcRYLepuMzwtq5WPk7DFS7iv5YDu83320HtjOcp8Yy+bit9zHvuu3
rgTu+2b5fGEfna/4P+JenoeFbdjwsJNZ7tNr2QXtmIlVVc9d/eJ61c+ycRH3
kV+m1K7Xi/Pz6+nnsNi9K2uLpeyH/Q+Ot9zH/p+uXAuC/Vg3/99Xw3qkfW9s
XRvgxWH5Mq2y2iV2zrLWs59n7MdnKvgkT4j73hQOFPvVrTGwsnCucZxaGfep
bom03Z0Xch9QeIZN/pJJxsZNatwYM8t82nYYata3/VucdHhUqOs3gr8nnAPv
DHx+u7831EwQM4mf4DQ7V8JWZrmPGgocz2vlCKAtmE/cF9rqsqNlvoHYv5KY
vhevfyqwno6zfUKW+7iO/LP9Kqsv+OXt7dxvCOZjbljJfIxz4r6kpAPVONyn
eD5yuFxa3y3wnmc+iZoKyo+J7yScJnsR6z449dvAArZ+TRPugyGZm6qmu6/z
jg+pavHV4b4+I2z1cmXG7Xqe+/BbzeIFy3KA7kW5T/lP2P7dt1+GsbDch8q4
T8wnxfwVY/6Lek2b+D3anC4xe5+YDu6D98R9jOW6y2VmmUpL+Ak2C+PfZT+4
b2CO+Gq3wIzWzkj/xH3iKdhGrCWfUM814j7lw1Fb3l/O8wd+oTpPqQ8n3Ndj
P/YV7/G+LG+19rV1O7J6klkdR54lcR994r+CEO9puA+RIyfs12M/2Xvhvq/W
7gT24/8L709r4xp5/6q3Xs8fnxNv94X96AfPuriP10+eL+X/ZYzMBW8A95Fn
8s63FwPLNcnpyf5Nz+XrPOjzlPtp97gO9gtM9XN/XbivEe47aL9Q3wfVsjiM
9Sra/i1OOnyysX6j+CL6z56YL8Z9sBbMBfMVvnOexfNHwX3si21QzAdrcQ6x
n9rMWc/k7ww13h33KU8M22wfy2T7c2Zpo1dDt2jjG8p9yT8zKenA9e7cRq3P
nuU/m8dlGtwXY6vMR23QvzKL+cp4rC738f0kcRwcAGsSA6glbcqnVPleYtzH
PJn11K1j7nv7/lzOfcHeV8J9NvYtzJEM9/Fa3PfL83v5fE3+kzHuQ/BeZl/s
t+nPYeeQ+j1SbQZxH+Ph891Zm1ionf5kq8BQ4r6dx8U5JsdYX0qYjPfa//PZ
4/E546t+bUJxn+0/NjjxGHZG+Ep5YGBL+ZPqeNkbbZ9jeVy84D5i04fmdenF
+bGf+sH6YceJ/ZA4T9xnbZDiPjjvg4Vbwdb38Xdfh/fEhaoNxXjy/PE88F7c
Z69L3Kf2X5lt/B8hG57G3h5LX3Qcz724b2xOGJH96tamGFfivqbHNeU+1ZCo
2l7o14+3BtY9e76d54fSMdPkPp+TE5tljD0nna+l7Luwqdr+HU46fIrV9RuF
U3i++OzBVd62h+Aw+IyaDHDbsPhAifhAuE/vLffZtmO1G+C7fJ/eNpsnxnPf
4vZGKfcRvwf3fXxzN4wP3Fc5ruLp2Xpzz6SkpMko8F73sxfyepZ89vDl9Otg
PmrzoY9v7gywHgwIC8a4T/XTJWtn+/HhreDfSZ32UbmPuSd1/fBFY96rmuwS
c2B8D2TjE/cpftByn9rHpkFbzJ3Fgnpdxn2cH39WcSP7o76dcpD7UMil0Zuf
nz3zhxADB/fl9pbngzlh7GvN10ed+8juZ/PFaH1sfzHU/uNiX2LMpVwwSMwt
7oNvHzxYGjhPqAEYqaNu39MebGZ9KuE+5RaFQy336TiO8blrquaQ4sqqz5Rq
TtBv2qIfVfuTw4V8pt8/ms99kf31+eu23AcbivHEfqEOSG/JMwn7Dbvn/fu0
FZ4fPUfyEbbsJ47Xa87Bc8s12P3rMNwkbXwHwX5wDPX7mtqr8Nlsyn5w07g5
TmC/G99f6dzdnyvYAyctYvPgPp+T08dAsm2S3FcV89xUbf8eJx0+jVLXT+wT
W6/YO3jNc1+2vj7zedGmeI04P7UtlhPvhdwvPXuf9dlkvY63zEc9Qs992BZl
lwy/i9fu9cdr2LhevVfgvrbvcVLS26Rpc1/M5jeM+1Srz8bBWb9Lsd+TZ/2c
LMz3yPnJOnGfWA3us7lCmQ8zvxabWZ9RxczoXOpX8Ed03DcsxwuKcV9/H5OH
08xZ8JfUnJprCPULf+7HERXjAAe/+5m3Mw+v+1sRa0N2IPqBL2VsDm/j/JQf
07b56nWc+1RDweaPgS/EfdpfvpfKu1LWb9kE5cPJEu7itwgbnbhPNkZrP9Rr
+mT9HavmkBzj86YgG+fHZ4o+0I5qUXheDHUqenk7xX7ql78X3ncWv8rMt3M2
5z5s3Dzba3tzgb94Xq1ttuoZUP5Ynk/szZk/c+aDnD2zRb9b20+75Lz+OR32
/E2S+2LPyaRluY/aA02Oa8p9sGKZzayufnmxlXPfNMcF7rP5OBkfxRraeD7E
9knF8+0+Sva+pOmqUNdvSExMfkxkPoW/I3MjbHKWtxSjJ+5j/atX90uf0zKb
Pd9/Yj61o6XOJb5kaedl4kRv4/M16C336fdAzFdbV03sZM3xTEpKmoyUyzOW
n7MsZ+epb7P15FlUPhfv18lrvt9sDYcY9+HnKQ4izgtb36jcl/lqznfn0dfz
Wu2WwxSPxHrLfaovF7MpkgvT1p2oU6tP+TrlF2pluU/sx3cp82v5dgb/ym6f
lndWQnzWydP/WuC+7Ht/0E5ot1nuo82qXH/6DfH5HS33aT6tfVUfUNyHlG9C
x1vukx2GdmBE8Zdl2Hf/9Hedq8bfU5zBnA6Ws1ypvsT6Hv4D2C7a7xhTcR99
5LW/Vtv+MBah7/3PRSS/S4/92F7GfYh18FlVLQTV7bDsZ7lPMXU8I7Af3Ff3
OvL5Qpf7xH722Fi//JzjsOVmOQj2k/DDbMp+N699Upt54D58Sse10cF+Ov+0
xoJrwo7HeNicnJyT9bE8Lochl4tV27/HSYdbuY1qjNp+4j7l7hT32TlSFfOF
z3OE+/jew94Hp2GHi3GfmE/xe1d3iv/J817zNtqinx/eKPoOPXue+XTa396R
xtJw3zh1EpOSkprpMHHfe0f+Psz7lQdF+Vx2H68HO4b4T/Yz5eS0sXNV3AfD
wXvYAn3ORNoPuSme3SrY/4INcgj3cUxWB3DL9C/OfYNt9FlJuTE1vxf3XV3+
JPh6MjZ724u979py7huYa1ZwXyFfx/PB3xMxnY0DDOu77WFn0u8NHCSm0rGv
em16O5G4j/Xbm9c7H374L533j/2vwH2qU6i+6Xhxn803o33s6xiTWHsZxyO4
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
Yftan2XHYLfEfElJB6eD5D7VbOvHsu2GmuwrG4udxeWFzvW5k50Tx38bbFcw
36nzv89tbjMLx0Kux92d5dxXU3F5nvuo81DGfbK3iR9ZxzxUeT6Vd1P+pDHu
U55Q+EgxipwLRtJ1ZfPtcu6zdr/MlyvbJxaPZuuZhznaK+WR6e/juW//SZZn
hjm32E3cR9/FfWI+lOWrydrz3Fcn1itnMOff2e/zXmdnf72zePNq5/L59wrc
JybhXu7tLAXus7X7vKyvKyzJPcb2BffBfOGeb2e2sLq2uhjXiftsvXixZ502
4b5h9fr6n7GeLPf1fEEbHW+4T/VEVMuv6by3DgeK78R9fK4G/Ui3Atdb7ovZ
pZWf5tcocd+k2mPc8SHFjoh9Dd7i9UHnU4EZOb+Yj3XivrbHfFy1/fuc9Hao
z309iftgwrzu63bBBheO9fY5V0dwwKdSsYW9vJkFu52LxcvbEddpnZkLJjtd
UtKbJzGf/osq+CLYz7d5Ld7Dx/Pjm5mvJ/HF8F2Yb+/s5jUdWMoHtIz7YLk6
3Hflygc5983PfzSQ7xN7GxwGAyr3OUyAPQ7upC9ZHsfh3OfrLSBsg8qLj01Q
3MfxnvvyOMTn2/nxIc6vy6SW/Sz3sWTsFMMGw3ibVphnverHnZ35LsvJhf70
8V87x86eD6xB/TfPfRJ2Pf6HZ+m5T76THIPPnvcTLJ37WfZ7XbTT2Rz/4j7G
RbUTwrkc973z+78Jz8Dpk78LTGvb8/XgeS/Wg/2U2wTu473N/cn+Zblehl0f
faUt2K+snp0XfatiP8tq0Vrvlvsi/Kf3ZW1Y7mt6vXpdJ/aP9lUXpIz7PHfC
fcjaId907uPz1mRfdP+n0WLh+AyL+8j1goir431T+9049j5xn3LViP1+DWr7
9znp7ZLnvgFmi/lW9piv2E5FXKG14xkbXjjOcV1SUtKvT9PiPliP1zZ2jmWY
o3e3/eGdvw18Z3Xk6G86H5z6bV43LybxXxPuu3V/IbdHIvqq2DLV5LM1IqzN
r4z7LCPCgJYbxXRl3Cef0kF/0EHuYx6s9/DGiRsZ47GE+Sz3sQ7u+2DhVhB+
hN9s3Q7z6qzedxbbJe6LzXMs98GzdblPijGCtY9hZ/zy3NEC9yl3KdzJeniW
2hTiPpb5HLOXL9NyH8y39yjjO9oU68F97Mc4Mj6W+3w+zzrKGHVvIIawbH/l
9bT1/GKcJ3EvSz+nPTugZboyVvR6+CBjsSb3sol9lGf/2ctbOfdV1YQcfF62
CrUF39T8nrDPw59WGnEfx4j90Cjspc8xx8J9vF5ZODe1uuxlgvfEfTe/Pj12
e+SsUd4aXVcbavv3OentVG7vE49Z5uvZ2GrFxbm4wtCWO86eJykp6devKv9O
z4DwHoLbWIr5YBVrw0PDuO/M5Q9H4j7lWREDXr7+nyEPCByoeDv8LvHrpF+c
j75Z7sMPtYz7svwrmd1JvpeW8eATawsU98GbMY5TXs8yH0+/P+PKeMMLcADM
oJprcJ84D8ZjP8WIafneha8K3Mf+zKvZxjGhHsD6wkDsXFOV2YAUCyebWGGe
a7gPn1N4QSwl9hP3PX681rl+/aPOkXf/vsB9iDhCmI57t/coy2cp7mO77q3y
t4r74EEYMcZ9VXXk9Jq6ELa/dWodePaL2eV073S/s8+b/yz2lsb+V8f3E4n7
yPXSJDdNHZsfUrytj+2s027W9lZ+rLivKv7ysArWyjh2ZSBHp/Ta2MLFZuw7
KveVyeYLbdL/cc4p/1LiDmE//FrHaQ/uo7Yh7bbFfm3/Pie95XI85n0v6yrZ
8JKSklChflhsewX3ifl4nc2Zi/YyrVM+S9Xuu7qzF0SuzUsLx0McHjF585uL
wR9TbFfFfmXcd2NlJsp9yp2i/qumguoo4K8Jc6i2n+U+e23ivlguGh/D57lP
uUwtB2I3pPYB58j6FOc+/ASDLe/6Ri64jv2y/I5F7iM2jH38/RT3rdyaD/zV
NOatjHPK4t1s7swrM++H2KawnD8d5rr42MIL3AeYzObjtNxH3KL1+VUOGXEf
18XxOpfnvhDv+Hgv5z44WnZU9vc1xHW8vx7VYpSP5zDus3UGOZ/Yz+f41P3T
Ptnnrb+0jJfXfqj5Gbe1H8R9o/JTGfsRt0eu2HG5LxZf6W27h1U2hw3XQ3wb
0nZr13v9ejweGiZyu4zCfeNK3Aer4fcJt8F+dhyatIW/KG0h2mijDnzbv9FJ
SUlJSUmTUl3uQ6rPDudZ/07PfdI0uY85P/v6feDAs1ePhiX5NbH/2Zp5lvsy
hsv6KO7r2/uynCj4hz56sh6Ot9dTl/viuT373IffqOU+2VGzsc84D06r4j50
/MZy/55dvlXKfT4+bNRcJ1wDeWN47+fl1peSWL6vv8jqsYv7xH7aT7k9LPfR
PuuxARPnB/fxWuynmgAch/3Nc5+1x9nYQvsaxhK/iWd8zQfrc8hreFHcpzoS
9njtZ/OLhrHq2SFZwmBiee7BzuM+n9Insb58Pgd8OV2dh2E2P8t9w/KZjir8
OsV+vo5HXYV7b/xQ5fOr52uc+hLTVj8euM9/4j5EHfa6zJd992yM3SfYryq3
5zTq9iFiC8V95Bel1gRiHKpqzeszwGubG1TbxX20+8uL6lokk1Tbv9FJSUlJ
SUmTkPJ4DttHy1Pfbhe4Cb9J4uRgFdnVYpwjzkPLDx/l/IdOnvldgdtWdhfC
cm5jMTBdGfs14T7mpOI2WJV+4ucpjsPupBydZdzHHNRyH3M7W8PPslzMf9Pz
sI3v47zYKKktwesi92X2Od7bnP9envuq7EGWE2jTz72r3of5ZI/LxH1hnnZ/
d2B/y33kntB25RjJ58c97uO+wDqwkbgPXoT3/P233CcGs7ZFuI/3Nv+NXov9
LLfFco9qqXZ1jPxD9Z4lPqf2/FU2NRgsm99n/qf4qIr9WC/7ZWmsX6S+XxX7
WX9Wf38GWGBEW6Bqm6jmI5857Lh8Tuu2J+6THzVjq/yy4fO5txHl83H6PUnR
5yfPbuev7Tax3/MXt8O2Ouw3iT7BSMPYb9LjwPngO5bE+8F+xCCyFPeV+X+G
/z4izOevKXFfUlJSUlJSM73J3Ieyem9Xenk1l3Lfz3D8woedxWunOovLZwrc
R7/LuI/XsKLskyxpExbTOvGd576MK/q8pxp1ti6fztf3E8z2z2oJnu8sbt8N
9efxT2XM5b+pexHjvtIYrxgXRGLCFDvYaF5n8pmEfDHP74Z11m8S3nv66Hbw
58RXE5/Nvk/lVnht58by5xP3aR25XajnAOfZe49dCaZQjhVxn85BX3yMmGUD
XwOwMBd2HKh9WVru4/Ver1aJ5z57TVVjCfdlY1LkMNplSbux+1jHz1O2SdsH
e+9iNSHHYSexH3Y/luK+pu3042eLbcN9/Ndg7yv3oE5+nYMQzCfu84LzLPcN
a4vvnCb5Ycr03eL4+VVGEZxr7Y1wnvLPrNw4F+U+eI66LtgGh/lzst9BXUvb
v9NJSUlJSUmTUF4brGy7y+WJn6dq9WE3s/Yt+SjGapDDS9/c38t9PM/d2Qvv
Oeb94/8Ycm/ObV4IHIeurH0UuA8OqsrtMoz74Ivtzesh9m99fz63s4m56C/8
x/y4DveJ+ZSnM+O9Yt2GMu4Td+q9HaMsj8lmgftgbHGfjd0bvEfxvP9Rnjfc
hw+o8kd6G1dsDqr8K3af3G5G3NjD+cDXmtOK+150xwn209xc83TPfYwXjMO9
sNwl7sO2x72AKVb35gvcF+s3DCYOtdfnuc+/jo2D5T5tF2uK+2wum7J2YvL2
N+8vauee+b3ucV+V/VcS+4W598/DGWkcuxmfIeIus3t0Ob9fD56OVqOg7Byw
H7GAu4/WC9x32BWz8ZXZ9SbBfeTVfHB/uTX2K1xnl/NUZ4L35H2BCWVvlP9m
E547KPZr+3c6KSkpKSlpEjoM3Hf2wnul3Md67Aass3a/mB2QffD7hAVgJ/it
jPvEdJb7sFfmtQUfr4d8LvRP+9prreI+XbvyRSrHjY3ti3HfwuZKZ3ZtJfAe
48uSMfc5W4YKthP3WZtQzgobedyf574yWe6LzVthPs991NtDoS770rncl9PP
07M6F3u93DsZ+9n+0B516C33re3NdWZmjuT7eFaBBS2j2mXsGurkDPE8Jkaz
8YHivlHzZep9LI6NHD/cM2yhn127Fp4H+0zAn3uPtvP9UCyXat3+VHFh1fGy
+cF/lvt4PprWDywTz5K4r20bX11hB7TXj49BltfoeqVP56h+mORTEffBU7xu
8/qfPrwdYv7gPux54j7Wkbulyq+zTIn7kpKSkpKS6kk+nrHcvta3M1bHT/6e
yzvrvfrMWf3zqpg21XEnL4y4iPl2Nn/vx7zBW9jv4MBxuI8+ybYHu12cPdad
a5wLNd+J15NNjj6pvoO4j76UcZ/NUwMzyvfzh6dL+TbLffG8LsX8L8QwlXFf
0/t65OJirpz9jGTrs8cMiyVibi1u8xL3MQ/Hxko8HvMxZLnPtmWP133HNmfr
q2u7uO/dP/1dEPUcjr77mwL3+b4y7jH/zTAfNtxHbstYzs74dWYiNk/+kd43
s+waJyXlBYX7zi7cytfTH3Ef77l+/ssIduznxWuoc55hY1LFhPxHoDg/PpNa
sp7nhOdoUrk5ZWue1nx/0rI+oOK+ScXxxQRfEVN3GLgPwXjwn3K9wIDivlHb
PIj68G3/ViclJSUlJY2rqti+UbgPG9kkuE/cxXLzQbYeDsR2oPlkWb7PjP3O
5/XWLfetbFwp5b4sl4Sdx/ftcdncrBinJxum574sX2I/z4uuxdoHf3n9fYH7
2CfjviyPp2yqyu1Sev9g9p4s60W5L3qP+69tbhfGgv5lNeizdWW+fyFGLOTf
z/zusO3AfrCe7GCxY/qxkX1/WMbJch92M8WlERso7jv+/j/nuT1j9iO1GYtd
s4L5xH322Ni+rIersEXCffTNtj+Ofc+Pr9/Oebwv6+baXB4rhTxHiftGmeP2
YzCbX5t48fLGR3ktFX0uYT5y5or7qhi0SR4Yn6PU9v2wS8xnaxdOQvz3gr65
fjrwVdvXiVSPAe6z64fV5CvLN0p+GP2/NG32a/u3OikpKSkpaRzltr4hNRzg
D3gENhKHsMQ+xtxSLKa4OmLsYszHvBXu4zj5gsJL9/fvhvm7taV57mNZl/uQ
jaeTbY11MNrPzzeD3+fdlc8DA6K5udM91ilyn44X92XX0ec1sUW/NuBWzn1i
Qct96gs1G5j/sl42GdWxF/eJq/v3K6IS7ivcQ1ezYfA5yPTNFj5oa8Efz3Jf
bC76P6+LuVhYik0ePFgKeTvnZj8p5T47Jw/1rX/s26Q0Zqyz3Ifoy+ezx4PP
7rWFU4H9xH3+PHW4j+tg7KlDIkaqYjKxX2YLHmwv5j/q2/DnCDUiS/KJShpb
3ybst7p0ofbctS5LeWZqwn38BzS/eTbnPhtvy3rYb9S+NrGrToP7qvwtR625
IO7DFjop7oOBgo29x32THodxxm8UPisbd5szdNp9b/v3OikpKSkpaRwdNu7T
Ptof/8osv8fOQHwc+1HnjxhAy3vE8+HfWcl9L7YHuG93ZzEsFxdngi1Q7Mkc
FgbC17R/7q1CPyz3eV9Q6xNq/TvFfcQFivusnc/aVVWfr5T7evGZquM9kN8l
+PEOexb63Ed8HnNz3dMoB0VyU2T+uX3uu3z+vc7e9mJvbutZr2oe3Gdv1ViQ
zyZL5sZw362Ny8HfE/YjV+gwG5pViOXcznxKw9jfyGpQ+n7YdvQaWyR9ibFf
FffZdvxYcBwxecPyrfg+Ye+z3AdrIWIf/XjqdVl847BzNZkjZ/7eGcvI3ofK
/ITrSL4AZWNadsy0eQDx3wP/DY3DfrSR+cFeHzsGEg6Cr6ZRn2EcEbtHzCGa
VJvyX502+7X9e52UlJSUlDSqqpgvlscFTmPJOvkfMlchTwpsAGvJDrf9hPxz
cT9PHx/Hcn7+ozB/nwT3iVfkQxmroWBry8sX1HLfd99e7ljug4Ms93nBrs+f
3K3NfXpPPnp8O6lbr7oYMe6L3z9j63PcV9gXDqzgPmoCHv/q+/BaNcTFfaon
GMs5UjY3yvNkPlvPua/vx1Y9r/K1FvRavOfjzTz3UeMB5vE1EyznKDZOrA33
Yb/jeRLP9efixVwtWq/9ypiyjp3J+jgqj43lvrriWGw64j3PfarTMAr31b3n
w47L6mFmnyXibsdhv6ay3DdNv0++Ry6tHe/c2J4Z6Xh9Roj9E/eV1YKoI/w6
+U/gsHEfapq3ZZgOKm6x7d/spKSkpKSkUXVYuI+52NnTfwhizqu6erCU9aXE
Tqc4OrsNn8rr97KabizFffiE1uE+tSWbCD6g2B/hP9kCnzxcjvKqFdyn/dH9
nW9CW/F8LnsF7ptb3wjxjicWN4I0zkPvIaw3xI4n7rPr4Dvyd362sjbAfQj+
YL6Ojyd2yfJcLoPrrJ/ilZn3O788v9dR3suquDnqlds66GXnsNtgm0tX3uuc
Ov/7wHziPrbxTMpemNkOt3PWUc5QLcVGPpeMzidWsvk7rd9nUyaKjUXMDlgl
amMg5vZwH+PMtev/D7FW1fUcxByfZ0e2K9kA28i9OSw/6TiSrQ7mq8N+w1iM
7dgNR+U+mG9l4dyhienzks1vkm2SF3Ta/W77NzspKSkpKWlU1fHvjEkMiLBT
nV5YDfNMa3eDu7K5Xpz9LM814T7l1SzjPjjK8iTHcQw15T17KvbOtmW5b3Vl
tsB9YjnmeJlvZ9/X0zMfwofUch/n/PHhrcK6UO+uy8v0m3oVdbgv9+/s1WgY
6r8ZqdEh7iPvIzlNVAeA/J4ZCxa5r3y+O7gOn0M45Osvjocl7CdesvuJS/K5
7qt+bXPlL/F5P8gX8+THW4Hh2C7uw94n9uM5UFwZOXZsLbzMRzSLJZRy++SL
Pn/afqkvsu/52npV2jdtKQfMzuNi7UJ7/RpTXpPXlNwxg2O+FRgPe6q4T3lN
fIzrJOp9T0KwH/cbn2Z/vQcl1VOcJvfBfJb7YnxXlp8ktt+o/RH3tX3fYyJ/
yzS4D5EvZpp9b/s3OykpKSkpaVS1xX3yv7Q2M5hv5sy/u/0yJhMbFmP1Mu7C
Vpb5sG2F3JyqIVGX+1S3XXFpMTsesX6KA6ziPs5vj4fxbPwgtQw89yFx3/HF
5RDHJ5Wxn+W+shydA8dE7jPzYHGf1sF9H91c7t7LxXD/8Pcss/VZO5eNcXu4
t5RzX1kNBWRze9h2ZHuTXcrWxrPcx3r8NKndBvfh78m4WZtfNic3fetxX3Q+
+qJYM0+carmP97H64LavZW0jxnzH+IjGas3TtmrNw306b79mRJ/7eKbI64Ji
7NcW9+07dlbcmrivju1tHL/Ssm1ivzI19X21yuqYXA/cx7hjqytjvHF9OIcJ
tiLXSRv3vo6IO3z9stzXdxTmvfPtxcB902S/tn+zk5KSkpKSRpF8PN+d2yio
LKZM62ER/BFhPuWIJ0fL5oP1kMslVk/hILhPdiGxnI8FlM0QBvT8Z7nP2v4s
96kPcNv1uZMh96e2E5t45eIHUe4jd4y4Dzb0uWTQ1eVPAieL+45dXx/gPsY/
3B/Z+MTsNbhPcYB+vXw68fHEvodvJ7Y+y32/vN4s+Onl87IS/0bi+bDvkV9B
+VjsHN8fo5prsbm6xlzcZ1lL++sZFPcdeffvO+8f/6fOJ9f+Kzx/2Xx8r/Qc
+Tz5RX8fy33E3Kn+otZb7vPHIV9vXvvt9ezYqgFBO/ItFSe9et0/t88Xo/c3
rp0KeRqJaRL3Yde09RK8hs1nD8r2Vha/OYk+NWl7GhL38Vmx3Bfbl33K2K9J
HT/q38Xi2g4T9/maDarTV5XTcxTu4xjYb5rX0vbvdlJSUlLS2yXV0RtXRy7M
D6ybJPcxByUPCuuYC8Nb5K6UPyaxd+TIFCOdOP7bwH6eyWxsnmohxOIFR+E+
jlEtdubUtl6f4u+y11tDuc/XX4/FAor7mKsXuG/xk875uc86711ZDfegzM7n
ua/+MxO390me+5jfYIP089TS+ZaZY3vuC3PQF+X2Hdnx7D62XesXGDsnx4mZ
qOluuY+a7rBRrJ8D8+QXg6/FaOI+64MqBtS+8s1kf899em25T/lzGHfe6xqs
vclzn8bKch92P22H/cq47/tH82Fb2X2M5azRdU1y3jxNHqvLkQdR0y/kiurF
6NU9BlZEdbkPX078JVWP3W5j/cqNc1P3e6wS3wGyv0n0Ewas06+m7KcafjEO
hoEnwcFt//4nJSUlJb1dmjr3mVpwdpvOzRIuoZ4evpNI9pjwfzc+i708L5Pi
Ppt3xXOf+EzMxryaXOqqx0bNiBgDihXVtuU+266uzdsBsdndmD8d7Hwsff31
YTlg7PqHD5YC/8W4r2DfMza+oblc7DNT4c87uxbPSUJ99LpzIR1/6eyRzszM
kTAeMI719bN8pGOs/6a4T6zT9/vcjJ5rv5cDxnIftR2+Wjof4v3e+f3fDHDf
MKmOoufU2PjIxqztNk+Kz5XpGRBZ7pPfLveCfXw+0cJcumeDfNz9nPEfguW+
1b35KPNZ27v8LaPz5l5NC5/TdNIatz7BuJo2993/aanAfdgA7fbHP5bHtcX8
cmkDn0j5RfJMw3Xivl+e3Ss856yTsPtNu5Z5lWA/OI9+iPu4Dvr02P23NAnB
fT5XKOeHBeE+/jNh3EbNd9P2739SUlJSUlIT1a3XF/br7uNtgKo1gKjlxzxZ
vARjkXulYOPq2euYa5K3ZH5/P0i5NxHzUXz01m9l+Td1vJgSXoQfdx+vh3gz
xdVZu1xT7rO11FXHwe8ju+Ew7quy8Vlf0jLuo21sqPCe97kt475m93wnyokw
Rxn3NRFjyHzKch/cCDtY9rM+lHqtemzK6eJtXPD0q9d9lhKPiPu+WrsT4vto
w3IfNr8zV/4U2M+2N8zmU8Z8sTGy3IffJiyn8fTcZPOU6lqJ3yO3juU+3vsa
FLavnFPcRwwl7Bc4e2epwH3KbxNTGfcxprTN+b+4U+yD6mgMexbqPEt83spq
VZTlOD0sqtMfnkPYj1hUCfbTa3HfMNse4/Ti5/XAfUi8h/z/GbAf+X0s84Xn
pcd9bG9jvOgT57d+nuK+aZ0T+6fGQD6miO8osZ/tTxO1/fudlJSUlJTURHW5
Tz6Fh5H7OIZ1xNNhX4QDYSfV/RNnKV5P7Od9Ri33KR+M5cIYL3q/0SrW869j
PqpDua8Xgzmsll/lPe+xo18Pp0xi7mtj3JSHktwpQY/jx2lfcZ98Ka39TPta
7tOx7L+6s55zn7e38bzBfcT9if32HmXbxRxlNcnr1maQvye5Quib2I8l1xKL
R0T408a4Dw4PtRN/7McuKhYw1hdsfZb7dB5by2GY/Y//SHy7Me5DddivLqeV
cfckuc//hzCqmsYNMqZInAcHsuSZZAn3YAt8+NNKYL/YPQi5e3o5QnkvX86q
uncwFopta4v9xH0HfV6k8RIHivuCD+zCuZHYr+3f76SkpKSkpLqqy3zaN+eP
Hje8+8VS5/jXi4FPiOmD/Yjzg/3w+5TtTTXMEczFurmN2VCjLmh1ufPpwtGg
M7N/6nxw6redMrZa2V3I56mKHYT78COt4j7ZjsR99Fe5O9XPbA7b8yd9uVao
8Sc/0Crus/k/rc3Q124fxn3R8Xf5W8biPpjP2QjhDBgly3Naf97r31OzAd8q
7Hyq1yDu4zyc45ut22GsfX2EmF1M630uFo6164J973HGfuQj9f1ijk0+GnKe
vPunvyvMhzmWZ9bWcBicd9ebB/IMwH2qE0ibcJ3YL9a+tV2yn+U+xVnCe/RR
3MfSjpWNR0TY/tR2HeYT97G8fX+20Bb/qTz8aTXkTLLrOT99GnWs/BjI7jmt
ef+kuC/2GagS3wWwHLz3+vW9nPtk22vCfXbdza9PV+bArJK476AZDPYqY9GD
ODdLzg/7ab24b5Q22/4NT0pKSkpKqqs2uY9YP8t9syszBe7LbDLV3GfrRDBn
hf0Q65nnc17iCOWXaW12WY2H3drcF1OWQ3Qvrw9hOU7cp7atzdH7eBKzhv0S
2yXvGcuB8e/ZWse/5+XcV1Vjoa6wOcF91BTQOp4H+ZWK+1gv2x4cgz1JbFRn
vs1Sdd11D+A+8tDAfnZfzb1Zivu0nj7ApZb7LE/6fCZ1c4WI49Qm7Ze1Qf+t
zyr7ivks9yn+j5g7xDp7Xst+3IezF/4Y9On8e7XZz3IfdTW2Ht0Y4D7LdTFO
HzVebtrc16ZgOnw9xX6se/7ids5yLNmG/2edWhuwyjjcF855wNyneL5Jct8o
eT5j58fuJ3tf3XqKqO3f8KSkpKSkpDoaxnwxexLr8OXEJkSdvlMfvdf55NO/
dK7duJbn8YT7ZEcLfp1d1sNfE9+z7769HPKVkP/y7NWjnYuzxzqXZk90zn79
cXgP971//B87f3jnbzuXPn23s7uz2LG2NPn+YdOD7cbhPvmc2qU4zvp/NuU+
zhfilbrcaGtCiAGzOn+DbYv7zt2JzyXE3RO59xEfT5hiEtxH3obPu/fOcx/t
w3zZc7Kb50th3MR9Gsc6NdzEVFrqWL33sYE59+3Nd46//8/5enGfctFmc/D+
uWivzP8znz+XbLc5Py33DZO4D59VxkW+05b7qsZGEvfNLH/QiPsk/ENhP2ID
ETYqf72xMUgalLiv8Fnpct+D+8uB98R9/rgvzx0N4nPFe2zo8s+E/cbhPhTq
ud84H15Po246IqaQtpXDc1L+peE/tTFq2XsxxtjJsQXWHde2f8eTkpKSkpLq
6E3mPhiOOhEZ020HWwT5QPu5Nm+F+ndwFPuwL+vIF2p5ri73yU4Xi+ezsYHK
U+q5z+YC1dLG8uk141rGfWH8x/HvJOenr/Vnto8a25fP7V70505wH/NTajjs
Pfwmt1VxDlhG3Mc6BNvEuE8srVi9ft6ejMew98mHklg9a2MTA/o8LOI+W3se
v0zLfcQPqn56/1nYK7RjX9s6ftb+pX6E2vCPq9nItkt/uB6eB8t9tj917WKn
zv9+ZO7zOWFYwoGxPus+TWL+fdhyt0xSqs+Hne3W2udBsJ+2K8cLeXqwjX1+
PuM+7FHwmbgPPpmfPTkR7vv6i+Mh1g02kyZ1vfRV3Md3gzRJ9ptUX8V9iHGu
M7Zt/44nJSUlJSXVUWzub+sy4LP58U3m5dsDrEHOEfw4YRXySFy8eKJQfw7B
eovduYTkc5vINhZilnq+m3/69/87+HfCe+xra5w/3F/K28i57/F6gfse/LhU
g/u2CvF1eo3fZ1YzvB8HqD4O474Y28lv1Pp/Wg6McR9xPdgyF7fvRmv2leVj
qXW/VbOvpOYDTIbda5T5UiznSc5924u5PyI5S7BVcS764LlP9e5sHkkYTHky
xWdiHhjLcp/vT8x+SV6X05/8W4H7ZIPU/uI+tWXtf1U5PTz38Vp9Fvd5+6Fv
i2vlGM6v+n42NlDcV8ZGfv321leNuC+W99Ous9wX67ueIR9vOMoz5ce/7Brf
JF3++oPOze/O5dwH19ncLHfvfpHnm4T92A+/RBhQ9eZYB6fBJ03qkpSJmgaw
H+fkHJO2+8F42Pm4DtktD6voo7ivzv5t/44nJSUlJSXV0ZvGfbRBrQSxE36c
+HZSGxBRo9pylPXnZJ1qtNtaenW4z7Yj5lRcoG3H54jx3FfmN1rI/fL6XiX3
ld23UnkbXy+uL8Z948ylY9yHvRN7BLaK82f/2Lk6e3yA++AZ8ZVYBm5QrfPg
G/liKyxhIPljeluXry1o+wJvWZsd/YD9sBXCd2yjT3Cf6tR5zqiba9LHuokj
ledF69Qe1895xaw2Rs/Xhmdfm0OlKreOfd3Uz7Oq3oPE/yz2HBpH+ijumxSb
xbjvTZRqOcB1sB/8A7/xHvaDt5RnknXY4Vgn7rNtsQ5bFJwG943LfnAf/pLw
mdhvUtfNdXBdqM2a8U3EeNdl37Z/x5OSkpKSkoYpsEAJO8B71LnDxwyfTfKw
wHj4cLKO98w/xVLUaQj5EPdWAleJu2A2VFajfPdRn/+w2S0uzoR8LtjmPCPi
KzoJ7mO+6nnL9mH/6VrOfnl+lxrc169RsV2wCzJfVYxhWYygbSPYLn/M6gyW
3rsG3CcbX6He37XB+n3EjI0zT1cNAmvjwdfVct+NwP6ZbyacxTnhBDhIMZID
c2VsZIb7WCcOsP2F+3hPztBY7hTawc/47Jk/hP8VyO3CfRX70R/F1Mm21pQ1
lL9T7y1LWu7Drgn3yk5puU/9Vju2jgXtWO5jvMvqQnjBftSwqGK9OrxXxn2y
kao/49r6YnqTbXx8FsR9V6+cCGxnuW9p8dOc+yTVYa9iMLHfJHhK3Md5R61l
Z0WfsFfS1qg10dsQ44CtD1Wxn+IK2/4tT0pKSkpKGqbDyn3Y+yz3UeuBPC34
cGITRIvLZzq378+Fdcrh0s9DOBe4TXYSz2Vl3Cdm89xnbX92nex3tk58jPsU
i5jZGbcGzsm5xKuW+/BfLb13poZf5X3Grleo+7AzIO3bZE7Ntfv6fLzu+7MO
ztHxqRT3KQ+n9Yms8lkMNSAe95nCx/ntP72b1YPvzqvhPvbRNv4bUO4Y2BD2
s9xHu9af0HLfsDHw+Wc8g9FvsZ/8M/ncWO5jGT5zN3YKx/p6gXqtGu7ypyyr
de61sHw6cN/FleNR219T7kOxe2XHZ5y596/BvlfFC2I/rYMLYT84A9ubuK9O
e7AfeT0nwX7K71n33GWC9yz3XV05FWL82h77Jvfom+unh+7Dsu3f8qSkpKSk
pDIFZugxX1l+EPwLrY+h/D2DP2aX+cjrwnv5ecqmNay2neUtjoEj5fuI7x3M
R76XwJkP57vMOVuL+4r55+PcR99ko7N9scxWZoerw33an3oMWiffQnFkFfdZ
G6XlRjibsR64hw2578jFxdKYPu5rU+7Tsm6MGVItP7tPXe6TvcvG5NnjxH3E
cPr2xGg8X9RvwOZHjUG1aWPTVBe9jPvkhxnjPr+fWBVbns7De2x/4m7LfWJB
+YbGfGfZJvbTeereO+L8hvl8iv3IsTTMN9TXkqu6j6Po18p+8EKZDU/5T5q0
B/cRmzeJegxw36TyrcB8Fz7/c+ezG++9cdyHsMfCfsPuR9u/6UlJSUlJSV55
7k7FeFXse5Dcl9UI73MfbSpXitomFwt+nOK/n59vdq5/9Vlnbu50WA9rIeb8
aG1/Lrehqc+yuzXhvmF+mT43p7hP6yz3aYy4FusfasdPx3h7IbZXYiztPQo1
FIfcx1iNvpgYI/pdNbex9hvxWpmtSfP1WI3ssprldedi7GvZj7kl+Tlnl052
vn80H+W+UBNub2mA+5TvU5xluQ+fxbL68d4GV9ZXjZH14aR9uA+bn7e9Wu4r
GxvVKBx1/GA/6vpduvLegN/n2fnMFkitP7gPnTz9r0F17H1vg5pwNvL/U+Tr
u6xWxn4xnq4j2G8S+Viw9SkH58jj1GVbco/CfSj7T2Z839GDFNx39fO/BFWN
a9u/7UlJSUlJSV5NuE/72/fK82LrsotVYr6bZQrz6p3d3I+Udk5++McwJ7+x
MjMx7rt+72wns9VtFnLp4z/p2U3XwHyL/lOnui73Wfufttna7DDfzy+2h3Kf
rRvh4wZH5b6gCPdZ1iCXZlbnrpr7/Ny3ivvKhG8lc9O5S/850J5eWw6LtU++
BQTvwXKe+2ybNs6PfVl++OG/BD14sFTgPtUSVF8s91l+VS0F2++qnC8cC+dp
nc6Jfc/62rJUvpdYzQgxqc0JU8ceFmMUy33Xr3/UOXPhaKbue9gvcF93eWHh
/UruexvZrwn3kUu4jPtgK3w5B+7NiMx389onnZWFcxPjPgT3jct+8hl907gP
H1XGU9xHnHLZvm3/ticlJSUlJVnleT1q1H7T9oPgPubQxLO9f+x/dW5trvbe
21i5vR6P9HlL2xY2Z7Laf5++21lZvtDxXAYjwn5NuY/Xi1vXAp/VYb8y7tN1
yNanfeAAaxfVeFVxH/0uu6/V9zJenz3f1uM+cogyl6WGRN15Z8wWVpy/7hVy
sQQ+M9z348P+/NTPpcV92N38eTz3lc45TXvMvWEdcR82P5bHj/+2M/vtzbw+
nrhPxyrviuW+WE6ZutzHOVRvneti/OUvzD62/rzPTSPu0zNEv+y5vQ2wbCzs
Ou6B5T5sfbAfEvvBdsQEMlaxmu51zuVFLFsZD70pqst+/jqpacLz++j+6kRq
rlvBfpPy0RT3jcOR9IU8o5PwP52mFEupseOeiPuIm+R+kZcG9ouxetu/70lJ
SUlJSVajcJ8E7+HXCaexZJ7Zz+tR5B6b97JMWW29jMGmyX3Bd3Tzkyzf54Nr
+Tb5oxa5bytvO2PG5tyX+XZu5e9tTOAw7ov5meoYjRV1Mwbu1TA/T8d91r6E
TyE2p2B/NNyHjaLO/BVVsZ/nPuphwWqy49n4uTIbiuc+jmMOVsZ7Zf6X3jf0
4YPVwDHv/P5vcvY7d+ls5+EPdwcYTn6XMTtbVR0FW5tC68R9spfKZ1P1+uy4
lrGk5z5dq+oDDhsXv96ex3Kf5TtxH7GBnv34fNXNKWr3gf3GmatPMl9o05jE
ujGtPHN67vjPgxxX4j7l6kSTYj8YZVLch1R3YVT2E/dNqj/TkOyuLO98ezGI
+4HIsyPu0/7EKPv8OW3/viclJSUlJaE6OVxikm0PzmOuSiwffGL9M0flPs9M
G+tzwcfzRHde+cmnf+nMXZsJDCj7G36dzC2Vx4Xadut7G8EflDkrtdxV348a
D/Y85IYZxn06j2VKWBMGyuamw69H1yRbouU+WwciVhNCdqaydqO8p/saajKU
13YPuVxc3QbPfbYuwDAxh/3558wmyOs682XsbMx54T7qOcJ+nvvKJLtfZgPb
GuA+1UC3uWEs43i21GtxH/FHxPrx/LGE/cRBm+sLeR5R7o+vxx6TrTOh15YV
aQeWtdxX1lYZC3uetRqWj8bnHvV94D+AMn9OfD2ruE+2zYOarysec5LtTWJ/
7w/IM0YsKfzD54BnF/azdRom0X84hXPBKZMaE/o4rt8obRyWOu3Kv2n7ltdL
7N4ffBHgPnhPdRx4bY/ResvDbf/OJyUlJSUloTymbwrc5/05Dwv33d/5Ju8P
S+xXHGfZL1Z/wSrGfXGb3Fa+TSwZa9Nzn+IX6+STKeW+Euazddo994VYv56C
ra8iPs/Pa5d2Pw/xc8FncgTu83P0YbFpYi3xG7q6/EnoB/PIMH/eWcrZj2N8
/bwYI6ltjrPcd/rk74LdGR9Q3iNxn+1T1XjBej7Ppn3WLPfF2rIMLl9S9Vn1
7u018d5fL+2XXb+Wsqv3cwj1xq+C+9Bf/vq/g+3PrsOfmtoo+DMfJPfpfrfN
EhL/a/A8ift4LcF9PLP41Vrum+T54T7qpFAzYRK196Qyex/nqBP/x3UeFpsf
3OfZD9ZT3XvEfYrxnoR/LtupScq4oLZ/55OSkpKS3m6JC45cmB+J92AN5qBZ
zblsfgUDsp7YPptvsortVKNg+8mNYHsTu6nN3d48Gc47e+G9wH7UVmPOneUa
2cvbYm7JnJ+YPThw78lSkGxr2JKuXPxgJO4j70qs/zEui6233Gd5rqo+hPUJ
LWNLn8slv7cVtr68dgOxf7y2dr4xuQ8u+PHlrTCm5GkY5qsHG9786nSY95Yx
U1m9P58/NMw1f9oO7Ge5z/ufVtnkPPdZO6HnPnxAEet8n3jeYDzfR+uXGv6T
+LHPft4258cjlrfTb4f9uG9aWu7D77MOB9l8OZ77qOHwwcKtzsfffT1Qyw8f
UMt9drvYj89luN4XW7X+E/D9jf0XMCyPCm1Mo0Z8XT19dDuwHrk/YD/W8bxb
7svHvcd+w9ocNbcLDKYamZMS3GdZkvfYx1SXD/tYnTamzX5l/yPV+UzAfvn+
Pe4bdgz8B/thX2379z4pKSkp6e3W28h9LO/v3w12P/iPJe3KtuY5qx/ftxX1
5xzGfTG2s6+9L2kd7rPCplrJfRX+nWXcJx9P5a9k7lZ3XoX903MfEjfE5uaW
++TbyHqfJ8Xm0YzVBPTvxZue+2RLjeWDQdjv7DnL/EMV+yfu++M7/1cQtks9
l+I+cZ3sfLK3yb5nr8HaAH3fZNes8oFlH3EfsvUfLPfRB+WPqZKdExNfaLnv
05VrA/Y+cuEQ+wcDei7kveU+Pq+TmL8P48dh/p5N/TeHncuvE/fZdeK+UfuR
5Zdqzn7Kw6k8KmK2ca+bOvK0o3g/zqH8Sgj2Y7uNU/Qxi9jFpsl+0c/UL/X+
C6GeRllNjTpj0/bvfVJSUlLS2ynl9h/Vt1P5WzS3tbk6Qy31B8N9OK32nnyT
11ZnTqg54pW1j8L6R0/W8xwx7MN6uE7cp1g8+fn52DifS7Qu99n66WGO9fr7
no/dIN/FjqvDfWXrshoPxXjCmCq5ror7Sngvxn2rG6PF7jx/uRY40PNSbF8x
n7jPxoFpva2N4LnP+24icV8sZk3cBwfBRrymTfw1LffxfufxXq/eRrwm3435
0wPcZ/eTHU/cBzsxruI222/l7CzjPvuMV3Ef22wNCHGfrQHPUvzJONRlDrge
3oP9PPfBepb7sP2prrs+2xyDZjdmu5oZ6dkaVVXXOEn2i7UN95GzZdQ2JlHf
gDhBy31w2KS4LzzLPW6D/ZTnU9zHucV9vMYGht2M9zr/tLmvrqxf6tUrJ4Jt
D0YflftQ27/7SUlJSUlvl6zvX85+Q3L8e72J3Kd8mVbah7g/asF/9+3lzurK
bL69WLeht2zAfTkrlvhp+mOquK9q7Kq4L3r/Le8HLozncqFuQ4FHntfP/6f5
s+U+v0+MWWweFi3Feja/p/wi7bGW+7SfzacZy905u7Yb8nDCfSxhIHEfzzW2
MMXtif38NWb93Arsx2u478qlDwrcp1wvumbPfVrqWsV92jc2xjEmlD3Lng/2
E9+qBry4j/e634zBMPbL72uP+2hLdj/PfnDfqfO/L3Cf7H2W+0b1VSzTsLoP
02S7Yecdl/sYq1HZD8aCp5Qb1G6DuWDAJnb9MinGD5bzcX3k7eTcMKG4L9RB
6Pm5iv2wjflcmHXUzx89utQXzk/feS3uG3ds2v79T0pKSjpsOnbtXufYfDMO
SaovO+8P3Gdq8EkD+xsph4utoVBmv/I2NtUZEE/Fcrvg80V8nWU/OI94LdlK
lHuTbfh6fnDqt2EfxDYbk8f+3/+wOzb32dw0GXP0bYh9hhuM2/P2Q899zFF8
bUNvIxzGff4e5zxfYsPVNvssvHfhq5z5wuewl8NzWF7KYfPc2Ots/potuQdw
jZ4HzYkt94mJ4C6xTIz7lC8FNhMD+jydvp6euA/GhYFk+4P3xH2yPZZdHz6s
hTn0o9uB/dh+/uwf+/PhZ/04PtVVF4957uPcZT6oOq+9Fvkweu7T2NIW18q5
YFqYUxyo+5193rOxGDq3f343sN6x6xul3Afzqc5DyPF59Wio4+f9PSfBfb5+
fd1cQgct4vqIq6sTuxe/zq2BfCN1BWMh2Mq2QcwauUnEfaO2X0fY9jgPUr4a
MZ71d2UdjDhKrYlxuA9bnrhPfAwre1/cUdX2739SUlLSYRPMJ7Xdl1+L8hi+
z5eCovahXxn36fzwmmw/zHV13lCX/dFuHjf45OFyd05yt7O7sxxq/OEHKn4I
dRcacJ9nOD9WYkHV1q7iPn8uSXGGsTrt4r6qZ8Fz39Erq2HOf+LGRuertTud
F725+LC5M/a8sn38+rL8mZb7iPGz7Oe5T7XntM7XxxP3WV9RmzfT5k2xfqKW
+3gN8yJew4Wxa2SMiCOFX/w2/keQz6dlP9UqFPdxLTCZ+iUuFPdpvR87XbfN
dSN7d7gvz/v+ohpDa8sU96lNXusZqcN94X722E+qyu8p7ptb+DBfh72PsSPG
b5y5NGxeFgc5ibn6MD15dqvWuWAHcd+454TN+A5owsz4WWJvRLCf7G28V74S
1k2T+8Kz6Wo1POrZ+Dmv+AofVMZqFO4bJX8P55Hvq/w45Ys6yWtvey6QlJSU
dFhkeS9x32RVh/uOXR8e46ccLjZXi61p7tdbthOD4f9JHhJ8QT3zkSsTn04/
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
Z9o+xGxzw7gvm1MW/V55DfvJl1Tcl83/hnNfLI6vjPtkx7U23eBTu7uQc98P
T78pcJ/+2/Zzd8t92OUG5mG9fTk+xn3iLJhM+VbEfWIizqE5t3KDyv/Wcl+e
b/NxlqNENffEfdom+571HRX3eZud5b5XrzNfVCTfy53HxWuNsZpEPUSecc99
NhbRxh/GcsyIV72908ce2n3FfmqXsbDc52P5xH3k2My+WwbZT8xXZqe078ll
ohp2ytuj/wzEfnAVc+oq9uM61Ydp1GkQ95FXyXOXcjUdBLvEPkNl8Y7TElwH
/2Hfs7wn4fspNkTT5K3DInEf+Voncb1tzxmSkpLa0X/M3ev8x5W7QW335SA0
Lvcl9it5jhz38b6K+/DBlKw/p8aWJfFebOcYhH+hOEX5J8U6Olb7kVvF5qj0
nGi1tHQu5O1krsX8W7yDT+jFXp4JmEmsJTuZZTzLUdREF3uJF7UvfqKxPozK
fTZ3qfqQzct38nP6ay/jvjAWPe5jjs6Ycg9u3V/I62yw5DMwcP8d99n7qOdD
76u4j1hJuA/Wg6fJ7+K5zy5hDebt+EFhy8JnTzX97H4cDxvymnGDRbDbifsY
M3Ef95v/F1R/jhyYnvsYH9Vj9zUTxH08h8pTKTa03Bfmco+za+DcyHKfYuKw
McGlnvt8DJ54zI6R2hO3wX4zM0dyXhO3+hw04lK17+1qWtIvjtHS+2CqXza+
UQzMOsaG+2DZDzvfMO5jzFjGfFu94D7sedhueT7Efd8sZ88KNeLqcB9SbQm0
UyOHTFNxfrhPtQgL526phkGb3Fe1D+wH/ywtfppz0LBjxhqHQ8CWfM8l7ktK
ShpHlvuCevO2tvs1DY3FfIn7ShW4rsK3U75/vBabiaeYTx4k98X4ry3ue/58
O9gwrb1ydWU2cN/63kZo19ZxsOdVe6Nw3/OXa5m/5PO7eZuyHcJH1IXw3Efc
neU+luH7o3u/Q95WcvhcvjXw+Yjl7VFcoOy54n/Yz3MfMZCwn52D2rl5jPuY
H58++bsw11euCxRsgj27j+U+xkv2KtneLPfRLnMtzqH8LZ77lFtF/YMJLPfB
dORl4b21M4r7VNdAx+u5sdyndvGfzO5dkfv6fr/9foiLqFvImLzz+78J3Mc6
sV+YLz/fM89Rn/t8nXnLfTaXp7jP7mP7xjWHWhqmHXGf/DutYL+Yn6fnvyru
455z7+A9lmI/+sMzw3vY73GosbIX6kMSK1c1V1auUZ6dSXBfzFYZ4zvVr2yL
N6YZz1gm2C9Wt7zQr14eS3Kysj8+obBfzEY48rX3ztE296kPfA9dOvsfY9ez
aHvekJSU1IKu3uvlVN/o/Hl2I55v/VfCgWMzX+K+qFSfrw73yb7juY+5m/JE
WjsQ3AEXwUocAyOIpVifzSUVH7YT2qDd3Ud9RvPcozmouIyaB394528Dg/F+
t+f/J44SR2ruaxnJtq/cGpbTJPl/eu6sw32WG2PcJ19DW8uwn39xsC+W+2Db
GPeRx/O9K6sh5k7PO5wnm5/4L9x/uI/8LYb7bP4WWA5mZKl1p76Ncx8sg98s
/q//8/peeP+gy30//9y3f3ibE0wEN9j5jLjP5jgUb8huwXuYw3OfbeezlbXO
4s2rBe7D9if2U/05XsNv+4/7vqFiAtqFd+ijuM/WGGTs4UbVNLA+ozqecyjP
6E7Plgj7UTvC9tdyn813yb223CdWs4ynZeGYH8u5zzKf9y0ty6GinKmKZWU9
yxj3if2quE+yeUJ1LjG/uM+Pk7jP9xO24rgqzpFv6kTm8uY8N786Hc5vuU/5
RrFH0l/FKR44cwy5v9NQHe5DcLu4j+XKjXNBTdiviukOA/NJ+L3CtnAfGse+
2fbcISkp6eCU2/gM86Gj3bnen6+sheVgva2N7LiKPOyHWYn7pvAcRWL6Ctt6
vp68Z8l8X5xDXbjFrWshFk+8dti4L8xJa3Kf4viacJ+2qQ3NxfHpZJ5HLF6V
f2qM+6zPnue+jHE2A/fxXvY+XsNV3BO2D+M+3ud85+rx2XytvOeeW+6b21gM
r6nvLrvawuZGZ3kns2GRvxP2s9xXNs+03Ofn/ggfPtV2j3EfYyefS9nt7PEw
D+x35vSxzleLc4G1FPunWgzivsyGtx2Os3lhLPfZvJ/0W+cT97EfTMdra8ey
TMp28Y7nPkk5VCzDkcMTwX4Pf7hb4D7145Wb0+u89MvP+cUBnvtsv32uFfm4
8l7cx3rar8N3Vdxnx1ftiuu457F65bHnSrXQ6+R4mdRcHv9SeIVzw370G9v0
lUsfFLiPOX5b3Dds3CaRZ8SLuL2Qb6cGc8lmi++n2O/XWt8d9mNciGtO3JeU
lFSlMD9zzHf0i+86X3x5pnPm8wsF7mP9hzMXwnv0JnPfJJnPqu3raluqyx7L
z++5j+dtGPexHfFe7CWGyfIZZjlafP0ACfbjuFjNAhvHJiaUPyS5LmydBflP
iuuosUD9CNb1Ga2YW8b7ndZVHe7zNSAsQ8JHhfc9WRuh+hTjPmxplvvgL7hM
9zA2zlXc5zWzMh/ydCKOq+I+zk9NDdgP3nvyfCnM2avmueIvbydDlvvsnNUy
ivJrMjaK01MsG+3CWafPfjjAfbCGbIZwS4z7dE62wXKe+1inuDfO6blPz6lq
OKiuuc1/6WspRMeoy3mW+/x4Wu7r25f73Me10Ddbv8ByH32Cm9mvzO9SfrCW
dWXHHJf7NBYa3+9/2A78hI0zzJNHiE3j8wc/iBc9N5b5tDYVz6flPmx9lvvU
F3Ff28xRpUmxHzY+5WyJ2WSrtGFspRwr389x+9S2vS92fq6P52bUNtuePyQl
JU1XgdmYn8F8YjjHfRfmLndOXb3R+csX8533Li0UuI/3uX3wEFxPEyXum8Lz
1KvLbrnP8h9zfNnJ4Ip3v1gKNqTjV1c6x79ezNR9feqLLwMHMP9lf9hNtrxf
K/eJuzK+6O+vfm+uz4f8KuR4GdZmHe7r5+vIeJu6g4+erAdtPlgO/IdvJfF0
lvtK6y/q3iuur+K/IMt9xAoubK50Hj5d7dy+P9fZfnIjLGG9rUfzA9zHfpqz
l82vPfcNnT8Z7hOf7bs4Lc99Ifdndz558eKHgQHnlhYGuA8fTexv3ncSiftk
4+JZIT7Mc5/8RLX03KdYOJaq5yDus/lUYuMVmO+TfysdS9mxbW4XO042f40f
KxhW3Ce7q9/P9w+J/VTDbxISN8N+D4fM96tiA8V9+IniexmzF5aNddW2WE5O
GJX/KDiH2G+izFDjc3HQeVuqBN/Cfki12kdpB+a7+fXpiXBf24pxH/Y+ntFR
2a/tOURSUtIUddUwn+E++G51Za6zMPdR59PzJwvcB/Od+eT9sERvNfMl7iso
j+crsfHxug73/de5z0q5T8fBLfAAnKU6AtgIYbGsRthueB9y5W/u5PbEAbva
T6uBM/ReNQ2YCx999zcFtqJdtgfefLYUzg8jsVRdeO+3KU7kWOWUKeO1Ku5j
WcZ9TW2JOoflPhTjPsYT5rNMHey13fs2cI/hvl5Mn+e+mO2XzwrMxzLGfdSx
oCYGY42PJ/0ZZe7q+U2ysWjYl2xsnee+PA/Kj31blOW+c5fOhjp43337Ze7H
qXyccN/+k+8Ktke2K6eJZR/l7PH90FI5VrQfbBXjPuUfjXEVIo7t0oWjfXtf
j/00pjZer++3XPTPFPfF2ufZ4trpX3av4z63ZVItv0ly37Gz54Pq8lNZPCLM
J+4bdW6tthUfKu5T3CkxqOK+NrniMHEfNjtqFoj7mh7PmIZx7TIf7DcqNx52
Eb8I+42aw6bteURSUtIU1eO+92fvBB/OY59eCjY+z32fnD0elmI9KcT7wYtd
Vmz9Whro2LV7E+M+xTcl7tspzeFSsPvNZgyB36ZybcKLf7m2FtYFdttf61yd
PZ7XDmAdfn82Pya89qZyn2UuW3vB5ve0djnbX+q0ryxf6FyfOxmWvG/Cfb5e
oWo+ECu5/3QttMV4rOwuBz9L2LuM+3Sfi/G+69F8TzHbn7iPcwTG39sI7Mf5
sTFSsw/uI3dnGfeh2HrVd0DwkvV7lMq4r+9jm83NYRtrA2K77Hpat7pxK3Df
3NWZwH7iPsXT6T7Lj1R+nZsPNoINyrZveU216DkfHKVcm+I++XiqbrznPmyT
sTET98Evse3qM69fva5vN7Wy3Nc07k33i2v3+V18Xb+hon7Iha9G5j7/v4HW
w0T4XTZlP+UGxX6FTx7s9+W5o53PPn4n9E3s1yY7tK0y/8mNMWye1HWA+5TX
cxyb4WGW6pKgUdiv7XlEUlLS9BTsez1us9y3eO2TzszMh50Tl2YD74n58OmE
CQPvMY+7ei9xX4/7rN4m9oPZbN7GKt++SXMf8/0wZ+/FAiKbKyWrCzZYm10+
j9Rgv7R2Iii3gz1fD7XaYT5qecl/E65DxLuFOXePO+EUzcN1rlj+FrhTzNiv
K70T5T6xXx3uQ+T5tByn64N98JPEjoe/pm/bc598VC33leUqynOx+rrsJfl8
7DOQfw67nxPywYj7ZPMT9xFzyP345fX3xm81Mkc0PMIxXIeNKernsynKr1fO
lX4Onkyq32f3E4tpHdz31dqdkO/lg5P/2bmytpj7OFruYx3H2vrwnvtUm8H6
Vcp2qLyf4jD2lT1LOTGtT6bnPjEMvMEzXsZ9Oq/aoa9N54/0meP2Hu0OcF8Z
Q8quaffXWMOQnvvKcn7G2O/IxcXO8a++7/l8D78emwM11m+4D1sdrAZHD2sP
3mM/y32MPyxiuW9YzYhxZf+veNO0szk/1vEhl+/CudZjIqcVF8h18Uz6XLVN
1PacIikpaXqy3BfeMy/vvsb+J+a7PDsTXqP357LcewXue8NqOUyS+bx/59vC
fT5fZyPu60nsh1RXD35jbg9vXbx4IrfdBfbr8g32CfyhmNMr7i6b32c8dVi5
j+NUi/DcnWwOjW1LuUJ1DtkFvb2vzJ73cH9pJO7zTMp1/P/svet3HFWWt/l/
z3q7Z82aXv2h3+me1f0OVQM0dBUYKIwxZVvyTTZgSxZYkg3oYrAuLmRJxlfa
YKCYTzn57Mhf5M6T58QlM1Ip2fFhr8iMy4lzTpzM3E/uG/Y05pI4OhhM/peV
uC/w4UzZ/LQG8s9ir31y92T5W2734vluWy2JFPcxFssvSj7G33eynB3d63gf
4z7aYhv6PMa4z3SyoD4d7BRyn7X7c9+WyPMPuc9Y+sVu7jdpcx1wn+5DHQa4
TvcLuU95SVRDwfuMwj4IPCSWFPuFY/bctzB/Ns8Tk/KFFeeor3X0R3Gf8uSE
tdtj18S4T3Mt9tPcmC3/XrregzFiz8aHeO6rOgZvE071XezHFvufj/ljH3lf
z59+PWc+9l0684axHud79iafC/GHk2S/48h9ysWCjMJ+cNZvP93LuW+cvjRR
v6Fp7pMNU9w3jn/wtPWLVlppZcJyI8vj4pmPnC7sh++w84Xcx3V2zXGM65sg
970qvp6e+8pYT+eLe1RrfRLcF9ZFyOxo922rOgzehkYtcHGf2qN98rl4loKL
qDmAXN883VnYmbO+qTY6W4R7YIOUzq3tpLhPQn0F6k4gPj7QcsE8Xsrzo9Th
PtXSC2WgJmPPvmf7KnKf50jqQcS4j77wOuwr/eMYsXIx7oMZvn043x3DksUn
Pvsp43ZxX5GEer3nPjGLmAQ+M10r4D62xNUs3Lzcub377RD3qW3la4FZQu5j
n9aNzyEq7ju/vthZurecfwZC7sPXU7Y/1YX3vEUOz1On/sNi+kLu8zUk/FyM
qj8yNj7btBnjvpTvp68bH9WZHfdpn7cH5tJdh96/U7bCcIylOnpBX/Nn2mU1
z31wHQznue/M6T91/vrBvw9wX9hWmGf2VRTPRMTi3fnmSs59o/KSWE2xfeNw
0VGq2yeB9xD8YJmvlvtaaaWVqLj67EO6u+O+Gwszxnz++HHivkZZ7xXlviHW
69l5dKzsWs99+Hfit3llI8vDmeXs38vj8KhRTu4SZPbcG52rXV16f2/FWOzy
zH92VlYud3x+Eh+75m170+I+eCPkNZiWsTJ2/Cez3Cl9blW/0I3lz+rzlsof
MxanWJX7eO1r8/m5kE2Tegrk2kxxnz3P3hoofOYJX0/PfawF1WcciDns5bdJ
cR+MB8tha2U8vF/bW8+5b2X30gD33X96K9dplA821HVSfohsPfcpv6bshLKp
cQ77qBcm9iPua2dr2dagb4/rxX7ap3g/cZ9YA5ZhSy5K7Ikh93FfxdHFuM+3
Jzui6jfIt5RxwY2e+0IOrhOf5+u8i/1CW2FZm3Vti/K59fUsLM/QlZXOnxZ2
huID5Vtdpe2ysYv7+O7Av+7Kubdy7rt8/i1jT2zA4r6qPobY6/lfw8eqTlu+
fzKen2UVgangF+XdhGPC43XbxBZ2++a5nPumPY9Nzxdb2FjcN05709Y1Wmml
lcmK6fPX7w7r7tc3OyeuLFpMH/Y/z315fa4jXLNvYqxXkfteNvYr4r7U+WzF
eTAdW/gHpsAWEnIfr2Pcx3YU7jNfxxf38/fy+xTrYFO6eW824z6zCfVyfKzN
dd59+5+sXl7oDyoxtnicsdTyzrzxIHUGMh4c5j7Vmwi5jzoQdbhPcWI6J4tx
3M3vR0wk9lJf/4+xqa9VuA87XHINFMTuDZxLPNWnq8k1Il9f1gCS4j6LiTM7
4C1jPuZZ3Pfwx9sD3IfO4mPJ0Jc5FuM+8duA/hTYtrydztuqFIvpfSnxaVTO
FuV3uTr7trGfuG/v6SDPyNane9E3+YCq5jsspvvAfjAU/Lext2XHPfepVjlt
MXbOC7kPDlEOT2p9i/2UD1R1C0PuC22WRXqjuE92UNlPNXZf02LcOnf4TjIO
1VdgH4yFyLfTcx/MpzjIKtwXxnqWidiPceFTiC4u9uP5sfZ5XcZ+fAawaYv9
ps0WCPb1SXOffDm/++rKWDlcQoH7EGo3jGOrk62vShv2vXwIdkHsxgj1HuvW
NYzJtHWNVlppZbJShfusVt+Ne4PXHPG4vpb7GlwjJayXqs/ONuQ+GM9zH7L/
pJ9vJK8l/uxu5+GDu6ZH+X3Y/uBAXqdsQp4JVV9P8WL+3HG4zws8wrXKsa/2
FYcWxvrBtspJ42vq+di8lG+nWLAO92UxiYP98DXbxcyZTXI9574wts/XYy9d
M72aDkXcx7NP5Vn13MdW3Ic+zHPjtbHsozXjv2x8w9zH3Hzfs3VmsX/ZOeK+
olptyN9725iPorhNvBZyH3Y/fPpUYz7GfZ57lFfUc599hm5t5/k653r2UZhO
DMu5qunguQ9fYu4hv1TO8dyn+yrnKOeJ/TROP+ai916y/1cGuU/vPVPKr7mu
XgpXKZeK5z7FNVFfQewXjfm7uVf5Xtn/NdXywAzwgeM+3jOnnvvKrmedH6Ua
Cgj9mVSf7H+JrcWc+5puH+ZTrfbDis07LO579HAt6jM8qkxb32illVYmLyk/
z48W1y2uz3Of1XW/fvfQ+1hHJs57rwD3yb43EM9VgftUnw9bFvYteA/WYZ9n
P/l0cox94p/D5L6QgXQNfV1ZPGP+nuzDtjcN7gvrQnhW6+ck6bcN7+HryfzA
rtiZGHsZ93Fc3EdOzRjvWe4eOK7EzjtwXW/NpI5X4T6E/ql+fIr7cv3O+Ugq
R+nGwTVjP899Frv3bNOYoaj2dqa/9fkwrO3uuQ+uUx4TfClD7pPd1tu9Qu7b
fXTf2I01CO8xT5772Cq3p/KFyuYI93EOx7DfycamfKTffbtsvJet6/74xH0p
fVxbMZyfBwl98W3QH+Uf1fniPj/eqjzF2oahyIGifIUwHzXuxICe+75YWchj
+iQWV/tgfyivi8+RE95X9TjEfuPYJ3UtbfF8Use9HDX2a1r4DPL5E/dRn28S
95G9D/Yjv8vI7byI5wZOic8vNSnBLoowf020N23do5VWWpm8GPeho/l6DHBf
l/nI5/nODefj2avxPu0+F8lRYL6Xhfvq6PqK4Utxn4/tC7mP976eu/ePFKfA
JuK+h3v9vB9h/sxQZPcJGS/kIPlS0o+LF0523nj9H7K8LL3a5XceLhtvbD3I
co8g5PX0bYZ8pXg/Px70Tu7DHPkxyk9VtjrZumLcp5yNZdyHP6muowZEZi/c
Hegz47u+sWn2oSrcV3kNVeA+7u/ZL/Z8PPeJp/GpZe69vqI6fp772MczoQ3y
wVg9euVsiXBfTPcW9/3d7VPtddXQE/fJTgeDXL/6vnGcz9Ei7kPMNuiu4bjn
PnKD7j/Zsu2Jm9u5j6LnPq5XfQjFIXruU3widjzPfZcvv11JB/Scpz57G2mM
+1ST3nNfrE3NbRET5M/WcR/vLR/q/rr9LyT2o118PTmHLeyHbS3FfcyVcocW
cZ+2o3Kfz8vKlmcYyy0zrs9rTOrGSU5KQn4lHpJYWPKW8px5jrD7pLgPIQ8o
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
x+fvsLkPjhPv8FlVfk/Pe5LY9bBgU+wH6ynfzKeX3us8+P6L6HlN2hfpPzZw
uK/oPPKmTluPaaWVVg5fjlPuzlDGsfO9zOLtfEXch/0OrkH/Vl5O5W9BNw19
NJFRuA9dmHwt1CBQPYKr8x91Zq6dymv1IWdnTuT1HOCWzGa4lv1/3OUlfCRh
ptDWl+n7+4fOffhnhjZE9Sll9yM+kbwtcJ7ZG3/O+mIxT939zA15Sc0XtDsu
yz9awH2ZDHMfOT3x9ZSP5xCj9WI+x2G6qmsx/L5BWGue2cO58tyn8RIHhk6H
nu/rH0iX9nn/fb599HL0d9X0C9nP8jw+2x3KU6mcMOK+mXMnOgtz7xu74I+M
jQ/ug89YS3DfSnedi+PEip77xIKKF+ScGPdRmwEb3vWr79t97d499oP55O9I
G+fO/iHJfRqT2E+xeT5Or0nuoz3PffQHpmaLDl7GfbomjIcsq7cAuyinqriv
SOdN5SENhXmLjdHXudfz4j8q/rMJuU+i/x9ol2fHfwM8H9oI86Qelnjua6I9
uI8tc4CI+catYRizWaXsWHxHiLVYc2af7zIeHFfEe56bquREqSpXzr1tNu4U
9/GZngT3Ucuv6LyW+1pppZXjJpXqtr9CvCeJ1U7jPbwGT8F/yteiWush94nd
Qu4T+6kGn2rteV9PvV5/tNlZWZsx3sJGU5X7FtZWRuI+CTpGLBcm+icxUbRD
H6xu4Ny7VvfhvZP/09gPW+PyzrxxVBb3tTfAcXCh6sR77vP5R+tyH23EuE/v
EfKX8p75ZA7wfaRW+/7eWo8pds2vFu5b31+uxX0TXYuKIfbvI9zn7X3MEe/9
PJqNuBe3EnKfWI5nIttKjPuk73jbnumPCe6DI+XneXF9c4j7rn02a4JeCQPC
fe9//IGxn+6pfvy9164YEb1f3Kb4Ptn4VJPPc5+vP2H1A3/tx7qxbtEbzQYZ
2GsYE37ZYVxfznv2XTEZ259yr3ju43Ncxhgh58VstLFrxH519WTF8RWxH6Jc
qMwl8xeeJ/ab3748lNcTf0fss577uC/fv577WG9N6f9VRNyHxPyDm5ImateH
vpth7QRew2uI1ZXvch/sAwdV4T0v+Eo2xX5wH0L84Jm//EfOY7dvnuusL18w
gf3gQp9HlNej1JRAeJ5l3IdMW1dppZVWWqkjVfKyvGrcF2M+2++478PFzQHu
U8we7Mf7rDbcfu6bGbP5jcJ93laGwCmWw78XD5jXce9yHzY/dETi8ojPow3y
DMTsbqrzp1p66BjyDQ19MqtyH3UAl3cuD/S7b2fL8pXTd8UUplgv5e8J18HB
9GGlF2ejvKOwnOfAMu7LcsH0uQ+mpn4hOU1Prqx1ddTI/wA9e/DE12PAfX4t
wndiPAT+TXFfJk4HdMwXcl+u0/6a6dG+hjsScp/36SQXjNr33PfOJ2c6F67O
5nk72R/jPnR7uEY2J3gh5D72aav+cc7e04z94D1Yj7axlXPcc5/Gg3yzeiGP
6xP7sVbwh8UndGNva4j7Tsxe6rw790Xn7SsrQ9ynY1m+n4DlajIi9qzrmyud
K+snO+eX3jXBNlmF/QbYJGKfTem643BfkXjuix2H44gVXfrbjSHuY02K+8L7
6jsYW6zsh2K/Krw7qpDDhXVCPQ3VaZjUvZoUz3p+P5wH54j7/Plivzr34TMt
39Am+n3xk9cHuG/mo9esbdhPOUXhPoSa69gHEbjP56gJYxFTIpanDeIdU+dN
W19ppZVWWqkjR60Gw1GQovyM5Oq8vrHZOfPZ552TX66YnU9+aJ77VHsvxX28
Z3/Mt5P8kbLfYc+bmX9rQPeBlabJfV5gV3yRYDxqQJiv55ef2PvD5j5fbyLM
B6qaDeIkRFyomn/Yn+A9bIUx7nt/+c7QOjkM7outyRj3+bGm5y7QAXu2PJ/r
MbQTqe64zg+vZ6uYO71WHKBYixg7z33wVF7D7quv7b/686dfN9ttyH1//73P
qKonH3LfxvadzhcrCyYwH8K9xH7wEwyq+g4h91GrnXVKTn50+U979S3FfvQZ
nmMMbD336X14jGem9xLPifl7mH5hZ4D31Db7Q+7juyBWm9vz+2HmPUndL+TH
FIPpPwOzGffYj/cbB4P1HOD3IiYV92H3U42MSXCf6qB47lPt9iI5CrloBvrj
uA+OUu2J0MY1Si09GEyxgeNyH9xFewjsxz5sf+I+8Z3Y7vML7+TcR3wer9mn
4+I+vnNiY/XjFfdRm2Lu7FtRZpy2vtJKK620UkfKuO84xy6OImU5+eG6FPeJ
g7ADwnQcQ++AyWAwBKbDlqd8LzHu836bMe7DDyrL09FnMuw0K7uLdi/1BX9K
bFqz594wtvE1+LwQT0ObissrE+XqRA/D1xBmk24me9/V5ZM5+yGrXd0avVq+
oqm2fY32IlEeS+XkNIZcm3GxhaNxH/6nzDFxccjC6kKey9VLqrbeRNdlzw6N
0Ac4FCYNY/tS3JdxdT9OTrqoOErHQsYil4niVWO6LLY8bw/kvAfP7+bcJu47
dWNtgAnFfejrYj+YT/dVHYaQ+3zcIOdxbch93Au/Umx/CNxHP8V+u4/uGxPC
e2++/o9D3Mdr1sf93S8sfwfcd7H7eRTfme2v+zzgs5D7jOG6z8sf8zwYZcEI
I3IubZ2c/agz012bc8vvVea+Ml06dQ7j9zUdwtqOddtjLShni2I0wz6L+xQ7
qmPivvnt+c7pr9dKuU/tifsQ/hvwNSuaErGf/Drx9SxiP/nrNt2POhJjFhgH
O578OZuol666DrITVvGVjAl2PIT1CHvBkGoL7vvtxa7xHDZ6jofXKycn3Cfb
HeubY1wn7hNT+mtZi8qBxH3EfWJM2T4Z47R1llZaaaWVceSVZj7V6ouMW3k7
sfdZDfaD9c6Z0++azQk9Eb/BjfV5y2FSxH3y4fR5PmHFy+tLeWze5199Y9cs
bK8M5TVQnAu+iPDay8Z9VW1+Ke7DRkfddeLzqG+X6Ynp9pUXVbzJuI4k93G/
GPd9uTLAfb4uYWirjXGfdHPmQLXNU9wn3VWxcaqTHuM+nUsb+F5yTor7pBdL
pxL7ift0b+Xy5HzPfcSEwexwGfcgd2fIfXAaW2xA9AXu29i8nbNfmOcy5D7V
m+CebMV9xmwR/0x4zWx+gY+n5z7bR4yosxnmx3pt63yxH5+xzN6/G9WVUzk4
QyniPhhG/wdU5b6YcB3P3ufqjNmL4XCtC59jyNZP9zsJgf2Yc9ZEVX7ivElw
n/1f1GUIz31VhM8WY22yL1VFbCP2w29RtRrEfbJ1VWW/1BpEFB8Ysx/asym5
B9fAc3Af75VbBsnv3+O+VBthXB/P7NKZN/LvGa5V/Rhx39Mf7+RM9+ThhvWT
+yDqB9fCkoodnLbe0korrbTSSn0xPYscHU639jkYYb0y7sPXULFkFy+cNI7D
B/Hmwsdmu7NcK8tzGQOSg+X8hyae+5Ai7iMezXMfvEZNY89s95/dynPhcT6C
v+LS0mnzhfz5l808b4t8OX0el5CLaD88pjw2+IdyjPyX3OON1/9hoL/0g/uT
8/PK/AljqfXt6ybkm4EZoyz6YD9vu4gR0RWpH4guxjyPw33MG7losPkxr8xx
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
wXrOfIhyborH4DSuvbFy1moEhn6hDx/czf096RP+jPBvyH2KLyzjvoXtlfxz
Ea6PotofE1+z2PsWB3PMwDAnV9bMHl3EfdSrYO7JUwpX7z5bMl0QvTDGfejP
3327bLY9dDh0KfIkpLhPdsMiG2IVEffhg1qm86Z8PLUP7rt583S+jxw9n3zz
Zc5+RTk2xH1iv6K+ZHUs420xVyl/T55ZyFmj6ueT1uvR0YnnxI8vNd9N3k95
O8vi8Fgvme93xn3Iwtz7uY2L+vOh76e4z691cZ/yl8q31fOehM8DDIP976hz
H59tsd9h9AnWU45OzRNrR9zn67zH8iaNI3Dep5fey7mvyjVNct+APtWyXyut
tFJDBnKwTNDGl9suYD54z3Ff8jrHfdOep3GkKveRz0XsJztSip3qcB9xgFyH
7yjto1vGfD7x9/z41JuW58Xz4lHgvpgN8Shwn2yMXOPzxiiPC+2pVvvK7mLu
66l67XAfa+DIcV9gZ/Tc98nX3+X5UWBdalMgjAc7X8h9ltfmWZZTj1gYtuhn
6IjoTSnu41zZpOSDJ94LuU/Hq+pQyl2CHh/jvhQjhTrtxuZtW3tIyH32vXoz
4z8Ef84iXTrGfeE5VbgPf80U+zWh8zZl00k9L3hP7AdLNcF+qXsx3577Uvl3
ct29x34c438Jz31VReOD/8R+MFPsfoxfbCO7XxPPcJRnXnZOagxNi+qhw92q
k+65j3PI9yn22zi4Vpn7XvyyXek8cd/MR6/Z95Vqq09SCnWrlv9aaSUpr3r9
8KL5mJRPp30fzW/3WY/XFb+f7NreNdOeq5HHX+Crp7g+5fH03BdjH9VNl90r
tOsN1Xl/ND73If3Yu4wBeQ/H7D5ZyvO3yAeyjNdgPvwpqfsmv9CQJ4vY0Yt8
QdGf3n37nyynhvJL0j4+njpP7coHU36gbMUnvvYf7ML4ZJ+DMRk7et+t9cu5
32iK+8SRKe77/vEXxqXYWmMxflXzAU1qzcKdknevb+TC+4w/9oz9PPcxLv7D
QLArw8v4bOK7iV4o9vPcx350tCvn3jL9TX5Z4j5v88t0syxPjLfzpbgvr90Q
8JS4L8tJOqyrxtoi10y4T9x3YvaSxc4pbi7/fnXct3RvOe+LxuPHwBpiX5HP
aak++vQgyn3si9UnPCwpYrchtj1YNea7Ovt249yX8pPVs8NfVu9jdmS4D97w
3Fd3Ljz38Zr2iphpq8cw0+a+onsrl8uk2Q++EvcxJ3x/hDUaELjv6Y93jPkk
O4+L88MSm5fivvtPbw3l9OQe4r7DeAaVdKWW/1ppJZe2jnjJXDRQey8mnvew
35Vx39reIN+9LNyXOhZyH7UbYLN+XeM+Nym+Dh/QOtwnOxq6eJhHBT9S2oU9
zs6cMO7b31vL27y6lcUCHib3VWW+aXIfc4RNkHwwXMv5MA+MJ79Oqyn/IMtv
wmsEm+Odh8vGSEeV+2SbT3Hf2fMfdi7P/KfJuVOvWZ4dRGOMcd/l8291vlm9
MFSXG703xn1ldhf9/6H38Kd88Pw1Me4jZxDPARtAjPtkLw7v6bkPv01ytiBv
ffLXzvsff5Czn7gP5sPP8/TXa1a3MOQ+jYOxsj4998E850+/3rl797POsx/j
HOhtodoH9zHvk+C+cfT5Ubmvzn19XcSUlHFf9tz2ktyHwH70jbWMrdrn66wr
cG1ZHQLPfUfp+UnwP43l8Iy2M2beE7hP/wshzEvR+bDfQvf7GSnjvrL+hey3
3auvWKWOxLjC57zW93fLfq28wiJeScWpvYpShfcaydti9ce2S/Oz7D7ety32
qJD7rJ3jzn3B/3D6PhbzwXHYH9CV4b5+bge+8+PcJ31RfHfhuwPz41LOFmqu
06bygPr2RuE+cq5wX/K7wDSwjrd34e+H7g2Dqf5BiuH47URHIHeK2Ev+mCED
omtntpk0F9IezEltP+plE2/m4+9+/XVzgEthMZ9fU/6ebL0PqDiGeuwc9+Ni
rFW5786jjQHu45ylnRXb0jbP3a+T/PW0croop5Jbp/h4Ih+tbCe5j9w4125+
YH6xlxYudt45fdb2w+Ip7kvpmGXcJ39HdHDeh9xn+WSebxi7h9d67lPdPOVR
Yb2F3EdeFp/zku+pkPtS/+2I/bD3XVzf7Hz23b6xmThUn2P6c2X9pM0X+mzI
fec+fs1iwNiv+DBxX2wOY+xHf+r4wtbR/ZsW+XmqlnuVe4fcF+PAGMuRw0XP
EmGeeF48O545x3WubNWe+yY9F8T9cd9x+HKc5yf/61QcLNznaxaW9mNE9qP+
Omufucg/AyVt8duAwH3jPodrW6e7v3PrJrwnjvCwuI9xjqNzTFsHaqWVw5Sq
9Qim3c9DnZMJ5+mUpHJ1hgL3zW/udD7b3Mzq/wX3P87c5/XnMu5TXs/5zUw/
g8uwAcJ01EyjxgPH2Ieofl8V7sOGiPBe+3QtdRvQ4b/56tqAf6nnRFgnq5e2
91Jzn7Yx7mPOVFOecWK3g2+uLp/sLGzPG8sxFtkOYUgxIfdc3lk3KeO+XKbA
fYopDO8t7mMNsV7wcXv8YNXmnLhHtrPn3jDuwwcW9vPcx5o4eHy7Z4st10NZ
o1nNhjjfeO6jzUddTvv24byxHs+5iPvks8bxkPt0H/ZRQw9OiHGf5uTduS/M
zhfjPrjBc9/59cWc/WRT4l7cg/t67uP4R7e2O6durHXOzZ4a4j7L83/5PbMX
xeYvlt+TPh02M4wq4r46ORhDX17lR1Xf4W3m2bOf8umI/ZZ2Zu05ee7jGV9c
XOzsbC3n3Kf/GyY9N7TdFPeNcm/G6bkPn1R/jupW1OE+a7sG+1GvAeYT93Gt
xJ5r9zPs//OZlMCOsB/3hfWUO3RS9xv476sm9+X6R8t/L6W8quwyNA+BT2Kt
egSvoO/nJLk311l73Bce/+TrjEN4/XmXVX55UcJ9quV+BOat9lwU6O7oj/Ac
7AezWa2AJ/uVuM/ngWEfx8R8vPfxgtjsaL8p7uO9OA92UT0E8Q4+jJm+Pcxx
6FwwH36ecAPnih1TbKccp0X+nrAHcVbkYoHR4DX5e5Knn776ttH5zf7Wy70p
X05xm5gNLrNadF19pwnu8zZBzmdLnpSBz47+J5gi9/l9/B9BPpcy7iPH6tLS
aXsG8Mt8l//Wt7M5rsp9HMefCuYS+4n7FJMnTsp0vt0o96GvskZZh/jnhvqs
uC/M4Sgm8NwHg8F+/WeU+QIOcN9i5DvWcZ/Jl0u21fWe+3iN0BZtZtf32Q/+
2Hm0bbYV6sR57ov514n7aFt1BPeepvX7Kgwwab1aQryU6heMm3vfx6U9iIzf
c/617dMD3Mdz8AL7vXN9o/PF5ncDtuZJivofsmaTojxLYjrmnPXlue9gb9X4
jufCebJ1ivsmOQfiPlgLIX9mjPsmzX4wn+rIcO8r5962/2ImdT9x31r3s3vv
0WjcF/6utOx3/CXFN9Pu11Gai5b5InM1wbF65ovZ+dAbY9w3s7ra+evXt2wL
++XtHWPmU/9TMVpwn3J6eu7jtbiO90+ebZlg+0LHQ7/OamXvl3Ifrz33eVbi
euV9Wb6zZvUbaJv99AXxrJf9d57pkuzHzvYycp9qMIj7iMNjiw2JeEFytTA+
5QGF/dSGtyN6fmQr38/K3Gf5kA7n+5x7/fmz1c7bc0ul3Kd11K8vsmtznOI+
n6ekTHflmcHUiNk6Hi3nNhvZc0Lu07WqFci1Ke6TLqU2Q+5TbXPsenCXxHOf
eA7Jv+us7oWfz2ybM1/AfTpPNsQh7lvYGTpP3Ieu/Xcbw33zBcUWGLIf42Oe
qBHh2S/FFlX4Y5I6NWsIexoMwVjEfuO2W6ff8i+G/fhOml06mT8LibiP+vbj
1qavKvzHMinuo21xn+pIqDYd7Ief7cL82Zz76AO2PdWfaKofZfY/+ErsV7Vu
QuF6q5F/89b9yyZXN08a+7GPPKFwH1IlbnBU4Xe7Ce7zvy0t/x1fKeKcafft
qM1HXZn2WA5rvibRbplPJjrjwdOMZ3j/164+tX5/z3gvZL4q7R11SXEf37vo
09jx+G63XJtd9sJuQp2DGPeJl0Lu80yEf2cmma8cx2TXC+P7Qu6jdl9V7vPt
wEFiPXRsGIs4QJgK+5hxFu11Oe/6lfdtfD5vJ3q6z+/i6xVyPe0rDirkvYd7
ty0eEebDb5Q6AvRDdp+yfDG0D4uJyWA0ttxT/FbGfbLzlXGffEc5l1p+5MXh
POomvr8cjw87bO6L6QPUakdYr+K+QbvwYD4f5kr+sWzD/JRl+muK+wb0xN57
7wvluU/nhPXPdb44Ur7R6PH2P0yU+zLG689HhPsCf0r/GtZLzbu4b2B/jzFC
G6LOhTs89ykGzou4r1D3LYmhHNLNR2S/Knzkue/Hx3cmZtvCTxDhHrE589x3
5tIfjdU99+m58izEfsoDGrMnNiGwGbyv+n1Nt618mIjYj3vhny3u89dM4tlU
5b5x7wPPUt+9bt0FcR+MJ86znKx3P2uE+8Lxs7ZYU3w/qf5Kk9/1Lf8dT2lt
feVz0dr9Dk8GarGXcNq5bzKeEfMVtnvcuS+SG9HH96W47+76p7aF8yy+oiv8
RsMvvGY/ugssGOM+8sOUcZ8X7n3m9LudK1c+6iwsXjYbFrkYsTFKH8o4aTDn
jLYvG/fBNrJdIvSBfooHFd8oxiOejdg2y/PSE9kNJeI+eK8q97FesMHF6j82
ukaxVyX8Sj33KSYVO3JqLYXcl62Bnn5TwT+Oc/S80avhmzC+z3Mf59Dmb7/v
DJ0Tcp9sfIrp8tz3/Q/3e76VGvf2gGg+Qv8/2fo8640r2JXgDF8TwtsGNQ44
KeQ+xUSm5jdW02CS9rwq3Adz3Jg/abakOtxXpd98b/I9yTx57iPH6gATUMtv
7ZzJ/OrHnZnrbxn74fMZxkryLPSsJ8l9zAP99nXbq15Xdg72VNoW8/EfgmII
xZkn3/vX7u/Cn6xeyaTWRxUhjm7u7FtjtWHx3j3uW791Ic8NY/MV1FT3xyT4
kyovqGykYr+ffu7n+sU+t5awrReu5d/2e/U3s+8jxB+fyPd+y37HRoxzWu4b
nJMGuW/aYzmOknNfSUwSzLf5oB/Hhs9nYbtwH7lAj8AYR5qXGPfx/rNVk/eu
fNk5+eVK59zyhnHXzS8udu7sbJiI+/BhLOI+3rPlfHJywljY+/D5hCfDug5i
INU4qMt9WY6U7H1ZnXbJxvp85+r5Pxv39fMtZLlW4AKYipoJYV2HmDB21cqW
fHTi/7I2sIuqDavJHbCfr6kgzhOTyRcTXqnLfdSGiHGfcnvKDsj9aY/31J1n
H36eqc+MuO/tT1cnu0aNXQb/B+be8J7/n6IK9/n5xv7WBPfFcv77Wu7K7wL7
aZ8/z78W91GvG0GH9z6dIfeFnBdKtTkuPo4fqa//Rz88+xFbJp9DxQZqLOTT
QH/HJsJ3AbptyEOe8fR6VLsNrBljELMNXf1gyJaWyvfh8yDSX7FfyOpla6Xs
HM992gfjX7g6a+y3tb9u6xQ7HyLum1t+z74XYtwXs+0iB0+a5Wdx38LNy5ZD
tspYeTZ6tnBcmA+GuDzVTNGcKHZO7Md+8uqI+5ocU6Xn2rN/KY5P3Iedrq6t
ztvSyI+zvnwh5z6Nm88M7Hdr+XLnxo1LOfdRn13Xwn1PenMjXua39qD7Oyru
g/35ThmF+5Q7is8378P/Syb23d/y37GQlvkic9Kkve8Vn8u6Qu4Wy9sJo5Vw
31wv5uxV4T4bQ+CrJ5+6Mu7bOtjO7WLet9Lq5+2tGQ9i7xL/wX1wWx3uW1hd
6CysreR2RvO3epT5ltL+1bl3Ot99+6X159efM9sdejj9CW1oRbX3qnJfFYac
BPfJ5idWW7l/t8ty23ndPuyHivWD2/DtVB32TBbzPKDiPmyARdyXtVHOffZf
gexxY+R6CZluoM2A+2SXFvd5eyPch43M+3qmuK+/JkbQ/RzrpbjPtr/fM79H
trwPuU/C/+fo+axfMV/IfdLlLR/Ll0v2vTZk39OcFcTuZvM9yAZFzybkvmwc
u+Zjd+XKqQHuQxf/tPtZonZZjPvCnIuSWA2HUdiP+4n9VG8Ru4f0YdhPuWfQ
pz33EbdH3znmuY88pZYz8ud7tbivimBDhHX8vMB98B7s57nv7OJfLMby9OLF
nPvyGia34uznpf8fWTOyebBg3DVz7oSxX5VrYD/8NVXzD46jvjxzwLMS94X1
B8R9bMV9PqdNk8+k8ndAj/tYM4yFLdxXxYasXK1qh/kQ9/EbSZwgbTJeeI/1
Z9uucP75s+/m3Me1CNcY+63OG+MpHmL/ScZ84j76Vzf+k3XDGsN2HDs+UR2l
5b9jIS2rBPPRsK/ntMdznCRnvgrfF+I+crn82NUbsf+durUTP//GvcKa58dB
YrW3FdvHFj/PS+t3jfsQdGqff6UO98FUsBWstrCxZownBhTzscWWAvPNXp2x
mL463Mdv0yjcZ/6c+FZ1+W9l5XL03FgumJjgL2p+nd3xMg5jqrUZsxXQ5/X9
taH2YUFsl2KzrG77ouVY4b6T4D7ym8B++HTClxzjfv66G1ZTeM7WQGz9RLnP
rSfxWuX1mOC+1LneTq39IffpPxz+YwifleV8+Xu8fgDPpMheEzJeP7/L/cFj
Affl+n73ufnzsJd49rM8Kjc11sGtuG+A8WIy9NkO57Ca76f0vkE9MOM+eAU9
Hma6+MnrQ9wHg8lXD55KcV9T4v0DPffpOP3x3Kd6a5zruU82OI577iuqU1+3
r8pDEnIf4rkPpkKopSH28/GZZdzHOsLWp/+0xp1j/Rcm7ov5kdqzf7w0kCOX
OWSNiPsYO/OLiP2Q9bX5nPvoL3y092DLBPa79tms/d/A/MB9k1xPZcI4xH36
nPj/dmKxgezDj1t5gGc+es2EttjvuU+sJ/bT9XAf8uml98zeyLUcP3vy/zGB
/WiH7xRxn+4/t1Ge90f+5WJT5dpWbF94/qHoKy37HVnxcWgtq/TmpM3rcugS
qzGW+r548CyrSwDvUa+vlPt6zHecY/tSc+SPxbgPLuvHnx0kc1mKbeR3CZfV
4T5qtcN9i7cWO7++yPw5VRve6+0wJjrawsI5y/si/tPxKv5+R437sC1yv6ym
3nzOYorJs/f3MxaDw7OaGNvGElwL+3k/z8yel7GfajiMyn0+n2cY1zcQi+fs
dIVr0J8fMEtR3KDnPr0m35DyzRJDqnojKe4blHLui9n2fLyaZ78sb+u1LAfM
78Ntee6jz8rFgW1NcXKy9fXHXDBfBYzsrw/fV+E++qSxxnREmCXkvktn3shz
6nvuG9V/MxbTNMQZvVz+4j6b5y5beNsR53CueENC+97nULk7aYvzaYP+8zkW
+8GP/v56zTzQZtmYmIuiXC5q177futx3ceFi5/2PPxjIq6McrGX2PvnnNSHi
vi9WL3UuXP7YOEDsJ3uouE/fOXyfifv++sG/55wr9qMuCTZhcZ8YFe7QlvVH
LJ+4jxoi2PqmZe9DZGuzdfJb/zuBrWx6Ifv5endnvspsch9/8L86t1a/yLlP
v60bd28b88Xuvb21lHMf71dXzufshy1Q9r7w/vIlSI0JThTjaf3AiuxLXXOo
OkvLf0dScu7rybT7cxSk5b7DlRT3xTgu5D7VcUjKK8B9ipdCf2Y+qN/O9z46
KhyGHs2xOtxn+dm6PIS/J36icB7+ntoi2Pew36luBPfN7HjF3KdcoqNyn4T4
Qdo0v8tH5ZwXE/iOGu2+D2zhSmyX1CKEzVS/oT9Puz3mmyz3Kf7v8vKJzsz8
W702L+W2RtX7E/thb/xwcTNfM9oWcp/sdgHHhdePyn3hfcWAYj/WpmpJivt4
zZr67ffvTYq4T4yXxfPtDLz3er7+31d+F9Ytr3m2A+yXs2FmD6TuATXSYbyQ
+9Lj3Bvm6t5r4u3KGM7nYcnbi8SEhaL//Kv4CGIb8+yHHo+9jc++551wrova
xM4GV4r90LNDP0C1A0cMMXZ3X+xceEO+qJaDKlF73HOfmJI+eO4T23Lccx/n
MBcwTRh3aPXnejbJIu5jS02QkPuqCsyX8s8bVfAxIEct7IefZ/6setzH95f+
x9L3jtWnWZ0b4D7E/uvrch8izss+RwcDOZPEfXrP75HYr8mx1RH4inUu7tvd
WjRJ1XNQHT/4js/WudmTJnAfAnNlOcP6NUGrCtwn2yE1HOibryXoJRbnx76s
fm7Gfn4NwX1F956K7tLy35GUlvsS8zIO+71k8zkpns2ZJqjTF3KfvjPO9fKV
k9cllceTc8lhYb6jx9zHU2LjmVsa2k/NPeXGR39OcV/2H+Cg32efy/qMpt+x
Mu67eOFklPvKfDZ/fna3s721YO3DgLyPMRk+oi9+2TXxzKo217dXLG/MYXEf
uVgQy/vRO1c6D36b4jb4T/UYqLMOS1he0q7+tHWwbsynugQPnm/28rIsmojd
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
xz1i3KeYP4vzWzvbWdu60mvjkuX+hJusNkT3+o9Wtitzn625HteEn7OMJbO1
V8Z9iP6fIO+M+aE6ztN1IffpHor7Y0t/0XGKuE9+nubb9mM/HinkPvyDsSXK
/kBthmx84ffK3gDLJe16XVEdUkkZ9/k8oMPHti0PpPF7wH3w2MbB0oANowlR
DkitF2K9is733Jfrtp7PHPdhb5Mf5ajcp/hN/XcVO9dyM47hSyi/UGL9rJ6h
q01eJuI+WAnWrKLHh2Ns8nn6tonZE/fF7sNYsdvyfMR9TffDcx81Tpoar7gv
+006mUvZdbAfuVUYM9yH4Mty55srOfc1+hx6HEpOIbFf3TbkWwP76TtE3Fd2
7bR1mOhvTMt/rRxR8dwnOarcZ5+dns3snRt3m2G8EbivTltR7qPWemC3457Y
+obu95Lk7kw+04j+LRH3wXwIthH4QvlcZMdSzk62dbhP9drvPX+e2/1gEXwS
icNDt2Yb2tiy/x6H4wlfde4zG2GP+7j+h+erea0/OA6/TuUGxZeWuUYXgeV2
ny71agau5fk+q3Cf7Df0z/t7wpqwYJ1157lP/sP8r8DaC3lO4plO3Me61TXw
nLcB6vwY93m9ni02Cq8/htzHMe8/x2vWZoz7BvwxfXxewH3iujBnZ8h9xozy
QVgYzlFcxH3Z8Yz94D50W/rP+Fl/k2K/OtxHnbawdkOsroY4AvYb0oUr6P6e
+Tz35TlfnH2siPtS+7HPwWzY9VSXfBTuURwgNiKrh3r5PWOKFAOm2LVpEfcx
NpgbCefCc98k+/L4h7vGfk1yH58FRP9FPk3UbwxFMXZiv9lzb+TcxzOrwu6j
iHLJjjrXyt2m7wneF9k2JdPWYwp1nJb/WjnCMsB9RyRvp31WFjb7voCO+0y6
uhZyJLkvZb+L+GuS1+XcN3vD3w8vOfdpPmJ5OpT/EL045D72x7gPjoL3YDvl
UhQ36nzleOGaUbhP+Vhi3Ic+afJotXNj5Wzn8uW3Ox9/9B9Wrw7fT3TzlbVl
y7lCzYfQV1X15VVrHuE6mFH+oaG/p8bu+5j5Xu6Yr2cRG+ILCBuSk4bzyaEi
nlM+F9nu5I+pceOHx3lcB+ORy0V5O0fhPlgO7lP9B92TOn/MQb8mxKW8VkSW
P+ZSZe7LP1+u3pz2icewyVXhPt6jo2if8ocqt0uM+2S3lp2Q47IDhtxH27Af
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
hdyX63LdccB7xPUVcV9V8dxHDBES1s0W96nuAefCCpVZo/tZD+ONPPdd2z5t
ts+6ejrXWr0Vx36y/dE/mGHg/J/6bXnuQ/he8XMYsuBRErgJ/R9mqzr//lqe
H8+S6yWqoVDE9GJG+dCK++SHioj9qozBvw+Zk9eq6cBnj+8ysd+051+CP6tq
OUjos7iPeQ7zbL74Zdu+F5CwPb5rkJkrbxj3YefL12O3DT6n+H0WcR+CfY/P
Wd0Y1WnrMsdJ6uQna+UVlB73DbBSzC+zYp28UGLrDe7TZxnWqtsmXEQcHvaa
shoL1gfPfIn175mvsE0xX4Oxni8r8+n5h/UbpD9Lzz63vGFsVsR9Vku8y1Jw
n+XW7NWvYgsHoP+jU5Fr5PLyCcs7gk7KMdrCl6cK9/EbLvteyncTbrMYlrU5
+633DAornZ05YQxnOQy7W84789nn9l8w3Me55E7561/+b/NbhR9pz+INu+Pk
GPPBWNCflRvj/PI7eZ0+fDkzH81Fq9cA48FmMKA4EE7gPJiIc5SbpZ/XZTHP
9yJ7nvnidOeZvnMePqlW771X670J7ru0frezsLpgwrwwXwuLl+3Zr2+v2DmL
txazeombn+b5WupxXybiPquT3vv9i9VeiNnuJvJZKPIJXdxLSoz94Djsb1bP
vsdnKe6DqeEQ1VzIYvKGuQ99lvlH1FbIfTxT3tMGcXwDfe1xn3hP0kROe3R5
z37448FOynlZl/uwq2FvCG2Vy/f2zfYHz/KdUoX7YlKV+3xcmGc/H3Mo7gvz
zxxF7kNG5T4xm9jPx+IVcR8sxzWe+yxX0LPMf562mpwvvnux2yJiv7LcQIf5
rOAwxTIyb88fZ37WvJYfJvlWxH7+Wtgv1a64j7g9ROzH507+rrBfUd/43M1t
7JtUZT+umbYucxyl5b9WBtaDfDJdrUIfm+fzZdo1Pp7N5eBMtQ87aY1hOyNn
Suzz3AT3EYvH/sJ4vBqS4j6r/dWLF2z6eby03NfTpatwn3w4YTt0UXT4K736
0/Afr82e1mWNUbhPvoiKUYvl4PR5OFMC94zKfdjyJsl9cMEkuE/+nfLxlM3S
8oF021XOFWx5fq7kJ8c5PDfuUYX7yAcD+3nugz35zPPsYDzGSc7OjPXu93ID
bdfmvtyfc8K/iTn35b/Bac7zwrVwHzoXHKZ6CjHu4xzmy/Ln9NhQdr4Y+/3Q
q9/A9bIXhuwH88COqsdu+wP2Q7CRycfz9T/+jyH2++1Fcb6IKkLf/n/23rS7
bStN1/7ZZ61aZ1jvOn36Q3ef7tV9qqqrKu10ZXKqnKniKbFsZ7BkJZZkJ5Fk
J9FUkSU5ke24PMXtb3xxPcANPtjcAAESJCUbH+5FEsSwsbEB7ovPpHoHIfdR
uwGeisXOlc0l4b6wv2E+sd/u4W3rs6q6aDHpeSSJ+8R3qiuo3CcxntMy5TTl
2dd23tFJSbk/lOOxlE/+a7BeIywCM2KvE/dJXPPQFodNWNwXflfmSzvqefG8
Q9xnlieZmONk/KUxccNrOEzz2lm+mYR/Pfc9OLyVsx/c9/EHvzfd2e3XmKzy
AVXs5elTvzbuY1/YFBHs9+xR9X0i+6LYr2DDrjhux30t/PZ0/PdSq5DHbmEw
v2ahRgLc53O5BNxXNn5gJ/wn4Tqbmwfcx+dRGcfvi3p7Vdyn78rE9+E6IffZ
OZJPtOO+5mOtJJ+LF7lX8C9EYj58Qaq4T+zGZ2oXMLc6e/EVYyWYD96BaZjT
sq7PBxNyn2xXTbiPV9X2ZR6O7Yn9qL4vsSHMBeAUzgm+4fyw98F1qKxmO9yF
8P20mtfb8zmfidHwzeQ8rW661V9Yt36EjXgPs9Gmnx7dsPhG5ufKtYm9VHbO
NHYpnWPSVrbh/3H6CqblXHW+4j7vZ9uE+zgffF7JuYMPLpyHH6xsvLSb96zD
61vvnrR+szqMCX/W4T6YUvUf3//6mjFenTp8k+S+PB7Q5Q0NuW/YPkLug/eo
O8Znxe/hYxbjPjgNv1oxHtuq9kLIfVxzvlfeFux7IfdxTVmPZTAk+wi5D5vf
yffeLvhOjsp9fi7tuY94PuWTgAeach88pTZ7UTtc34/KfShkP+5hfGM995XZ
7vr/saTtqFvPYpoKGce3j+tTxX3iYNU+KOO+wvEy7ovVcuc4VTlf2xTPPOr5
Xb7yRl7Tb1idEEk1MyfdRjhO3IcYa9TUE/etX//IRF/DffSpt6WGDIYNj/XF
fTDjufd+a2J/LFtdOW/cV4f9PvkuFbZ2xrmN74wJ+c/Frw/zffhV9TyuU835
WMd/L61y7quKkVvs11jPl6t+nvJklowbuIzfBM99xfv49kjcB9cx79N+YD7m
1Fq2fnvP7IB+G5hONsE0X8t2YR1xn3J4lvWF6g5aHYoJXZcXkvuGjDPPfD9n
Nly955WcjKrfzjjy9e1G5T4xn8UGPr4d9ekU38S+S/OW7Fos4ZUrJ2tzH/k8
jxP3sdyYLfMv87xHDJjy3DAPwk6Jr2eaz0E21V1jds7Z6qyPwH1pjY20ZqB8
PdcO0/ynC1srxnmMD8v9mbyvy325zbnFON0yee4Lv3vnenW8NLyH3YlxfDPp
C8Ya/V3GfXAFDGfrWR2HOPfBczAb1xE+ZDurTRZwX/rdF3Ycq/Hw4FaU+x5l
fqLymQy5r2kOhzK+EIPBCeI+sZ/yg9bdr7iP58r67b48940z9/bMJ+4T32Cn
TG385X0i9qNNOz+1W1O+LXFtYB7k24dfpc/p6PUkeS547outE7Pdwfu+9gfL
lENS3Dfp8+U5it8vEvs12V731TSuDeyHH+ZW8jwX9ymfp7iP9fgeqV9hPHGf
thP33f3buknsRy0H1W8YZtsNBfel9vV9E/cb/w913DeFeVnHfy+VPPPV5b58
3YR5Qu4LtxPzwVYPHu3nvw3F+zjN5yJf0LpjTtwX7i/kvnsPUv/0lBHSdTzz
8Tu/e3e/t3FH89OdSubL61dMmvm8IjFIx1HhnNrnz0fwHH7A8B2vH3y914j7
9Ao3fPj+G8ZBzLHgItVhQMrFYnGCD/q+nm1w30ry20juEfaP/U8+nmqrxbEn
/UAOGxgIPvJxhWWCaanZDiMpnwuvnBtcy3l69iNXB+3Gt9V8YDMexf7DPJ3t
FSMX2jX5/MuT29bnnBecVof7lBO1DveZrehpyg3Pn+3k9TGUY5VrzL7wlYX5
3j37p1Lu47hiP3Gf4vvwG1atBt3D/lXvp8F9hWNEaveJ++Al5jw+no/4sjLu
k69mmotlNavHfiPKfSyD3WQvVJxeyH3230ByffiO7WQzDLlPHCm/UtYLue+N
i1/YfxaWr7QF7vP+YGI/4uRgA+x7+AM25T4p5L70t6O6rXUYLGS+NP61v13d
+ubT5L66dk2fV8ZzH/2vGn5iP8XWSXDf/NZc7/z6osl/BwdiF45xH1KteF8j
LrQLTkKySXJfcZ+cu/q65QSd9HFHFTwGs4n7sOXxWdwX24bl6lP5gYr7LKYv
0fzSO8Z94bGU17NJG3keyM/a/Hu+SXPpIt7z+8d6cN8bl67PfC7zoqrjvxdf
dWx9hfWz+nTe5lWW0wRbFWz2+Gn/3lb+e94zf4Ov2JdnvjptYR1sh9qnf374
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
0jtx4Wo/Z2eDGuX81sN9ip8T88GEdbbH1/Ft558l7uP+9/6c6bO4z3X6Pn+G
B9wXynPfAPOpVmHHfK1oIIeG8zGu4j7m8NgBlbMVRlKsT8ps6Rggpwp5PJXT
cxTuk18nvqSe22QHyW1xybbPnv9g79k+zZGZ2gthPuVDEY+yP363Tq2sGYsQ
48c5ToP7YCpxX+zZLdEebzeV/Vz1/lSjEDZDuc9r5hso9iU+D94jNs9zH/ZI
2lSH+7jO175I2HHhjHER3IIvJzZLbJkpg6QMij10YWu+FvfV8btsc7zHuA8p
5hDRP6qVUMZ99kxMuA/bJXYjFOM+8+18lMZOisPEfyH3sZzjyg7IOjHuY5lq
EehYMe6zHD/PU8Y5uHsjyn0wK+KYob/cuOwH68EP8NRnH/2nKeS+NN/Q9Off
ad297Zz9Lq2fMh4yu9iMuC/WRtUJFPuVtU21RpHYL1ZLPcZYrAvrwVWe+2Jt
qdrPsOOE4r4o+67KthfjPsUz1q3bMCt57ru8ccoEU9WNvyN/p7iP/+EQ12rS
3IeWfjhf4L7ry3O9Py2szXwe87Kr478XQwU/Tq+Edwrc1+Aae+6Tba/utmK+
UyurvU83Niw/p48PDLmPmLy9e1t5HpfYb1Wap35wOfOf67trvbn1CNuJ+7px
3c44q+A+SbZA8rrIzsfnMu7TWGDO6LkPYfe7vHzK5qmqU2Cc8vP3lmcE3yS2
Z44Dq6Q25FTT4j6LUzzYMnuZ/l+HfZ4+3rR2pXPhfWM+xPnAQuR4sZrnyXtq
nXM8eBAuRPIBTe04S5W8Nwnuo0Y9+2A7lpm/d3KvwX2yHWK7Y5/wBbYm2kw/
8L4p98F29O3c+pK9nsx8pD1faQxOk/t4dsbs2yH3yd5HXk9v4ys8Fx33cf5p
3b0beW1E/C7LuE+5NnmfzmXj3Acbsp5yxShWMOQ+iXazTRrjuV9gP7VH9f6o
6YA897EP2sBrEx+02HyfuXvIfeSUh/0Qy+EVsR9xY9OqiWC1+pJzhvtgPs99
ZTa1WcjzlmrG939DD/LcirSbfuQceI4SrxfjvpjgPHFfrF57mRi3Zf/fjmsj
LOO+qvWPC/edtt/EU7mabA/3qaa72O/PJ/9p4ja/+w9uGfeZZAvuuO/IqeO/
4yu7Xld3+pzjuM/i+TI7n7+2ZdcYex42NuboCIZrwn2FXJaJPPfhv8nvEM9+
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
LsN+4UZiCOm3he2Lab7NrN9V79Kuy/MfWuE+qxWRtJ33qinA691Hq2nO+8M0
J2k/J86WxfINYz+Ya1I12SvHdk3u41qVcR99YDUzErbi2rDcMx8qcF+2PqyH
XY99KJ9QyH0wHX6exJzRvzBcjPtgOvNRTPahY1KvL2Q/rptsjuzn8MHqAPeJ
Dbkff/u7Xw1wHwprko86n66zXVvcVyXi37CNeK6hbbt3D8zGyX3chPumyReq
KWo+3o+K3CcOCO11TdsHN4r7qO1eZ5tJ1AtvMq5Sf/c0T88nye8PNlykcz8q
+Vm5b5XrqC32I8/LWP1XM48o3If+8va/dtz3gqizAR4PhcwXk7gPX51h13Ej
+02PjQGW4ddHrQfPff4ZGsvXItsD/LeTzA1D5hsWY2jz40srtc61U/vjK4zv
Yx6M7x/5MhVfJ8box9gd9JpyH9x26dI7xiJsDy/5+D1exS7YDr/f+MTewyps
e3N9Pj9mmg9w/1hzH8cbl/voB+VvUT8pX05am6I/b+R60vcWg7h22s6B+ZNx
ycFWY+6jn8NcnYU+Vu7YrD77tNmvbl14bMSWk9TVYce+BrfV4T7scKrBF+M+
rQcfKlYPTuRYIftxTSyW725aA5BrkdaBL7Kf8ePTfv0/xRMWuC+zNcL3h1l9
iJD7GNdnz7yZ2xJj3DfO/HzYOveT/oE5mFc2zUtSV8p5CfvBTtRC537w3Nek
zdPiPup48Fzx3Kc8nMh8HzLuG7d92EOp71eX+7zENuF1DdfDvs24HretbEMt
S95z34j9/P76v1HNRe4h/7muHbSqf+A+7H7j5ODExsd9gqbFfrCquM9vM+t5
S6cxfxs7/jvSypmoom4fLFfGfTCXr9cn7mP9cD9iPngPUZ/9waP9xty3e/e2
HWdpZ2t4rcAgf2nHfVMeX8q14cZNXe7jPfMSWEM10uERrbO8PZfH9sn3k+Xj
ch82Qz6v3VqyeEPyoeCvqXgysYY/Ry2T7cl8K7G5ZVzA9uR74XVha8V8NfFt
xM+zn89lznw7f7j7RV43nTYz7sV78BN8p2epfDjFPLSR/ob5jA0X0xqJsAev
zPHEzxzPaiB+/m7CBIt2vHSOup/zZhvcR9wlgg+sbviDlA/wScWnldczyzfz
/pFtrzb3Bc+kaf3mhNwnX19slGmNwdvG+FXcB1txXeG9GPNJYj9eyf+Cb6jq
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
ivnqcF+V4CXmj2t7WxZnFHIf3+MHSs4XFHJf/tz7JY3/89z3IJuHMr8VB4bc
h6jnx2fmUsxrQu4rPIeSuQgKua/QN4rpmwH3lbGeZ74Xhfsaj9kxuG+ce69g
byxhh+PCfappL3shr6mvV7/evb5H7P9uMufEp/PawnvmT/aXP/2L1f/7+e6a
5etkP5orWXyh474Y+1VxX2gPjdVcYHtsh6NwX9tjMr+2NbhP/p5cV/iPa1zG
fefXF60eQ5N8LuYbmqxPrCA5ZGLcR1yofDaVs0X12UP2u3m4nC+nj3+498UA
92lfvMJ7sJ+4z7OfakHAJzHuw0dvmE9e+HtRxn1tSez33bfL5ktZNXcn1+44
OUVD6VhiP/2mUYOgqn+quA8x/yaGzNcF4Hlh55Dc90+sxu7wPJ6wBvvw3IfE
e7JvTZL78IMU9/nr4sfBKDU+NHZHbZeOqf8N6BfaV5Vfhb6k9jySL++09Pz5
8NqApeeacV8V/8F9YZwfNkrVbYD9VPtPOU1nPdfo1KkNHTUGzOey81sjtwGe
U54XcR+xQeI91vHcx+/LL09SP8+B517GfcwdmXdiP8Q257kvnfeupfPMRxum
GPdhH4zVgLdnUDIPEQsyh472zQzj+oZx34vg5zkrjc19zoezbL0/L26Yjx+v
hVqBfh+BLyjf45dI7hPuJdXNvvXTss2/JXgBxoO1WEc+nxaL8pD8uX27HWNb
/IYtbmnp/ZzzJsV9tAcp/o9t4U7uXz5zbpwjjBv2ofqnLvfBuLCI/R+U7B/u
5d5fyPLVDFybSXJftl+Oe2b5Zt4n2POquE9+kl5iL9SU/ULu836Wqlkt7vPs
xzVVPhD+H8jtfwPcl8YLyicVee4T+7135teWS1K5X2LcZ0yVPOup54fEfTnD
PQ7r+gzWHwjf+xg/bFd1YgPrqIz7/P6fPG1/Po79/PzSG9bPdblvmPD1DLnP
64nLeRYKZiQGjbwhnvvYJyK3iNiv7b6ICe6jLcS4+doNsgmHKuu3mC/xOAwf
bu+5D7uxX1fxf4jzgPum0XeI5xR+3XDfOOxn55xxH7UYkDgOP1f9FwD78T+G
YhBhP8bMvaRPWF/bPHlande5U6fjqlkzYFvcB+9h32OOp9rrnvvIBcNnq/Fw
f6/Afenc0OfWPBjgPjFaauPYKXCfvjcufJp+Zn8x7tNc1C8LuQ/73jTrupWp
476jozIbHVznxXyfWgcLqwv590eB+4idIpdnmp9CefD2c9tfqGf2f396r7Af
7Dqp72Zamz3N8bFgc1I4gTwdiPWpIzgq96FYDGTMvnrr8GZz7svsxK2OjcVi
XcYY9+W1oe8s5LGa9J+PjwsFJ8FWrAu/vX7l5pB27PVOLX7f++CbL3s31i7k
uVhC7lPcHTldmW+Ri4frWMp9B0t5zXXF6IXcx3ue2YxHWO7jhY8HuI8YHr7j
lWtF/4Tch9568x8sT1BYpzqcU8dyq+TckvFXFffl+Udqst+n3+3nOU2Uz0T7
mdSc3PIzOu6j78a1QyH4TPXdwj7hmjwr4T7m7Z77NJfnM7zCfvFTZF6v2u2T
lNUOSa5FjPv8OYXXfNjyNrgvFNxHnzBuxH3wkPwbxX2KV9TYlx22bencuA/F
fsiv0zRXkfbFe7iPsaI8o2I/xTwyRrDzsUzr+H113NfpZdDMGFB1Chr6esrO
R46WkPuoz8D3eS3zgPv4Xve3OM2eFZHf4Bj3wXM/PlrLf59UA97vK/6sK3If
bRq4BuK+Gfvhdtx3dDQq9w3sR9zn+C923dnXZ199Y/N95uXX1+dsXs4rrAM7
8ArnPXv+g/3WpnPdfeM/7gt4DTHeJ8V9nv2I92NbxQp6f1LEPWpcmLDows01
s4eOw33UvPjp0Q07X9VZpl8sh0zSTnxAQ1/S3D+4RfbTtdRn/DvhO+Zr8Bs2
vRj3iauU7xNfSNVaQGXcV5bjs4z7fG11mI33ZdyHyPfPK/a7GPcp3wv9Lt/R
kPtOnXvH8ouwXDF9IffJT5Sxgf2KMdSE+zy3+Zz+6e9B+dy/zvKY2L/Yj1z5
zGknHbfG9eE6eQYR+427bzipjPvKzkvcB78g/usR99FWPov7psF+nvuq2j3s
2oc+oZNqr7iPPsPeisR++DXCgxZD+ngnb8ckuc+fq7gP7d49SOZq+yPlqOW3
CK7TfwKMl/Xlj+wctYxzFfehsn3N+ne/U6dpamoM6JhPuStN88P/a/HcRy4X
PrMcxvPcBxOmvpo7uV9myH0wHL6XvPdxf3xmOXNFBNPJzhdynz2/n28N2PNi
glGxRUa5L8jlMsuafMxbO+6brWLMB5PAZb88Ztzt54yEnRtRY++NZJ4ey/US
5v0Mjzcq96kOnF7TnARp2/DPXEl+b5lDqh57n/EOcl/Pgt+ncUufHS02796+
SbZEW+/n761uQ1vcl/eTY79YP43MfS3EM3uFNRlD7svr82WCA6mHQfsruS9h
Ia4vzIStBxvam9e2SrlvYXU5vb6J7vy8m+dkiXHf8tqZ3jerH1l99WvX3s+Z
L+Q+6uvJf+/rjY9sHzHu4z3Xl89sE+M+OA9xf5hNKcJ9iJg/ajxcOPdKLT/P
kPt4j50vrD0es98M++y1mfxmHdxL9xFyX9us4Oug817s1+YxuKawtWcl7E3k
aQpj0FhOOxCxdGI/fU++Gdls+I/jwwv/btdyGPexPtymOnVNz8HXMaBdo3B4
Gzlg6kptFf/AyNT203J4KDYWf/llPP/LMvEfgv8M70lw37B8LaGI0Vu//pFJ
7If/Jtwn9mM9xe/BflX7m/Vvf6dOs9I0GDC3c2XM19TvM+Q+LV/a2eptJb8h
Re7bN/9NnjlSyH2W+/2nxax++0GB+VhH2/G957wy7pO/Ge/FfGEeF2NgzccD
7vOa1nVX7paO+2arptwH89XlPvwDkdiBbV77dNUEPzB3IoaO2LzPr71teRLx
+2QsM1fBf1I1EibNfZ79PPfhE8hcEf6TLTG1yx8U4v78Mb7+617lGB7GfdwX
1G/gHNN89Vdy+yP2yA++/s40Ne5z7aNGBUyOlJfHs5/nPtn+xKvY+GCqnx7c
iHLfpfVTvXNXXzeuMvsfMX+JsPORu1PsJ+5jH/Ab8UJcJ1gPX84Y92kceQZE
Yj9xH4ytth5meV5C7qMGPW1XvZDDzBfXcx+f9+9tpvUDstwvIfdh9wvn6LH5
IZznazmI/bD7wX8x374qDogt89wX5mZsi8k0H4bHxH5lNs9xJe5T3n/VfhP3
yZ9TtQLEfmW157imqgsp7mN7FK7LGMKuJVb0dev8enwXy4Oi+udiUJhp1H6Y
pH1PUiwboq28wkCq2wD7lV1n7zvZtjSPyq9Lxnwsu3N/eJ7OmMR+ftt7B/F4
1GGa9W9/p05HQZPKC5Nz38JoPp9lEvcpHwt+ntRN99yn3JteIffFngkh81U/
2/vch40y2t6M+5hPeb6bFfd5xfhv1mPxRVR4P4V5GrXO2q2UqbxgMItZSl4X
FudMxn5DbFplNSCIgWM+Pbe+ZDFs5KhUbSPm17AlcXTiiYXti8YUEvNybCnM
9xE8pLoB6b0w6N/p2czmzFksUcq0O7ndjnNkHbi3De6D4S6sF3MoWX31T1YH
7Gm6H0Lui7HfQH8H9d5bGTMRv1GxH8zDtVG7aGPKfRfyNse4D/Fs5Pz0Gf6D
+2Lst/TXq3nOFvN5T1jqSWZHC7mP/JupDe6LtKbfw5TfxHOe/W5tfW5zVGO/
hMPwHw25jzn+Jyt/Ni4kLynCZij2y7kvi7+2OeXP3wxwH+vRdmT5PX/3qwHu
K5urw3iK5fP+nyH3Vc3zq3J/+GX830H+mVhezzbsRqp7h88kzDMp7oO78DNU
/n9xH/JMBY+pfiBjQdwX9pPnPo3TU6f+Oec+9ssxGXuKVeYzx5CvqPYJX3LM
Mu6jDbRvGsw2qugr9aeYj/bS3/os+xf+9z6mz0vMN2mfYi9x3yjb3vrmUv5+
FG70jDvr+UCnTkdNk2DAAvdV1HKXZOMLRY0+vlPN9pD7sPsxv2AuGOM+6dpf
Lyfz1PK6NLJD1OE//SaH3Kd4vtevfp9zXRX3eXvmtBRy38tcx2FcibdgioLI
zdEi98F8x5n7PPuF3Kecift7K2aP9Ntq38q1hN+nZ78rNzcG+qQJ92ncE0eJ
FC+Gz6DVREg+z2+U9PekuC8YI3Cf4uGquI95Mu+5npajJ4uviXEfwlbGK6xF
vXNyp2CzK+O+zYOt3u3dL4zhiOGz2J2c+/rsJ79S5f63mhKPVwe4j/oMn19+
wz4jbIcoZD/m5Ixd/W/AvkLuU+4a1fYTI3ruU17DMn/Mslwc3nevjOOw3cVy
/ft9hjGELIf7YKRYnv1YTXkv+TTGvoN9YATVPxD3TWpu77nP+0vCVL5+HBzq
ua9sf4ol1W833Me44BiMBzEQx+UzTMd34j76TbZFz33Yw3jv+1u1ytvOvdKG
aLviG8V+9Km4T+zXdL/T5D54rSmzcd7K2eLZr6k67uvUqb7aZMAmMX7hMuZc
nvvw4cTmRw5OBMcNct8Z+624cOvMAPOhZyV+Dp77xH74kWJPIHbPr8tvsuaD
hT6KcJ80wHwz4r68PS9YzfZZqIr7BpRxh98W1ogxk9fC2sqADYj94L8pHpQf
qI7l1+c4XGP5K1ptvvtLvasrp43h8PvExra+drF39/Cm8Z9yfcqnkHVZhzl/
XtvEYr2u2H8w5ndnsXcHvRjz9e8p58f6JK310Cb3cZ60G/YrXCfHUyEXe/ar
w33yxZxEjHQV99Ee812wHJrK1XIlj0Us4z6xF+cFjylnRRn34f+LL6hydeKP
CXd57hP7qTaf9q02htzHcbAVyoeYY4j7PPsxn2UeS+5OOA27Tch9CB6k/X6Z
2E/cd+fh9+YLSptj3CffUS0r475htdtgtxj3pfEE/Tp8ZfkfQ+6rygvCPQbr
KWeH2I99wHbK8+G5b1rze67V+fd/byrzl/QxZ8Mk7lMeIHGf8pfIz9Fzn+x2
nvs4pjiRWErYzzOw1mNfk2TjJuK6yU4q9rPr/3jHuA9V1Wwvzmtmz7Kj2Ork
B9xWG2Y9V+jU6ThpHFtg3dwuA/FxmTTngvusFkMyfxD3wXCXv/8mr+VMzb2U
+Qa5DxHLZ8+g54P/dXneU/5Blnvu4/XizcG2+f549dJK78SFq8lcbdXk+yjG
fLPkPtQx3+jytdN9XXdfXx29rNwXxvmF3Hf3zmru10nM4OVkLofYF3N3/qtN
630v2fz84G6ae4bvaNv8xvrAM6gW90XYD3341W07b/YP44Q2w8J1nwD3xWy1
nM/8elqvvYr7fA0HPQ/pKy0PuY9tYSfmVsynz145keZeufhKlPuUJwWfS4vr
S67b50tvR7kvt7c9ThmM70LuQ7A1XK2af4yDGPdR1105J2l7jP2WdpZ7Pz68
YesqltFz36uv/Z3l97x/f8PEPXB9d7HAffotYAzLn1Pc51kstMOlsanx+bbY
r2ouLg7XPN4fCya2mMnLJ3vbm8t5XiNYDzagv9gu5D75+ZELpU6OE64x19zy
6mR9Moq4Xk3YbpiUh1bs9+zJrjGa5z5x22cf/Wepv6bYT+t6vqPv2V+b3Dcq
a3HNFKeoOgW8D3PasN5x4r5+Ddd66+sai3HbaMOs5wudOh1nNWFA+XpW7YtX
z334TnKfKl/Ku9e3C9zHXGdhc723vn/TWM8z30fffmSK+Xl67vO+nKGdj+PA
e9uH+9YWakWwXsh9McW4T+eoZUfB1id13De66nKfH+e+329t9+vjhbaxdJ6b
vr+5Pp9v7/0533r3ZO+9d18x/hPT5G0qqR3CcZmLEi/GfJ35+8LCmdxnE/aD
vbC7sQzmwBfUfDu3ruQcoZpxSHlffJtVW4/PxC/t761Zjs6tzYU8nq8N7gvH
L6yGTdAvL/jAqh9H4D5ft6Ft5vNjKcZ9KV/fMB9d1b0w9kuW6TqE7Cfu45xk
c+M7lpdxH8yFryV8jy8mshp8WS0+z32wgvJ7Mh7Yv8ZByH2q02e+oVlMXxn3
MefTcVlf3Cf2g/VoO9tz3PmtuQHu4zx5T3/J7unZ78K350zULf+v58V8neI+
GMNefxnkQtX74/VxScy46vOVzcW9LdFzH/N9rgO8J+5DMDmf5bvpuc/vm32p
Bnqd2ges3wb3EVdGe9rkvgF+yLjP2085nrivctvHOzn3wRSqe+e5D85qIway
CWuFNmSOD6PC8eK+sB6duJ7+nqbP5qjnaG2uwX3yCdV1arO9s54vdOr0omiY
LbAu98F2vFLHQf+fivngO/l1zm+u9OZurha4D6b75Lv51P5H/q/Vq9HYvrB2
X//5tVeoa6McMSH3EU84tD8y+6b38yzjvllfu05jjPmSvJzhnJ0aCvKl9blH
XmTuU7tj3MdcRsfErvTeO//WuzT/pvkMXp5/x2o48H2YpwTGMbZI2k07eQ+X
1eG+Qr/5fozUc6Bew9pe3Pd50tznbcGMFeo3Xtl4P++DkPvEfixnHfExEu+U
cR9cx5wRdqC2xw9Z/8ILIfuJ+1ifa4YdjpogZdyHv6lsesbpCZ/FuI+YQdp5
cPeG+TkqP4XnPsvl83wnbfffbmb5CEPum7c6gzAcz3rseKpXL/azGL9E5Pdk
vIbch51bPpmwGDGNnvsYk+IE8Z5e0fravPlcwq7KaVnFfdoP+8aewX2BD6Ly
1es62H2R/YaF3Ofr441St0BSHUTlR5Etv+l+xH2TZA3xDn01ajwe/e25T3Fk
6v8m3NeGLS30AfY5XBgXVddN3Kfx0kZbpnnuEteD3J3iPq5D22Np1vOGTp2O
tGrkYIlto3oNYbwb9q9wngTTMS/Ef5IYnpD7iOnjM4yX1tvrMx82P0RcH7/7
sF+M+/hNT+vy7RjzlXEfCrkvlttlGPdpbhmL7QvVcd/x1Tjcx2di0phfeb9H
y2eZ5TrhPWPw6ePN3sra8sB+je+y+gzGfGEbZDcqYb93VrZsPs59ZzahO0u5
vQh22N5cMtY78+5v7PV6Zm8Sh+1mOfR+uPuFbUMtiELejUdZbs7ktxyOgyEv
XXrH5jBtcR+i3b6+gpgWH8+on2fg+9qE+yaVxyVvW1BbPuQ+OEdMp/hD+W+W
cd+Dp2k+T3KtwHDmy0vM19KZAvd59mNdeMlzo/KthNyHXU25YnxNQasNn7Gf
uE/13cWInEPIfWm+1nT+y3v2H+M+xS7qvD33if04DjZN1iMXaMh9vMf255eL
/WAxPiPqvhOHGHKfMUjGhzc3bgxwH/sm/ySfUfhbwr58TktxH8voixj3IfUr
zI3Efm3Mi8V+9M+w+X5Y693XoqhilTYEl90dMZc/Evcpfo5l4r6m+5qUD6XP
hVMmrrvqINLvjJdx+H/U8xmnD7DVcg+I+7YyG6e4rw32u3142zTreUOnTkdW
MJ8YLrNdxdYb8O3UNlJWxwHmE/d5hdwn3078KFHIfXynuu3Y+TzzoU83Nnor
t7ds2dytQe4Lc7mEXKfP7Fv1/8Lnx9Mn+ybqxJf2SU3u63T8NCxn5oWFj41n
qCNOvkx87db318xOdvdw1eZV1EP7ae+GzTFfNO4T+4XcR7ygfOOwxWH7Q9Sd
Q75W4HIyR2euC18Qd6jjqjaBYgrLuM+zX+HaldQ+DPtm//5mb31v8P6u4r5x
81+FbSOPi/ko7Jwr+HCK/ULuC+tP6LqWcR/xboh8mYxH8Rb/fcW4j+UamxyL
fTM+xX2e/eAd2iI+sdhQa1uR+w7MP3XevuN6I9qntoj7aItyd7I+xwm5z/Kc
JuOG5z37U433kPt+/ev/ZrX8JM9+vIr1+C7kPvEh3xFnZ/zhuK+w39+l+/Ps
x37S+Lz0t8RzHzFlUsh9sXgF9S39OQnmqDPP5xrQBr88VouibWELhq/H4T5J
8YCI/zLKah8M64sw/rMN1eE+G4NJez37oXHZb5TxMOq24j5E7hqur7jv2aMd
09jte7bfcV+nTiUyXtO8VvlYVHt9IePBrAZ5Og/ayus0pPXJN4rcl82TZT/0
8yI4T/lS+j5hBwPxc8T1ick89+GDSc10crxgKxTzifvw6/TsFnIf8XswXBhv
7LmP4975OW0T7atiPl+nveO+F0/52HXMNy73Xbi2aNv86aOPe6fPvpluvziX
164jFg77YKENJceO+Xfm7BfhG3IScQz4gZoMMJy4Tmxl8VyZ/Y0679jl4DFY
kHNaWL6Yzu0TPkN8XlhdMKaDHdmWc22b+9RG7GH+nGC+H37ct5oVfnlZ/Ywq
7itwnLPHVfm1j8x9kfydnv3uPlo130b9NyBfWvnqlnEf4818Lw+W8vobqqMX
4z6ef8qbwvbKgR7jPiS/TuLzsAeKdcq478eH/RwdslN69sNOxr6wOxpXPohz
343db03kCxWbeu5TPJ/aBL+J28R+Wk4OU15D7oPlZJ/Gv/LNP/2fAveJBz3v
eTFvh/m0X899f3n7X622NoJh8I8U9+l3iOtAP5XVJEKz4D6uh7eriv2Yt8NR
dW2PTVmBsaEagGK/cc+FfucaePYbZb+T4r6muVjFfmw3yRjLtkUuINWq8DF9
bXGf5Wh6VjJv69TpZZbsdbk9I+W3P17ZyG134j7jO3iO78R9nvnEgwH3SbLl
ee7jP3r5emoOJOaD0RDMxzK2D7mPeD98ROEy9hVyH7lcqAOhnBOe+/ieuY1y
EubbBNzH/qN5R2UjzfruKOVt6dSOPPP5Zaeurpvwe4NhmDcgmO7DTz/Lc21i
lzs7956xnb5769KXti5z7+PMfWI/z33ECWLnkC0T3sN/kvylHE+8B+d5H0H5
NfKe49EH3JNwtHw+Pfd59qvkPtdvYZyehI2Q3C7sJ8Z9MfZrZWwFdeQR58V5
Ytes4j7Zfbh+uoYsZz3FKXv2g/voO/jKbIhPNrLnY7+ec8h9zNEVLwdTyt4W
4z4xldgv5D7Pfqq5Df9xrBj3cSzW0bmQu4U8nZ77LOdPxpGb++sD3IfgLnK/
nPpyqff6a38f5T7Pbawv9oP7qDGBHY9tsceF3EfbLfdKsh7/6Xju4zu/b/Yh
9uP+5zr8Evwvqbi9Ku6b1Txd7Kd2qHY43Dcst4rObRTuQ/QbbBCrd9iYBxLu
Q7wn/w15XdrgyTakfJ68Z3zIrl61DXY+bYfoo6NyPjFRly/Nx/N6Xqeibe3f
SwX7zXoO0anTkdLVnb5tL58zOu7L6pPldkDPfQtFthmwAUbqtov74CnuzUeP
Dwa4T+2ADWE7z3wIXoTDWIdaDiH3KV4vz9MZcB/f7d5NfU2ZA/Ma5ptSO73K
6k2on4ZxX8eCx1NhfJjGqZhvXO5jfkn9OuxksgOyToHvHH8MKMgpKhasyvMi
9mMex7wznZNfyf0orV5DZnPDlxPGIA7sbDIPJp8MrIrgQ/PVS5hPnyfBfaof
oTYyD4LVOC9YjWcFuRVDbrNnVwPu89c3X29S9fqcHdkvF/dZPcHkWYbt2GLc
Hq0aqw/jPtV2IEcj3AW7kCuFcVrGfYqdS5+bLr/g8+2c/cR9sinCOWK9Mu6T
nZbaCVXch/0Rmwu5S/DxlJ0vZD/ei+3MvzjgvoPk3JGP3Qu5D/ag76gH/tap
fyq0H3Hed+73fwtC7nvtxP82abuQ+/K++6XPLKFNkDZpXu+5j/cso//K/DxR
k7z4bYlxELYL7uP/IHLChvlgQp5F9P0oeWM+/uD3rXKfl7iPOLOjwErwG/2q
mGmxHzZv8g2hcBu4Tz6e2PvEfdIs6jnghxoe1/ISfXkm5z7OtQ27XnS8Pts3
7uP9rOcQnTodBeW+mrLvlcxrQu7zDBdyXy6xZDbnjOWK8dwn5vNt41Xch22P
dbRczIfgPn5/iPMT03nuK3smhNzHsUKbY21l3BfW6OM7z3od9x1PxbgPXzy4
hbkNNQnw10SnvlzJuU7cxTweO5jVK0/W/+7bL7Pf4j2ra5D+N5Haco4r9x38
vGzrYhtUbW/Vc9M+mPvDfaoNiPBlhA94VZ04mA/Bwcz1ZYMUHzbhvpg9rW6e
lpARJzK2Im387Ktv8rrxZdzna7Z7FqZPy7gPNqF/f8hywDDmuD7Y7sR9nv2w
WcE6yk3CMvKwxLiP7agJ4blGzBdyH7ll5KPJsZnPivvEfuI71aEv477tw61k
brdpUvs992kcsq04RNwn9ovVU/fcRz/48wq5r3Lu+0s/J6j8SD335fyUnCef
PfcpHjLGfrPgEc996k/sNZ775GNsfu3Zs4Vt+c7iLd1/AU2ODffBZU1rwdUV
7Ddt7hOTef9YuAgGRT7GU7zPvTJsv/LzZHt8P8V94bEmJey/xnOP+7ma6F/Z
I+G+ve0ly+MySe7ztTVnPYfo1Gmmkk9iwH1Ntq99DM9+wTqe3Tz3qV4f4jdv
ff/6APcxx+N1bn0rfy567htFZdwHn+LvCSdWnbPvS898A/Xau9i/Y6Xcx9Pn
6rxyM8p9MN+43Id/G7ZBX2ec/ajuexhLJr7j+5jUBvvvxm1nteE2Uh9rjk/e
EF+bQUzGOZJrE+Hjee7iG713z/7JtHxrLeeNSXGfty/IJsj+iJ3kHGA/WIjj
hD6eYuXoNY1wX8G+N2HeC8eXXybuE8fYXPf5D3k8H/3nWS/kPvqO/qf+OT55
yutSxn3UtkP4LoplYJQy7oN55C9puS5dXh+xH1wjwYd5bswrbwxwH6x34cM/
GJsqZ2iM+yxv0OPVvPYA8uyXMt+NAl+F3CcOkQ8sXB3jvlBiP86Dc5dtZZgd
JeQ+bPve7mc5Ux33Sb5mOdfUfGGT69vmvL3pvvS/C/8neO6zHCnJOGM5EvuJ
87iHxX3Iatr/Lc0tpX2T3/XJEJ67dOZEzn7jnntYB0I2v7nTJ0wxm1ob4piK
HYWP+B0gNk+5XZF8POnfkPk999HHvg9DifuMgQ5Wc+7D/ixf4jbPjXtCeVrE
fYo5FPdh4+OzuG8iffxsv3fn/p5J7DfreUSnTjOVYzLFpk3iOAPcFxzHc184
t/LMh1iGbye19GCpkPu++3HBcnzWe+6WsyExf788uW3HYk7MMTz30a7S840w
dIz5Ou47Xirjvqsrp+13mZybcB42Orht8fqiiXVYjo8nLJj61PXrmvOe3+w0
z+EVm7MyD2e+R6ycZ5Kjxn34aVIrD/ZiPnfv6dc5i8B1y9vzeRwe67Cc78V8
vGoZx8D/EF5kbjy3/GaeM0I1AcR+Tbgvls9l4LrGOG8W3OdsybSbHKrY+Mq4
T3yHXRab7B9+/z/SOLZT/5hzc4z7lLvE5zHR5xj38RnGkb+k7Fye+8R+8Ela
M/6GsZHi6kLuU75M7Uc2vpD7FFPIPJd7hz4Q94n9jC+Sa8//CdxL3I8h9/Vr
pO8W5rme+/ycvOy3ge3h1Rj3Na175tlPdrFh+zgK3IfEffpMnKJi+xhr9CnX
Aon7VONTjBLjPvs8hOfIfQOTjZOzUtfL8n1E+lzsN8lahBoDsBjcrJycYj9v
c1SsrmIqm3CfF8fCDigbo9ivzRwwnvvwd+YcxX1iPnHfpPrW+jerA+jZfdbz
iE6dZqk0Rm9nwGdTCn0uEaxFvBv+kOF3LCOuzjOR4gNt7nlpxV6b8CV5NcnL
cm3nlh1bzCfus2MspnlWqO1XxX1lNRv8s5NjqU6D5z5Yz69bxX2mq8U69QPM
1/l5HjvFar9hy0tteCtR7lNcX5vc5+1/vi1hzhHf9sJ2Jf6esNPy9lbuT+lz
uyjejrk4vpywmfJwTpr7Qp9T5XXhMwz0wdd7xnxpvemlgWdTY+4bMy/nyOOr
hPt0vsyXxUCpjWWjd5jVMIhxn1jsjVf/rsB1MdbTe/J7frP6kfEZ4jrANjHu
Y/6GWP/K5ZOWS1M+iSH3sR/tg23FgZ79YDxe8eOjHVxP8tCE3IfYN7UmWMb7
GPfBtxzb2/ZC7ovFnfk5eWy5575h23CcNAdqyRw8mRNz/thG63LfNMU10H8O
ng25xjBcyIuwCzlSuAae+/Q97z33eelawH1l7VH+FXEfGqe/hm0L+4n7mtZ2
qCNqBZL7BxZDag82Mdn8wjkK3Be2neU8K7kP6h5b7MerjsV79fE4gvtUT0Lc
p+/EfRwLwWVt9ScxfN6nk/dwvY+FnPU8olOnWSnP31ISlwfz+Rp6qlvguU+1
93QvxbjPlDCQMV/GfcoFk6uinXCc5z7lZJnfKOZ+EfcVn+l7+bI6fp/iPn7P
qO3uvwu5zy+nPwp5XpTX0+XI6bjv+GsY9527fNZ8PK8tvGd+ibAeeTl/vrtm
/pwI9vvmq8/ttxWfUPKVKC+jGJBl1IGgxjkMSc6YgXYEMX3iuTyWr2Xukz8m
dj7Z38QjPseK6viltsLFQsxZWs9i2QSnyGYFD5J/k/k0nIudCub1eV5G5T7f
L7Wvc03ui603DjOGfp60mRw5Ol/PfuK+3/7mVwUpxk68FeM+bH6wGv/z09da
72zCZjHu4zmn3Iv4hyL4jDl3jPvEWVxD/r9gfXGfZz98TMkro3yXsvuF3Kd6
Eek4WDI7Xsh9Oj/5qcJlyLOf5aPJmE+2vSruK+OE9J74PFe4jmc8+dD5Ghle
4r6jkEPES3UYkdhP38Fs4j5E7QPqrPHquS+2X5aX2Rat1mTAl6HEJHADPIaN
sW1ODvfHOCc3yijch39lbDn74xzgPtWJp75NU3ux3nMvNeU+L/hLfp/KbzqO
/Q9urVPHsS3uYx8wns/bSVyuuA9p3VnPIzp1mpVUQ73se+oj8Nso5uP+QfIH
ww7muQ/5+jWF/WX+pPlnz3xSxAYI8yF+W+DQGPdJmmMVn4sp98FwD59+O+QZ
uld4H3Kfz//pFeW+rD15fYuA+2Z97Ts1V8zHk3k59jteZdMj1q2M+1RffSLc
F6nToDyjYp5CzpeSbWA/atepZhqsJp/PaXOfPw779bGAzEXJDXrpZtpmau2R
v5K8j6rf7q9bXe6ry3JtM59va2F8rayZDUscTj/CtvzPgG2vivvoC4s5PVw1
MS8nZ2UZ96kuHnNz+cD5en6e/eAz5VI0X7mnt3Jfsxj3KSaPa0y78Psr4z44
iDYa3yVifHnuo53ydeN8vO1S3Mf+YEzen3rr/9pvWYz76vhmikP0++bZjzaF
6+s3UHPNsC+9/DmH7EcbPW9JF749Z8emH8edL1eJsaD8kVxLLeca0/eMHRjd
c9/Q+XnWDzG2E/eZv0Okr9L4wdeNwzz3tX3e4bUahfuwE9JGuC/GfuwvrK8A
96FR2qycuOOct4/zg9fG5T6d+yTspAPXLPPnZG66e7fPfT4nkzTruUSnTlNX
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
UXTpwn+aL6PnPnjPfgsSvkOsL+5TTF0YGy7xnec+a6d8VRvY/KgVGHIfPEcu
GqQ8np77dL6q1xdynbcRPqt4FsF7yOYsxpjpuiH3Fa5nEHN0HPJNvOwK8+tr
2ajcl/rA7RXyCKV+ZnvZ/w39ug4ah9wvzOV9vQdyOtKGgedF6F8c1n1wy8Nz
hf0YvxyDfCxwBKx2deV0XhMNnoPR8OUUq8Ftqh8OYyj3JnNriytL9kMd9rMX
X7Ea1cZyGfeJ/Ublvg+/um11IOpct6OuKu4T+62vXbT+5T8A+Pry+dfMpxa7
IH1Xyn0/p+yH7xzXg9p4jEeYqZT7stg9eE+5TpjnxrgPZpO9kOOoFmCM+/gO
31Hm+ZYLI3mV/6fYD+5j/OCXqRyW1BgscN/z1N7IMcnxCXOq/Z77ZG+0/1iy
Og4x7kPKp699iPuIITLftieDub88Fw6zDcaWcz7k5pHKuK9KbcdRWRyl477w
+7r5HpvM+xHX33PfNOoADJO4jtw14j7aJYYT+9XZF9uz7rT9IGOSn4pyxsoG
yPUW6+tcGQdHgcG9iN3jHMR9dbaZ9TO+U6dSFWx8gxwU8kAhZidUiW8hOTOZ
4ymXSyj+W/TMh64uvNv73W//u8lzH7+hqreHDSDGfZ4vPfedXV0tnHfdPoL5
tD9+z8V5IfehPLena4PnvjQ+ZsO4UblsQu6L2S7FfJ77eMV2ii/swDUSg5ec
Z8eDR09l/EDdBriPenyas4rfxGbMvZkj3n20mufGFNd55mud+2L1/cbkPrHf
uNzn7S2+Lrvqw2PD4pXz5TfdclgkjJH7hJLf1LX/ReS+UMRhwn1//MP/quQ+
5m+MIWx58gXVGCrjPl0P1oWbtg+3cvuePfcC7uN/DubjcCLryK4n7vPsx3iB
+/idsDrwV94whdzHMfbvbVr75aOKrS/kPu/jid1BfqYh92kOK18O1W0X9/F9
npcmyyHpn+veZgD3UQeswH2ZjcvXN9TnGAMW5qol8X+e/YaxzjRyZSiH5TTn
8Z77qNegeghHhf3CPCyjtItrJ+7zcXGzEv3txzHCZomtL5bb5ShJ3Hf2m31T
nRrws37Gd+oUCnteoebCfLWPksXGfZFx4FVXPyD7LO4Tb3hm8NzHK3laVD/B
nmkJ9+HHyX/M4jwxHzr98Ss5uyEx38LOaZOW9Z93/X2LEVmH3+v8nLI4v2H+
nmonc2kxnziPZXv3tozjbF6guMKA2RRrWMZ9of9nbB9m77v6mp2DcseVcZ9d
pxHqOjRhwY4HJ3BPRvgB5huX+1iHXCSyByJf50zrKGaQmubMh8mFgh2HZQW/
TZfDJRaPWFjPM2G2D/PtdL6eHJ/5NPc08WUIxoPrFB+m+l72/g6ssWyvfCZf
CzF8cB+8ltpxrgzk5hyX+9TusF67ctvMevw0Hm9DuI9+oa+4NtRugAN5TrFc
3OfZT9z3w90vjLmYT5MLhXXIbxJyn9iPMYYtTDYxi08lFrCE+1SXgTYQ/wdf
xrjP8l9mdkTldolxH/Y+zoH1laflzs+7A9y39Ner9jvCNmzrn89iv3Dezavn
PtVxD9dB4j7ZAekb+VuG3PeLxQ4cDHwf268XNlDOiRqG/J8S8kToN5OzZdaP
ZXPc8NzrStw1Ke4r6wfud6638oXQhiq/yWmJseb9HMc9d9n8RuG+NplfeXbD
/yvEfWjWfV/ZF1m9dp5xcF+d9Wf9fO/UKRTcl3PaF3sD3Aeb4aOpz+K+XI75
7P1CVktgYafAfSEneO7Db/Lxg+9NIfdJ33//SYH5YhLbxe4/z3w+vs/UkPvY
F7z24FHKeVHuC3w5C8z3/K9mT2E/zB1oEzbMMubj94iaFXPnXh3gvtD/x18r
u54t1vPreHBK92SE+6g/x///iPFm9rgHt3L7nWe7NKdLGkuKzUX2B+VgfPp4
86XgPnK0EIsGCyPOk3vU6sUcrNt2LOMz53jr8KblE9V3xBZSF1Bt9Ofn267z
PLbcF/uf4avbOdeVcZ/se8T+wWS+djrjpoz7fD04mA+WM7/IEu7D1w3uky9n
WI/Pc5/P30kbZA8U+4n7FGfIe9rE81Tc59kPJsIeBiOpTnjIfd6/c9i8+Ykx
cZz7wu2510Puk4r1f8rZL9wvfU2/h9zHfxx+/2XxErbPCu6zc3S/Y8qxM2x+
nHPX+RM295+ET2Ls+mh8ED9G/hTyXs6a++gH8R4xfW3YHsfhvnAc+ffktGyy
H9n3vJ1c+zvqtr68vc9SW9/a7VTD1p31871Tp1B5vYUS/yRx3wdf71u9A35v
KveZMJ+4rxATGGEBPi+uf5tzHzUalEMuZD+4DzYqYz5+g4f91+i3H2j3/Fa0
DzhvxPbY98SWnvs0V0A+h2h4fNVqKOM+5bNh3xwLH1f9Hor7Pj77inEf58A+
/O8/12mA+2rYcMceQw15sGPCIf0Zy+WZcZ94bVzu0zpmg8hiAcnnQg0HfDmp
Dch7Xs99+cFgPpeA5cLx4HOb6HNoUyKWjHZsJvf/2t5m3nbaq/kYdjheYQhj
vMynD87Aloldk/uOc7J1E16DUSbBfao3EV6v/NyOIfPp+pRxn8WIPk3r0sHT
b735D+brqRidMu6DLSzHTjKPZw5/+DCN5dNzMsZ97E85Pu2/iOcp18Fbnv1Y
lxqAzB95hdfI2XLt2vsF7vN2PHK1KL+n5p4h90lso/ESch/vVePB6mVm9Riq
uM9L3Oc5TXX9Qkarm5dT65Vxn19X3IctVHZM2M9zX5V9qVB7ombtB4SNnePi
a1u2Ls+fSXJfKMV2Mh49982aKxD/lTCm2+I+8mXWqU/B+Oceqrr2/jPc15T9
uGdC/2jad1y4b/9eqjr2PjTr53unTl6+JkPse2xciLg2z33PzMdm11S5/8j8
nn3BJpr/w33y5wyZD5G/UvdPGfexXDF+WjeWh8xvTz2/QtsC7qNtu3f3czuf
/DphNWLr8O/kmPQFv/8F5suU+jP0GdBzH+vL34n99mtAFLmPvKW8wnqmCu67
8/PgM2Ya3DdsDHRM2LDPSmo4UK99a3Mh97VKaz0X87vEcr38mM2rmeekvnir
du/6OL+jxn1iv7rc9yCZp28nc7f9+5u2L/IFM2eH+9A7K32/TPlo6jO2u1Tp
sg++TrlneTvOeLFlx5n77BoFuVY/+Pq7/nMs4D6xH2zNdaHvuU7YZYkBJOYy
xn1iP+U9gauYY3JNVcs95D44gbyG7IfYPHFcjPvI02nxe4nYL2OkjPtgPj6r
XeTljHEfOS/FfZLYT9ynmD98Qp9lXBf+9oQ1EDz3hfPqpmxVp9aDXmmr6r+L
/TgXXsldSh+G3CempZ+atg3Rz577yrbj+UNulbr5SoaJ/q1qo+c+OEvxfbPm
CiTu0/++bexT7Ff2vWJWq9iv7rirUphHU9yn/whm3fd19Oa1PcvlWWfdWT/b
O3XyGsYEYj79p0ONPNUkYN7I/DGvnXdYz54t7ru+umi8B+N57sPPE732x/8z
cP/ItgYTKU+LmA/xHevRHv+bGuZ3YfsB7nOxitY3jvu0L3hMxw+5j/6A3fjv
VvllcgbMeNC3B3nmQz7v5yfn/2j2Pc99nnVtrvtoo1DvPeS+PCfrEc01MQoT
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
ct1V60NrWUsWajjg61n7D1ufzAabWGOO+2PmDVmvf0003Jf1zAnuG3Ec65C3
peQ+/SqzyH1sY47PiXX+u+FM2Ic8NDXmY//YE2vcF9LWoii5DzG3J8tK7uOY
zIuYxydzH307/sHm3qvvnN57a+Odzpcnc1+u3+B45zoV0+yfJfPFOW5z96x6
rh2lwHs1Ke09y9KhD4MRa9z38otPRw0/dGk4js9lcR/6xUzuS8wjK7le9K+t
Mcg2fLIen3Ddha3zce3JA/TXdcgjgz0uxyV+294/0Kn3w32y30G5r/RrHeLc
A53rx2AedjU5EvtxvfDeBL9a7cvE73E+hrjvu+8/i3OGn65zDX2T2LuS+2Q/
zuFnX77X2XH5vHT1nQnuk/3MwQkzwJQfbTV+eiX3IWzDfuFC7Ivm8Cy573f/
8fddLQfm3ldffVzlPvPGkKuG/Cc17su16Y2P6z+ndmN97JHmNWXfmfvgrMhn
xHG2uUkz98mT1rZfRGct7Ysl9+HD6mfJfYvkc5lX5/a79dtkPz6J9SvHr8z9
eBDuQzi2zH0xT9v3BexL7iP+2TwrjsFQ7B12K7YNW/GJxpZFO/P2iXkFBzEG
y+I+Y2CJo1vW+VuWcC3Jfatgv0W5T7GOA/k919y3lsdZ1A1mcV/DNVf3tm5e
Tcx3vWfPYp3u2mn1T54h4W/V6pm3vrwx9kdLdezkPmv2mcezxn3m98zcd/LN
/91bx/yjcl/ZjjY7uE+bI+t0xy3zJU6C16xZKPN5nGzLMv4rue/anSt7F25c
DdFntuS+k6dP7m28/Vz//lNwnzUHI2awUsc9C+di4lz/yLgPXXVe7lvkejks
GdznnNx36vV/C3878mwg1C5gGbJ54Y2OB91GrqLuASwGkyEyW7ZhwTjHT7wQ
XFbauLQ9+p1YQOr+IfNy3ycXz8S21L3j8+QnN9Mcn6xL8dnnu3tXbl3taoV/
8eCjjgO518B85TnOsYldn8t6gn4fslsuwH2rmCvLknm5z9i78zsnQl547h9S
Ds469xFHhg0POx2CXut79iHuCz5q48rMCaO9ruQ+dPbMh+aNqXGfeUPfPnMs
5Pnn/6HKfXAe7IcNEJ0foZ3Mfejk2sbQ682VL/tFTfDvdzpGi5yYo2OG+zL7
cZ/nO+zHWMt9sh/j0uRWG7HGo+sT3FerrdZ/rkzWh5D74AD9ZvGxzNzHGDC+
+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
BkPpJ0m8ITUbSj579M31EPap3QP9mv8+eO/3E7bMjrla/uJY4bbOx3OkY97+
uqljPd5Hk7Mj15/PAotO1HL4kXNfLQdpNy6V4y6578L1d5tYnNE8sV7k00/9
TQg+fkPcx/8wQY4Pg0V8H17jPnwdrQPP/zDXvYebVe5DX0fgN+5/zH3meo37
tPGxPjyV83dm7uvyYbY8xxyucR81/hD2y/rsu+Q+9o0Qj8h++Cy5T9unbFdy
nzlqjB8suY88OeY1ifwxBff5bJC5OaYe94321fSrGR/Zj/8Yd9dzTOQ+hPOJ
7Q+bGSL7ca7DjnZ3kqc4LnxjjXN0LixDz5f7EPPEZO7DlxSBhTP3Lbse/aIi
+61q/0NC7Oh+uI/xL22YML32NbgPgfVoX+5j3loHw/lwkDw3bCv3abfM3DfU
/6H/rl95t/PfzIJvJ9yHdDl0Ws5c9b1/LWupcZ9iPXPr25knhDkMi8Ew2JNk
vv3a+2gLefCwvN4Wa4/nWuY+bX98/9/PPTXBfbPGpacTtjF9eZ3G97Xpe26v
2/bMpJ1hFvchJfdhy6itv2/uk0tPb3f5XFc9D9cyMA9zXpdUS0959vylvefe
eb2LzSNeL/t1Zt/O8jf2Oex483CfzPdD576S9Ybqruc4xieR/WZxX16XWu1I
3rbkvsx+sAU1/OC7n//sr7uab4jcJ/vJfceO/V3Dc+QfetS8c+ecwmKI7Je5
T7aS+fR1rHEfej02J/hCW2BjZ+xzH4yDTQrmM84LDiq5j+2jFv1oea5xkLlv
98srUX/PT8R6E3JfMF2rV7IMYf+Z++gf3+l/9ueU+6Lue5uDBV6A+2Q/xov1
Ir730aQtQ99ba2JY60/2Y7/0l37G9dtynxxb2gg9z7Cf9f5kfLnPOEA4nD5k
7uOTc814Lsu+I3fIfeaxQfCplPvys5W8pKviPuYrts5lHf+yhDkh9yHE/+Ux
qvmmMu4cS+Y+2tCWK/dxvmEwuY+2ZTS5z3UX4T7fR7gNn5x3mQ+ZZ/7UllPb
Qe5D+E38H/8Z0/f6h3/uuI88L6yz6nv/Wn7ckv0S83IYBj9PfBJ73PdoJ/Ss
Jv/mmPvmqUcwTXh+WJ8vL8d3dKjWek24nnMemMx8yPP/2dzbT1w6O6jLdbne
k69mLX8nuU099pIhQ4/SDzQto6YCAsfNitdrfE02g+lq3Gc8IP9/9+10H/hb
X92scmnHfU+gXvukSa4vnpcvyn05vk/uo122peafTBbrtrUfqLuu/x4MiI0Q
e2M552nLmuroquRdKZmT/yJf0TeXok4728CMuc4CvqQcFwJvvHnxcjw7S1sm
eaHIk009uZf/eGPvpT/djBwuCPcu6rZTA6LXzzX31eOVC5tnXr/kPuTM9sXI
m1MyNhw4jfs4/+T9wQ6I3icT1LgP0e/y9XNPdzk3YC55Q+7L9RCixsOIUWAM
WIz89HJfZr/Pvnyvi/njt36NcFdmv3jH0OqP2sXkvsx+cNaDNoaPZ1rmPb9z
PJ+nWu2Z+xBYK3LCfHOpYym5T/bjGFk3WOzRTo/7wvfy4bXgGewnUUsgcZ9j
2xx3w3eZ+zJvus/MffaBPpXch383fqPyXuY+z7/nu+Q+hLHP3Lc0Xknjq0+n
7McyznGunYHQl6PMJZlF7kNWsf/BcRzNFc4LnAzTyH1wHDxdch+Mlrkv7M3U
amm5zzg62pL7mK9I5j7bk/uMh52333If7RvPl/c1a9uh/+Q+4vzgPbmPucWy
zH1vfbK75r61PBYi95X16TL3/eenN0Ku393tcd+1O1fi/4YND3Y/4fkR11HR
TuY+3tnPY//L3Pevv/6HvRMXr+4df/utvV+/8U53T5/gvtb3sVfjCx5ua3vV
xg7u+z/fN/cExqcbU9+fa/Mr6qQvwnxyHz6q5PXkE51A7rOG1jTuk/l63Nfm
FrVuY9WHdS2PlWTucz7p8xl8NOI2GfDWnUYfR08zlk8WzByG/x05NvHhg7X4
/qRxX++6LPimxnwTvwfy6vwQpceyU8T1w5d4NP61fEdwX4394I/mfj6uE0ne
VuI5kSHuMyYs6+h8n8Z9Oe6M9dDVa9wXuUZbGxb/k2cErqtxH/YshN+yS437
4DPaMrcoumzJfTt3rnZy++vLnY9n5j79UmnDmMWS+9S5o827k9zneJl/peS+
0ieTdTL3ZR037OaJ+4jl0x/UuEK5jzHg+Lt4xsR9+PryCc8jmftyzk/EvD6c
P/pdq9V+mKJd1/ohzA25b1XsJ0utYt81Md4wc5/cNo37WGYMnNzn/8xNuS9v
J/cN9YVzsgj3Zdteztcyjfuc07PO/+3rH3bcd+njkyFyn+vIfeevNbLq58Ba
1hL+i5V8norMB+sh+HRm7qNOQM1Wt4jcvtdeh1P4MXOffZnVLn3P3BeMW/Np
lfu0gbU5OGvcRyzjdxHPfq3KfTGmkTfl2rjeQ9IlqXs4D/cRA4++4++S+/i/
5rdTE2pGwKk9/qtwX847upajFRlu5vW6BO5TJ69xnzGCQz6Tchz5WMx/ab4X
67W7HtxnHFK8L2rrLViHQT9N9L6wO6Z8K2We1XzM8t0i47vmvsVz+U7jPgTW
Ns6Nd1Sc5xr3yX55HjXbfBTv8+E5uS+zn5+sy30P3zvWxZ6obavkPuu50xfq
GWBTQmQ/uU8+hPGYl7Yn+2Xui/onI8lxdCX3wbDYFfHB7GL4RhxWcl/UMBzt
P9eHy9zHd/Zv3fNOD03cZ92MnOcTyXk36Yu6bo37tJXm7Ztl213NC0X2c2wy
92X2i/vNSI/mHMp0sp/rkZ9V7pP9yAnK/pkLcN8y2G9Ilxjy2Yv6BIn7Mk8f
tTCGstRQ3pCjEN4bGGuJWONAH9lxvZZb4Z+Z87DAPlwTiOxXO8799It5KofK
jLW2ZDf2z3VQ5myZtf95YjzhPs8Rvp5wn/Ue9PlU/vjZmvvWsnrp2GRKDgM4
BWbA/ifzNX6e1yJOjVwvizAfz5Rsn5L5hq+9mxM5ROdlvvJYMvc1776vjus0
lNzXjkc5JnIf+9DeOTGuMpS5M5MtbRr3vfHpG1XuMwd25MBr412I69sP91Xn
QaXexFqOVuatIVFyn2wE88Fv5HiR8Xq2u+TfSd0+hDye1M8zNz92N3gOu0zp
K1q28bhyX8l0PTtpipHkmDkG6xUOMeCT5Oc5b64axpa67KVNt5Qa91lPJtfz
q70/yNyHri0HwH/G03n/KrkPgRXgKPbf6XeRk7PPfUhj22vsZGxz7i9ne9yX
2Q9uY13YxRg1uU/2g9vok5xFHJbcl9kv66kwjzatzH60gZ2M/mv7s08l+xkb
K4/JfllP7XT2ti/ouy7PYyoLljY/uW9c77DhTcfHfiHwoHlQrVWoDYVj0hc0
8yHcxzJ4z3OeuQ/77DwxV7Nkv9zHeYQ7V8198BQ1NZBlcR/zdJ6a8DCntcll
P/pgPk/Zr9wO7qMOiXNP9lvauHx7q1dXT/azzp8cl48v6lC2jGqM4KL7ncV+
8F15jkrmQ9bct5bHSTr2mcF9fOJbxbMc5pP7WEYOmOHrpo0nap8nchPLsCVa
w3xou35dsvmvV9ruHWeZqyXX5iPH5dlkCyvsdArcB+sxLlXma31ns79nuc7b
fz4T3EY+UdkO5pP78N3UvicHZuaT+8znMs+4cK7Ib4p+dmbnVL/Pcl/OQ/oY
zMsfkwzVFCzrCmZ2gVVkvkW5D+ZblPtyLYgLF070crvIfuR84T/yxBDrRa2G
qNew8Wpsq8567+5WcCK816sVn+LubL9WP97lHdcVbLcI9+X9T1wXK+S+Xn7R
JEMxiTPbK/w69Illfvnd5UPcR0xz1Pe5udv53jrHzBtrbn/Zz3w8pb05359k
v8x92dcKjpI3yO9S4z72F5wxYimE+g0wYo37YDPj+PC71Oey5D6fWbIRc7fG
fdpAtEHmd3Jyn/1Uj2S9kvs6m2Phw+n69OXzlqFKH7RsJ9UnD/245D45jPYi
t2mljhvbGL/X477RNvSTcSu5L9eDKLnPdj1Hmfusk8i5Xxb3LSry0OPAfQp8
BavgP2xO1oO2yVyF65CSyaixA6v5P99hqeyrOVRXkHblPqQ6xt8szlxZzKEH
+5Fnl/GQ/ein9kfEmgllfb5ViT6exz9ec99aHg/p88+kzg/jyH9yH/ygv+O8
3FdbLvflOvC5fl/EArV13hdlv5L74ljLOnxFnJ+f83Bf/j/bTjP3mR8mt1Fy
X67LbkxfyX01mYf7jJ0sue/EJ5uT+WjW3HeoMs2mdxDuw7dTgWfIz2IMXc3W
QlydNSBKhjBf/2unjkcMFrFYkTNw1B4+oPqBPhbcV+Qi6ex2QzFs7fasg08r
x3Hl9rkQcpHCzBy/65X13Q9TenXjB3hvGvfNqjU/5K9act80317u8dO4r7Tt
Zf/iadyHbmaMHzpc5iO5L7Mf3IcdhNru2s/CHtdyh+w35r4ml4vrKrKf3Pf5
1x/FdxiUvljLoeQ+OOaL+03OUOezeSsy97Ed63ocXb7MxH2MS+NvqZ2tz336
lhrXZ39r3IfIy5n73Je16jP38ekzov9s3u3i+hxXWK7HfV9+2BxfGzuZ4x+j
3ns6dvva1T8cHWPO8SL3Uf9vGXyzHwnuO/fqgeoELFvkPsS6BvNuW9qpzKmS
hbjG46d/GTlt4L6QM8f2/rT9RtQ3mCf3CWKt9anje0DuQzh+xgTuy7U15T5E
G98qfWSzyKtwH79XrYesZS1KjfnUI+Q+hHg+RO5jHsNXiHw2vu8M80heD5/M
zH15PXxIM/ctcr3Bo73jyXxrbNtQXs82z8vc42ecZFHTr8Z95vW0hnvJffbf
WL6h+D8Elqs9t5GIyWjtsmVbNe7Lx1Hj/7UcTPbLfUqvvlor1DWntgLMtSj3
1fwb5+E+ZGOr2R5mYzt5Jft+Bsv8ocnTQh9hK9iP/fM7M5ZSO8aZUjLRAtwn
+z2u3Nfzpa3ZNvPxz+C+zOnOx9r8mMZ+n4cuf7PLEVnzAa5xH++3ctxfZr8h
7tN3EJEhsO8NcR9xfOis+JiRCx6GoIZ5jftYl/+sIQ8DZu6T/X5z7Ccx/2Ee
+pC5L7Mf/ZbbvP/KcvadNuSy5v+xbVT2656P7bqyl+yHr6s1Bmt6NOvRHnkx
4AR5j//kPnkPG54MWHuG5P3LffqiInBfZj/Gib4xHnKqx85+OXdyX2a/G9ff
i3EmnpJzJvtxbkpf18MQ4uisT2CuyGWxXz7fBxGYdF7uy3ZfbKdsAyNl7uN/
5m7mPnInffDBiz3uO+yxn/fYeX9hfk/YbtbxlzHCq5a3/9zkISt10rWsZZXS
6ftn+u/Yze3JMplPkRsy82U+y5zm8628HswXWmM6mM82F73OvMYm8nbKfFPe
jwfzGZu3cW3MckM5YYzhq61ztj+uiMwn92FH3bp5NXLQOEbTmE+R+erva292
PKlvaK3+3+mdM/V5sOa+A0uOv6vZ8Kb9vx/uMzeL+nctNws+nBe2zgevwTgI
23TxdSOR/RDa5v/fv3Fs74Xnf7H3/PF/D2Ed2BHf0HzMh8J92a5e1Jyb5zzI
S/l31Lz4ZCtk58q5eN9yefvtLrdot68lc1+XU7PGbwXDzs19OU/nAP+VNlTn
57K4z1py3Gf4RMePnJr3Nrv8JUPcB3/94z/+XyHw08MUvy37Ze7buXI+dHRi
9/R/Q1+tcZ/1uGW5U6efbqTCfeZyybUHatwHUyHaE9CjS+6TjeCdz1uuKrlP
m521EPLzsVu3taM5hiX3wVb4W+Z7f+Y+xNyHbGOtDHkP3T/G9/5m9fnMf+YZ
5f/Mffi7WlM+fG4T97Ev/tf+mbkv2yoZC7kPIQcMY4U98Si4L3IOnRhz37Lb
Xyb3WX9wyNdy/Ozf7eqgZ+4rbWScM3WDkxePddx3mOM9TTjneaw4Zux4mfuY
17OOvxyLVbMfOafhPoTfq9ZL1rIWJXNf1hsy92UpawMg8F//mmu4ZlZ9uSGB
JfdbC756fZ2dP4ati3crue/stV7OlgnuK9tJ9sW8HNaDnf1ecl/NRlcK/8N+
1FecvN/d7NkRa1Ljvu4Y1/6eB5Zlcx/nJP+OPJ4j9oL95D9kldyn3Sp/z/vB
9/Pe/Uvh++k+Oh/PzFu5jvghcZ/sN8R95PJddi7PmdyXOLM81iHfznm5z//z
8nsP5uc+dPbGdjTp0zmN+4Zyu8zivpq+Fj5ciftkP2wZUU/s+8aXONvtcp5+
mA825PfLb/5z5zthrJ/sJ/cZe0ab2h5hnsx97J//4ZUul+fXmxPcR04Uttdv
ssZ9Te2U5OdacJ/5PxFjFjP35bhIc+Zk7ot+tDZAa8jXuE/fzMx9Ube93Zax
KrlPhrCfmfvG+Z12J7gvx/dl7sux7Yemk4+4L8eIrZIPhsT4NOLtpnEfc9Gc
KnCs3Oc8xe9X7jOXq3wN963k2Fq7MH2Q+3yXk7mP3xz3otz3uMiZ7aZ+H99X
rZesZS1KV3Nuiu9jFmx08Arxbi4ruU85KPftl/2qx7ko9+VcMHJe/m+WXezs
OF9q3mfmPkQbKnlyQneawX0+Y4e4D+G/eWpG9PK8nK37q65lf7II1y2L+06f
fjZ0W/w04azsf4fO1eQ1uxyxePhzKuiHxNx18YOtrU7+g/dkNXwi4bjMdnBU
cFy7XdSHSNxXtoXYzn/+8eP4LMeP4zqozS3ibNsxKn0dEeMk6X++9y2L+ybq
5hVxeoN+BzO4b+p+hthvgPs++7yRIT5Tbx/ivrBnjbjB2Loypm+Y/W51MV7U
28s102rcl+s9o6uTgwMdd4j7qJeOPsncJpdkjfsQ8rjkWoI530jJfrRLXhl0
6Y833+i4L7Nf5jc5xzydsh96PP2GXaOdlufyth538Nd/NTwt+8F9nhP9PvQJ
VX/mOKmDzjayrexHm9baxF8z13Uoa5d5XmQ/c+VYCxHBFin38ZtPfUHZh9wH
R7KtfPjTfxlzXxnvfpjcJ0+9+fLPO+57nNlvWt+Mr5P9+J75qBbn9u0+9bKl
H1vLfZcv/yGE/KGyX5YfIu8h5PGU+5BV6yRrWYvScV9+91yJ90OI78/cRy0G
pLTPHbSeu7Jf7mP/1WOdUbOwt26ub5dFX9E5/CHn4UyZT+5r3n+d7p6N5bPQ
nJ5ljpcsmfuufPFu/L4Zz+nTvW0n8nt2tt/ZcUNrmS6HyX3kXHzxTx8E+8FT
T/36/+1y5P38Z3+95j7n84LcN4uf9rP/WdznfrC7nrh4bm9jc2Nv6xLxXBf2
Ll5thN/aRwdzu1T6PbQcezO1GKiNKvcNsZ/5UszRGTa9rz/ZsybDNO6r+3dO
cl9mP/ww4bgc84buC/fJfpn7YCVYgvXhLu1SNe6DhdiGuu0I+6xxX/6NYAvE
J7HkPu2Aco12usx92c7HeHy4dW6C+/BL5XvYMkcskv0ObYN2yfdijFzJfejQ
2HRYB1uP3Cf7mWfU+g1yn+w3j0+ctduVzH74eZovx2cX7Tb5Xrbju3PHvKmM
Lecnb8PzThY9VOYYzSnmEufB+nOPG/sxT7DVzeqb9jyuGzlwiJWwqT8O3Ke9
UTs53Bf5ge5eCllWHtNVCtyH+HvVOsla1jIhZ8fxXTXug/kQfUKw5WFvqtnm
DuKjWcqibRkXCJv2jiHVK9zP+JTcN9c2G5MxfqU0OU23ezF5Q9xnTpdsD6xx
H2Kt9xr3Zb4kR99kf9fMtwxZ1J9zWdxnrJJ1lF979eexnO+/+u0v9n750kvh
u4loK4S98HU0P6d5P+U5PrGXILKHy7gnwJTGGzJ/ZEQE/YoYvzc3ft8xX5mz
M3/PrDI1X8s8eU1K9krze15+Wug+UaktUbaV54XsOQ/3ITJ1jf/0j83/T+M+
fY6Rdz4dx/w1euFuVysu53aU/fhfXy1rzTRssdux1xD3WQtcP0zj6fD1G+I+
/NzQA7Hn2Sfj4OQ+2U/+y0xyfuvVbn+yH9xH3k6YC72T/ZfMJ/fBjujXbL91
5WQnJfd1+S9bGx99KbmP/dMW8vqLP6tyX6/mOvUeCu6zZgXtxhgV3IdPNaIt
ruS+8fO1Od+LcB9tIuTM4TNzH3zMWMGE4/oO2539j+XcMzL3IdnWexTch8h9
CGMO/x2kPfOPLKt/ch8y9D/vQuS+7MtZ5nx1POW+g47vQXJ0Rt7Z9toMHWV0
Hhg75/zjklfmoLJ1Yzdi/Py9an1kLWtBenzXcd/2xHrYpKjdnue03MezrMnf
lq/rw+G+eXw/yelizcGJ413Se/xFxneI+xhT8ruU3JeFZ3m23ZXMpy9MGZcv
82kbxHc0r5OZL3Nf9LmIGVr1HP2hy2H5eebf8EKpW1MvgXp907hP5vsxc1+1
zQXvEdWcnHNy38bOWyP+aPzh8OW7ce/Drh56yU2co3m4r9tvJT8OYr2+WdzX
2K7GNj7uR/SRvnLOa9wn+02LF9RGJft13DfiH21u1HOLnLIjQa+tcd8Otbxa
v0dlGvfRvjUafCdSch/icoTf7C9zn+z3wqv/GPa07OfYq33Q+nZa7w5+lTNk
P7iP/fz+pZ/FMmyJ+LshmfvgJcZevmIcMvfBTtZmQxirzH3j5/at4lm9O5MB
jEW0pl/mvswX/F9yn3NH+5/cR50N63C7D/tz1Po5+1w29y0rrwjnsswxStwb
bJS5z1ydngfGk3NkPcJ8jq/fPfg4H5T7EOYxv/Xf3m978763OGpZc99aHkfJ
NbvHPp6zuc883fr3ZO7zvev894D5GLGfL3x4PbmverwLcF9Xl6/N8XmgMS5s
jDIfgp8sDF1jPrkPmx38ppCXZRr3jesfble5L4u+utTqiP6uuW/pchC7n9fl
frmP3Pe/+vn/E/LUMz/de+X4M3uvvP67vd88/2znA6mU/BP7bzmG+g3mRHEZ
nEd7+pTefbAZOTvxGWXfly++HXL8xAvxXP/24U74dS5cw6HiGzmxTYWvHJ9u
XpdcOcSS++C+mh9n/p9xw0b72vsvdUzN70W4Dz2e7XKbQ/6rs7jvyq2rIdTj
k/XkPe16cp/sl7kPfZL1jRUrfUOHuE9bNO8hsl8lnyX3yX5wEcu5h2F7O719
Ye/NT18L7ivZzzwjsmjOOVLjPvq6e+98CDlZYJMa95kHk+N/9/zLESNYcp+1
IuROfTQz98l++Klq68vcp/7OmN5/cKuztcp9sl/MkRFjfPfoeui8cl+tLncp
42d1oy9zLnO9cs47XIG/YK6jKPdR681YwxyXyf/mxWF8kYjParkP1vN/RPZb
tX7OMfJe4aDtwOzmioHJZJFZ9e2yOJ6O6TTus24dvJq5r3muf9zjPuMr+S73
HZRNh+pIleK7ifI45T7ecWCj3m8/nMePG/vlXJ7IqvWQtfzI5fR2SC9/yUC8
GjzgO0J9Rcb1mZr5DLfAJ801uL33+YOtTl/AnnXrq3rt9riHzfHeaBGbH3Fy
xzfrfpXzcF8X7yjz5doO5u88PcnG1bZSTfe8nNjIbx7ttvfnSe6D67DHydY1
7sP2N5TXJXMf+ogMWVs3M185DsECa/Y7sBwG9x27sLV3fudiMF/Yja7ynrnv
S+c8+OLmR1F770njvgn71pzcN3G9L5AjdGLbiv1xFvfJfujN1FKL+K3R+PEd
Ow46MrYcuQF9jXXn5b5a/yLesqgjOY37sGdRDxLh/IZf5XfX2roEn01wX2a/
51qbGZ/PPfOT+I7IAkPcBzOpy7I+68lfNe5jTOA+48O4J2bbW+a+ty/8rvMt
hDfIJUoeJO1zmfu0jbC8rFdXch9CTkQk4qkL7uM8Wt9c21rJfcY0Nc/S650u
m7kv6q6P2kJfxjZZch85PbD7UNtwlv5768txHcFSXza3qNyH0LZ2RGIc5T6E
Y2UsOX+eJ7ku/+Y74y77PQ681x1zGz83i/3gk6Hl+mPKfsxhxsucmrIf/+HH
DMtlnst1FuQ+treGg/lZ+ISR4EpE7mOdHAfIeWHOyPRyX3y2ta5WzX30lbE4
KPc9jvLwYSNr7lvLYyOnt+fOS2l9Pp4z/+f7v3TS3TNb5kNYj3tBc59pmK/G
fZnbQq+5vxUMk9utySybn/lRSu7LsX1zc1/rnxmS83i23Be+m7Nyg2a9MO03
c18zhg3fMYbwWea+iWdUO97TuK+UIeZTYL/SRrrmvuXLMnw8D8J90/Lq09Y0
21fU3KswmT6g1IiA62iLvDIfbLzQ6fBwJuxnzYju2pjiv1nzY4x+fDC5LF9n
jEXJ2TOv0QNwX1kbr2wzzs2ImYnb45pGYIcvHnw0k/tkP/Q1Y38/vHhiKusN
jYvc5/hp74LNXnjuH8IXGIGFNjff6OLXhrhPlgu2U0aM5/ca9yHMjQtbx+M4
sEW/c+rpJq/QiKW0l5Xcl+2BYRP9qvEXrHFf6Tehb3yN+9BH0T8ZX8Y9YotG
5yBzn+wHxzV22I9if7Qn98l+7If3nvQt8nhSL689j3KfOm/EAo7YylyGmfus
m64t07oQmfty7BffS+7LMXylwH3Gg5V6P/u3/t+p154KP8KS+4yVvHT1nQnu
g2uwaXIOS+7jnGLDpY3HifsQxq7ma4j/J0JtBP1vXZ9jdBmSx9J7H2PGmOir
rD0Q3qFNzx/C+aAPMBBj6JiznfUc5MjMSW7PevbPa0n26+tRDfcd5fjW+FLu
y/bNJ0nw8cS2ivB71frHWn7EYt25KXoOrOZ3uI/nPfcO2SzzWWYw4zZYF5Yg
dmzadXEznt2bc3PfLPng2qVqfUG5bdbY9Liu4L5eDT+WDdTt67Wn3lWMNfXb
Yb9xncPrHTvDaIw3Nr4a18l9/D/ku7mo1Lgv+t/aL1Y+Z58QWRb3wXyIDKjf
J/akxn4+jqXK39fctxzJfd8v9/luLGqcjVgj6pKPrv3t2xs9nY3/iKPaD/fZ
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
pxB09R8697EfGOcg3NerFTFk60znYxb3yX7oyjIeujX3LRjv0y82Oj5Cz4bL
Tm+/GDIv9/UYbDQu2F1Zjpy5eCLaYR7UuK9kP/oh99FvljmXpnHflVsX9y7c
uBwC/7Fs96srsU90q8x9sh/chw9hjq0ib+aZq2dCatwHz2WfzZxDssZ9tB95
Vh6Oc6xk7svsx3r85hzCDtZOoF+Z+9QdzdMBu5bcx3bqk45vyX2eS/Rc1mF5
yX2OizlCMvc1cj32RXvmEu1sxO3zRj2a/ct9mf1Yl317vLJfLRcj50fu47s5
eOQ/ue+zz28c6rNuSDL3zbuN3Iesos/7EXO8wH3YHod8TY9SZnFfxNPOwX2z
ZBnxgLRR1kJe9njIfbtfrrlvLcuXXCM87DRyzAzmIdYMnuOZzu/a3M3cZx0/
9YDMfXl5yX1lPpjevSLlCZ2X+6xNgD5h3GGV++TdaWNnnpbK2OS8mzBf5r6h
dlbJffsRYjFzH9fct4Lrt1ZbrmCO7Ae5bO7TRuO7HfwpO79PGaiw/8JgbIPt
EFtSrvs4tUZe8n+m32/9+Xj0G/EY/K6c2b7Y5Silj8ibFysxtYfIfUPrwl7c
53xfrK3IXCnkw+RetSj3MS78BzexPcw35pDh2uhyn+wn91FnI8cZ6qcBq5q7
ZIj7ZL+whT3a6eyC7pM+wn2yX8l9MDFtaNMM9mvrQdS4D4Ft+P3JnfNhy4Lp
YLkh7qNv6PyML7UGEHxQa9zHeo4lvzl/slPmPvZrPdry3q3NwPyM5CvhO/uJ
muX/NWY/uU//0ngmmtul4D640X1ke5ncF311vrQcnbnP8+o+1Mf55BrCv5M6
EtRYz7X3zD0q69G+rKvQLttoY/RclflXieeD+1bBfsReLpojUl/PWbUPH0fB
z9N4w0XYbxU17zgnxvblnK6LctwyuM93MjDfLLv0fuX8td2QNfetZZnS1Yc7
W3DfnNtn7ptnHmfuq99LboaOQrwdIsPVmK+ry5C4z3antY/AejKf3Mf2Oa9L
Z/uck/tqeTfLegv4wSL8N3N8C+7TZ3TRewf5bzjWZd6PsF3al5L7YkxSHNOq
5/iPQRblPkSbGH6e3z5Cv5rM5+JvmQnbU9Tau99wXq7NjcCAj765Ppr3zbWG
/v64ct/5nathB8w5PhfJ7dIb8yl2vaHcorYxD/dZ51o9A66DA/m8cP3dkM/u
vtfVTOceWuM+2W8a93U55M+92u2b5bO4Dx6jj/o36t9p7Ns07rPuH3yHUBsw
4rwe7XTL3W/mPtqOHJltzbOs1w1xn3XX2RbfROOJMvfJfs0zYzfVl7/VHZPs
J/fl+uS2UeO+Uuek/Rr3+V/O3eKn7Ac7hQ/tiLFifB5udrUb2J5l2HTQkbHP
mdtf9oP7aIPj6OyXbQ5SuS/rtMTrldxnf7pcQgX3GSuo/2vmPuMYWR/brdyn
fP1fR8N98A7jQ2yieXfmYQPj4rA9HSX3LZO3zP35+5d+tpANLc/Nef1h5xVt
5DXhPMl9jv+iHLes8dPP03vTso5fW/ztr24G97Fs1TrGWp4cydw3tI52KmPz
SjmMeDOZb6rtbko9vnm4Dx7SR8n6gj3uS3X3Zo7jQE4X+C7708h8ct8z564E
P7F8ohYC52TElPRpO2q5NDLvsSpyX/nudZY0PFy3L8p91lZkDpS5Etfcd4TX
8UCukO7/lEPSZfNwX7a/75f7Tn4yrp/w0p/G3IWvN8vLmNiZvNcyn/lasNvB
dQi80PiWX43+Yzvifz61XUZ+w9F6R8V9rpvz7RBHR7+wb6EPaysJHX6k85w7
92IIOQ/J0TmN+2S/zH3wHqzHNnG+WttRjhebxX4l98X5f7SdWK7hHeYGnzXu
G7Nfk6dFOyBzpLkfNfvTTlTjPlgGYf3wT71zJT5pI3NfZj/0QGoYYHOzRsKZ
zRdChriP8TIWjvXxl1RHzNyHmGdH7sk1FDL7xTvMrzc7NuP4YwyKvJscD8wA
+yD+n3XrXL+BPtKHkvtYbp4Z2qSuYeY+JOq160v55bmO+2Q//E3lNf7POq05
Kcnb0jwzm5rymftqOrbcl31IGdOS+9g3or/tYXIfNSGwK0a8Zst9iMwJA87T
jrX0sDkflQ1s0X0M2S+t+4jIfXD9PPvFTuv3ZXEf94vOb2AK+znOXO+M/7zn
ar/jVxPuTXLfst+rN2Nxa6QXruu2r2W5Mk/tdWPSYL4cswe3HGZuyeZdY912
x++IVylsfPn/WSz09Tef9riP9bXFdeOzYN0+7aUu7zNfI9g7Q+fdORXMV3If
n02+mzZ2bgb3YU+cday870dXPAj39WP8x/urcV+MyZr9jvZaTvXy5uG+XMNd
2xjchP44FH8VuRHbODGXoXvji1er+Q4bosOzDP3t3oNxW8hRcV8XYzxi0nc+
vRHS1RX8oJ7Ts+br2fPdnGLXGxr/nGt1FvfJfuS9VK9Ap4bnmhwu5zqG1T4D
Y+CPyfVecp/sNy/3EVtIPlHO+aU7zZyYxn2wjPF7zhHte3zSTo37ZD/uw/Ac
84//YLaG7ZocKEPcx3/6flq7OvJIjuZbyX3m3cOuBlfEvaxlFu9nsp/c13Db
R71YPjiuxn3mxBz7te5OcF9zfd3q9u13uU/2ywxprhX3l7mP3+jf9q3GfXAa
go2OYy+5j/mkfyfnoeQ+8o9qP/zmwZWO+2Q/9WiOvcYWHDN9ZBzG+X8a7tMX
1vNDvlO5Dz5ftl5B/4+1NSIz92UbY+Y+YkJZZxonEJsp99Vqt+9Xll0jz3MD
KzEHELkPdiJHq3lah9rQn5hzlrlPO/TE+t/X649k8X0FbeYcD7PEWEBqvCCL
st9Bpaxnv2zBtxOR/VatY6zlyZAa85U6i7X49FcsuW/r5tVDm/c17lOfkPum
bTdx32tthzCfz0nziF6/e6PHfI7FrLyUsU6uuVDxCZUnS+7buPZKxDci9jFz
3/btq3vPvXM+5OWzH+7dvf1xbOu6nJPsRzokch/y/l9eC96dxYrTamO4rcdF
Hlftfz2bX9KLVz3Xn2Tp4imLeSqrlOvDHtkHMvtCHiX38b28lszdkvO4dMsS
q5GPBbbjXpT9Bc2xQdwbnEOf98t9Jfstwn34rSLEx1F3fffm1t43D6+E5DFG
N8eeZ044dCB9BKldtx/uC5/Or85NxGbynX2irwSrtXGas7iPug2bF97oWEK7
DWPc5X4suM95Iveh8zMXrEthO1GL8OGNQe6Tif3N/7QDQzLv5MKS+1gXhoBb
FPJmDnFf1Pr7fqzH0R/ziMJ9mf2Mg8s5Nj0XJffJxmU+Tvftd3ztov72uabm
dsSpJ+5D3IexlJkNZT/WY34wXxg3Y6Ey9+GPmNmt5L4cRwnzldxnLFjOo5q5
r+QBuQ/hnNBH+srYyn3mEkXwr4X5lGXqFJn7yhhPBRZifoRf8JzcR47OZTIf
Avctk/1ijrf5UmU/5oZ13mU/7H4yYK2d/XDfNJYruW/e4+Ead87AfEcda3gU
Avet67avZZkyD/chmftufdno+PLfYXLf5H1r8di2LOojSDy/v7vW477eOFjL
YhHuG4gFhI201cFT6GZyWGa+IYH5Mvcx7pyDeY4ZxkPm5T6X17gv+9y6njUb
S+7rxmYgn8ValnQNZ75eAvdl/86sv8t6jW6/3eXnl+Miz8v3n4XEOo9udNwX
vnopt4fvdOE2+tJxaxGDqH3M7/iIkoeTvDPasjobxb3Nrr5B5BK5f6nzHVTn
bubn1ZC8j5yDprn2r3Q1ysua5b1co8XYZm6tcZ/sN4v7EO4R+Hjih8h3WfBO
6N99RmMsWafJxT/JfbJfyX2N716/Hc/zvbtbXU7RzH2yX8l98pOsNmadsY0s
c5/sZ95K+sz/sNz5nTPd+SSH5xD3Xdg6HoJv3saZVzo/O3XCGvfxP7o/On3U
4Wv9FIe4z/PR2GLr3Idcv3cujmkcA9jUcM92UbkPewqcgG1P38KS+xzDcc3G
jya4z76zP87p7a8v97gPwRc4bMl3NkPPh/fkPtnP8dHHNcdRwnwwkiygTTJz
X/jctX0JTk88QL8yv5bcp+3S+oyZ++AtOIycL/R9fj1h+NlIe7Rt/lC5j329
PTpO56/sR834XL8xt815cxwPg/uWrz81vpEXzr8VteM5Rt8LcH4YY+Ym53oa
+zEvrMXhfI/3O+laGl9H/bywNcm+kotyn3Nd7vuhsN+8/Xz7z+u67WtZorQ1
6WbVIy8lcx+f0/hjyB43nvt19jCX57KuMWsoISX3qdOWx9nLrTllPDofz7YG
Rm0dxorjwd/IuhGZw777dvzsrvX/5o3Nkf71Ssjbb/56Ye7LuYYR+jGL+8b3
7f7YlesR41X6x3Zjs+a+uSTblEr70yyZ8IucIydT6b+Ir6efa+47GPfBduzb
XJbkzTD+Lev+5t5UT0eHQn8x98p+uA9bIG2Qz4Xr3Bru/C8ryBLX27itWdwH
78l/yBc3rTWw2cu3KffJfpn7rDnIus4pjh92Y3mN+2S/8zsXo6/ELnJ8kd95
NMf0hR3ivpw3RL9H9a3MfbJfY6/cbeNSd3u2uJL79IHUhhWcXeE+xwN9GlaC
58gPmrkPCSYa9R2OkhEzP2fuMx/OuH5tn/usA2EsaMl9nQ111G90evKXlNzn
cXPeYQK5TxZwTLIO65jJ5t+mZ5rs18QijvO8ZJ9VxhDG9LwhmfsWYaqsUxPz
aR5T7XnaEc2lw/HJfbKffZP7ZD/b1W4m+y2bN5bdHnOPcSDWU+5Dumd7y33y
NePNPM3spx+r722YW5E/qc29JPvZXs71Wi4rZT8xciX3YTvOuZ0eZ1nk/FK3
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
z/DBHHGQUtpbM/fJfjXuy/F97DfXged/1sWuluv0DXEf8vnXY/9cfsvb8ITx
XtO4D+F4wqY42u+5cy9GHKH7R4a4L/SpEZcgTY6fJk+oxyn3yX7WX0DYlv6U
/hYl92lTsj5Y7f4n9zX3wt3ONzTbD0ruk+voU+RS+a9Petwn+7352i+6unJ5
TDL3Ifoxew2U3GebUXOQWicPL/e4D6HeNYx2o435Nve07NfYxprn0jjGb8x9
WXeG4UruK/1U+9zX1CyJmvNt7fauVuDonMt41GSA+zL7wVslfyn6s8p5cp9t
a4fM3FeeX3X2ptb8WD+R+xTGD4aAd+Zhv2UI/WcMc6wj8Xz0Y1bum/0/7/t2
bPcDT8l9+H8iR1VHoTcmI85D5D6X4+sp9+nTK/d5XZ3fenWp3Ifk+8u0PFOz
hBwy2PrW3LeWZUquOz6tnoM+nlmns8aDcX+Z+0qWa+4d83FfliYPd1PLnH7I
bTIfwvKLN5oaCtYWzNxnW8YPTRz/AjWvY5uW+YL78JV9e7PhRn4PcN/pnSa2
z7p9mfvC1zXV6kEy9xHfN6t+w1EzX437mjwXk/4IQ9wXMoWLHlep+XH2GC/l
1ZzKfcX/bIdtlPnEJ8xhfs/S1ndQ7sMmyDMQ3TL00f/6JJ3DSx17ueyL25eD
/WgbgUnYFt5DP0cW5b5s53tcuE+eQ+994fg/7f3zv/zf8ck4woLUFIDTEBnq
85YBHLccP4g9K+pk39/s4ucOwn3YxfB5lM20BcJuCN+pLSHX4XM6L/fl88Cn
LHbr3vmuVoUMOMR9sp9j4H5y/B77msZ9nB/sj7Af/xFHyDMix6HVuA99nxgz
RP8x1s3cl9mPT9jFfJPm6p/FfVEfCBvBPeMTdsf5dFruC3vaiCU5nuzvUnJf
jpO70/rpltyH3+Ebp14LxiDvytuj5XKf7Md4a4tjfe1nPe6jxmVb9695R3dp
gvtYl+XNOTvT4z4k53TJ9k25zzlmzkzrtLs9dj/7XXIfdjoEtmK/Jffhg8p/
mfuixsOxvwthvG1X9jPexPtI5r7XRtcKx4/k8+s7ishRW3Af8tS//c0E9x3+
M3e3ywmbuc/6H5n7DrsvXb2OtC99PVfFfQjcB3sPxWYydtxz/B9GlPuWxe3W
EszcdxBfVrnvj5+t/TzXslyZZe/L3IfdD7sVjIVk7tO/07p5s+Y09jkEZst2
O8XYQf6X2Up7nZK5r/zP9krm6479ALXFQ0dP3PerM1fDd1YudL3MfcY1NveJ
mx33lcePfc+cLqu4j84vu5GLepD7St/HJ4X7ipi8Ws4WhZoFMlzOqTkP95V2
OpgmM1mOdcp5TPyfeL2SHw+L+/jN9a+9q6mZsN36Nm6Gfh95XWC4VgfVZ9P8
LsaBBX+1/BS10IiBHfW1qRXQ5F8Jm0PbDr/1ZTOfofXl81jlY0PPJj9lk0+l
6fMs7pP9pnGf3FNyH8uwD5K7RCEGrtH/N6OeAYxEjJV1FOA4bWCLch99086E
PVBug0U4Bu5J4xp007kPudDWqoa7acfY5PF7q6buQY37ZD/mDb6czCH6er3V
/z3X07iviYW72eRPab9Tqw52Ud8vua+sy2B+l5L7EGu+5bwu2nGN7cvch60I
v0wEmx66ZMl9mf2MOTOfSs6Rcqd9J8D40o77rHHfR1tvhnTPyjaPZma/Jmfs
O2085nZwn+wnC9E3/Y7Nm5q5L9e3sOZI5j7WYd8cF9vKfbIf4ySv21fZT3uh
/nkb55/vuE//SRmv5D7aIUaR85W5D9G+og+31yN9tyYFYw73yX5xXh+N2Vn2
q/GD3GdNefuzbGHssKUR84nIftivTp96NgTOkvtWrQfAndj9tKsteqwH4SOv
mXn5zXnn+wlsgMvkPsVcw/s9tj/8eTdkzX1rWbZ0Nir8FWfo4Jn7YC3EnCsy
37w+hzJdyX34krKPzH21Wni9YxjgBzhQFhxiRv01DzyW+Ilm7kv/PXPuyt6H
17difGQ+x6D0AzBXZ4375hnbiI26vzXXOTi4tDn+R9x3ciDn1CD3DcW7PcYM
2PW76KecB9+RH2Ve7oO/uuV/2Ozakvs6DhyJzLdf7jMnJL/xYXz++L/vvfDs
/+yuWbkkx9Gpyzc+hVt7G++eiG0UdPhvH92I9V99/p/CjgMPNPn/fhjcZ21y
dQBYTZsbOudvjv2P0APNRWJeCOPZ1JXlkK7m2sMbnS1Ru9hBuA/mU6cyLypC
jQV8KfUjYD+0wb7M9zKL+4yVzEIuUbkyYgJHTD/EfbJftuPyfsA8rnIp82WI
+xDHnTFif6xjnb6wvw1wn4yk7UsWz7k7S+7L90vvwdYCKLkPvtG/MZju9V9G
bQb9BDP38R2bXdSIGIlxZrSXuc+4duu/mzfGcyz7sQ7/M77YJhD0/cx9rKeN
j+12bp2b4D76Za57fOFgSLkvx5zqpzu22Y25j/57rvTpzNyXc7QYGyn35fye
zfX8Uc/2kuvi5dg5PmvPHrlPZkDYb+Y+88zQz8x9CHMf7mM84rnbvrvw3qOf
aMl+/Dbv0Dzct9+6BXIfoj8lfGfMGtxHziDG7rD8O+cVc93Ifvtp46Dctyhr
KszbD8NPZfp5WuQ8Mrdlv4OO7Zr71nJY0sW5tbrsNIbCxgeLYasr82yW+VT6
181I73nY/01bCvY4lst9g32V8exz4tWS//IxLJX7YLzMduZ7MS9oihWE+TL3
+Q6SeD6kxn1vv/6rEHJ4Xr74h96YTbtHqMMcFffhT4sf4VBtgZnz7gfEfT1e
ncF9v3t3uxuTPD7WJqfOIXUDYK95uM/YPpivzImS89nn3Bf8f+XWxWBLbXwI
y4+C+/QvM0cLdqrI0XjhROih2TamXhhsN1o3aoineiaux/uFXCOg4bHGVsFx
NNx3vfMvNXZRbrA+qPF24et2BNzn/9jD1ZvNCUrbtBn+j22ddmsYEL9nm4ty
nzymTyTCsdFv1sPepc4/L/fRN8YrcsK0/q4eT8dmFe6T/bK/K31p6meP7cxD
3Be2sYjb2Q3uZ9zGPojj7UvuMxaQ9XJ9htp9k084DT3eXDBIU5+izn3Mu/Ab
HM1ZGAoek/tkP3NbIvCGNoAa9ynN/Pio8wPxu+xHnXG2uxPs/U53HjP30U/W
oV45UnKfrGB9eHPQyn2NDXis89K+PrNyH2OS6z1wnuQ+a5SoL5fcl/VofDkz
97194Xd7L7/5z3Gs0+KjMtM7jvkc0ye5j/cDziV9feU+j1ffVrmP/tLvsvYA
3znf2iRnPSdZn5yk5k+dp9Y7jIegA2Tu6/SEe9sd9w3Va1iENw+Sd8Zt6R/9
PGy9I0uO7dvP9swvc+LMUytlnjbztXNQuXhjN2TV+s9aniwJbkr164b8Hs3n
mbmP9/M5v0vmvtI2Jffp38m2mfnMGTq1rzCdtskhKbhvem6NqzNzcTb2qqtj
X9iW8YzvGzNL21bBfRxfHp/MfbU8ODxPZL6S+2bff28Wuvty7j1Ddka5rxyz
8Im7udvl05lrHib/yVVfE9X+Jd9U+5tteuX8mpf7sL+d37kawnji0y/TwUrU
kAv+Gwm6f8RA3RvnppT7cuzOEPepI588+VywQ84Xoq+ieTTQMbP90Hg52QOd
Vj9PPmkLDuH7PVjnflOzAB2zy9H4GHBfo2/vRi4U+kOfZVYE1kJgDv57+qm/
CR2WOgwI9yrOkzki4ZuSmYx9w56HTewg3Ffab7HbsR6CbjyOVdts81Hstjr3
bO5DynysZc0OGUR7Xcl9sl/EmkUdwO2or8562veCrUfr1bhP9nPeRW2F0TnK
2yND3Bc+k99c6q4B40H12RvivnENuMYudfve9R73yX45FhOJed/q7zXu85iI
d9MenblP9nvz09f2Xr/4buQXZa5k21TJfVnoa8l9cB39ivnz9u8af7s2d4vs
d+FPZ+N48WezvlnmvrDZtPY6/UDzWGkTpK/WKpH7ZD+X6ROa2Y/l3lMQYhQz
9+l3yXiU3Gce1hoDcq6zr2r2GYx3TtqRsQu37Ofcx66OhK022Vz1iS25L9tv
Mvdh9xuKx2CMOSdwn+yHv+o8z125r+YHOU/dvEW576A5R+U+fE/nYdtlyaLc
Vx4n9lN8aY+qv/MKzztkzX1rOSwpbS/BNUmX1cczb5O5jxoJiJwT73wfjes9
yHgyXy2/ZrVfLZfGd7mP3zmPSuK+sLvJeWcL31Xtcpl1K8zXsV4Xe3W1z8Ub
2yFdTQdrYVRygnbj0ean0R82+3uO70c3ezldjA+ZZkctt5f5lsF9nR13oC30
WM5jyX4l9xmfiS8ozMMn/NMb7xw39xjZ/TquS3X37HOZt7PcllqGHD8sJ89l
QbeHLebhPpgvc1/Oi5JFtpF7WPfExXPBgK5DHTo+a9zX+e4eAvcRt4XOL180
fLbdxXdZDy9yMjzambBH6btprQY+OS6EcT63c6GLL7LOHP6f+IUi07hP9lsm
97315+ONPfX7a312a9kH3ZJ+cowcV87hKNvvh/sU8y7Kb/Y517WYl/vM3wrz
EfOoHRA+o67enXsfTXCf7Cb3GUeZuRRm+rzLj9nnvsx++JiyH2yZue8RS1jh
Pv1DjaUz/0quG1Ry32+O/aSzOTGuJ7aencj/qf/mhZ0T3VyDeWJutfktSu6L
WhpFOyX3IdZbsMZHLRc8Oi7cpw8g65Xcl3MXIhtnXulxXy2WSb1f7vvkzvng
SpZpoyy5z+XB4ffO9bjP5RwfxyP3eV/Bbkj+0Vdf+Kcun47cF3GgLXMjmfsy
++lHKvd53uVnuc85bE1Czk1mv/f/cCxiInMND47RvufcuO5brjbWT+6DYeE6
YhL5LfflfDSZ+1hW81EkPwocRd+QZda6OyzRhnzU3MczxmuP37Xrpswtm/+T
+x5H9lO/XrUetJYnX2rch9T8L10m8+VafyzPzPfWQAxYb9+FDt0xWrarldyX
WFDW6xhvgtkK7hvKtajtztydG6l238b2JFMOCHlF456YatDX4vyufHI6JNdv
WIT5DkMW5T5tW829aiwyX8l9Zc208dg/XtxX2sGD9/6wGZ+1bRiDK7d3e9xX
skHmvhq/IcyZjY1X9371219ELTkEBsROWPKAOvAi3Net09Yfy76emfl8793x
xIjfEBgvaoOPeAm/QPON8B1h/sJTrBdxYaNt4KnI+dDaoO63vnjo8wflPubU
xtULwRgw186drWR3aOxK2JnMSQNXhB9lW/8Ozoat6TvHhD6BXsYxyUrsi/bw
rYSrhs4dY3hQ7mv0wcm24zhub0YfYS/j9DLDLcJ9zjXHWX90c+pHuwX3yX5y
X5z/1mbZxSbevxTxlc7JzH2eE7nPeEHri3f5hUb7tb5E5j77L8vZvteAdfJq
3Kftj0/j/WAcuE/2y9z3wqv/2MsDMsR9jC/ftStFH74Zx95l7tPGnXOnlNyX
eZAaDtFey32yH/+Tz4ScKLCV+m3JfS4vfRazXnxHH23ORct9sl/UW8Su+03j
72nNDvnOuuuyYMl9xjsZ45i5DyGvizF4cp/spw9q/37QjBeMl2MOM/fpAyEX
yn3yW4zriIHlPsT5QP/pe2Y/Pt0OkfuyZO7LcYqZ+4wjtRZFyX3YYuW+xyFn
yyIC9zEv5dXD11GaeW39hjzPa+vW2oD7sKuueuxKwdaHLoWsWg9ay5Mt2aY2
y+duKA5vXsaL/bW2M+KYuv2X9fDaGntD/pgTNsC2rnpXYy9zn/XWz0zaaVyH
3CxR0579JebrmHLGMZGHxuu15L7m/jPpA5uZ7+PzrwUfzpMX9TDi+Ozz7H2o
Mzb2LJmv5L5pMjH3CrvfKq+FbOfLfZyX+4aOualjvBvsAWfAQuhus7hPf0+5
L6+XuYLf47oq/Tatf9LZShLvLZP75JdFuM96DZ0ed+/DkKjN3bIan9QYl5ts
Bxvc48R9NdtZTfBLJadoZjb6Qd8W5b7cF84tPrH6djIm1orIdt0a98l+cl9m
Se18cB8MyDmmr5n7ZL/MfeV7CpZxbs23n7lP9pP7sM16zmSh8G1o7XyZ+zL7
2Tbr5TjYIe7DrkRte2xP2FJ/9x9/H755cJ/sJ/flehwySo37PB7eY+gLeWX3
Ysd9sh/3U/7PzAenlNznMXK+ZLvMfUjWf/P3zH3WNsy5TjP3yXWOY+Y+JGJb
29yejJt9lv34nm12fM/cJ3/B2Yx35j5zgbIev+U+awL6/JHxZD+X6zuebcB5
DFxP7iPHDRJ5dRL3lTZa+xA6OXmLR5xYch9+nMwZbZhyH3PQ/Wbuy7zo/3Af
XK/tdtX8sahoi4b7iE087P1p7xvrK7tz181zTjyu3HcrapKt7X1rOXyZ4KSN
7YkclQeW1idS5gtpeStqI5Tct4D9J3NfaZfruK9sr2XGrg8t9w3ljFHwVTXn
jbUi5L58DYdOe3+rq4WV//uufe7zrgw9ah7uK+vZL1NK7qtLn2PgPj6H9OAh
IS9ILReo/LfK66DkPs+/MXlDsX3vfHpj6jEPcZ81EXinn3XtsMmNngFPPfPT
kCbHXZ379J9clPtcN9dJ63KFtjFK6DpRo+1BE5/1oNX/0APxd4xckSM9P8cK
wnrYafQHjbjCERcYjxP1zO592Onv4VM52gZmkB07X0x82UasI19Gnsvtt0PQ
j8g9oz2J3Ji0f3brlRDzvJsPhTE3lyV263sPkh121Db7wQ805xck3wh6n8w3
je0Pwn36NU67lpgjMrY5TfKcmcV9eW51bSa2118y92uI+/y/72O+O9F+2T+5
L9dhNHdrk3+nWZ65T/ajHc4R42BthS5/Z6pVkLkvr+d9TDsoUuM+86IwhuiW
xBHxKfdl9pPT5FH5suQ+WTD6+/21zhYp98l+2JpoE66hr/5Xch85W4xVM84p
Mw7znPmqLU0uy+xnXs6oO/L1mP0cR+sZRo6WCvexbfhajv7L3Cf75VyZ8qnc
x37kO6TkvlJPz8/UWc/HeJ6lvuftrYmHf5/cV7JeTeJ8ttyHcF/Bxsf9Qu5D
ojb8qWfjXYE5htgv65XsB/fhH6kt96i4j+vnMNrFz5NjgPuQZde1N38obZfc
5/lfhP3Mp7Df/DDLFmP71ty3lqOULmdm4r7goBxLV67f2uqqbZ5N25xNPpPG
2I1+97ivaGfffn9z2ug6W2GF82pyfPPqSK/a6rjPGLbaNdzVcW65r7nXjNct
ue+tV/418sUh6lO155rbLVsaLpnFlMP67kG5rxvnKXmGjmT+F8xnTkxixRbl
PnNAItqY1GPhEGLK1GOncZ8MMmtc2QYbARyW23rhuX/o8nFSc499Yjtq3jGs
uW9Z3Fezp2UOjFoE6bwYV8i+98N9tD3Oyd/UbuB8NLFWp6PPmfmGuE/2k/t8
pxC22XZuMo7U1it5rswHm9svj0X/Ys/9EPd5bI4PdkTPf+Y+mU7u044mP4Qv
bcr53+mnLYPBedRm4zzzyXn2ei25r7Sf7dy5OtLPbvS4T/bLuiWf9qXkPpZl
3072X3Kf/dUWCGvhD4jIfvTv1Omnu7qRTU2VSe6zTp05ZTL3masGDrWW3zhf
a8N9LGN+ZX7M3JdjLOP8JO6LfJ+3zgXrHPvN33bcJ/tNezaVddRrUsbCNXN6
XHM8/wf3MXaRJ7XN5yPfaTfMfC/35e0z9+W25T6E+RO24NF9Te7LwrsG67DD
SwfNsTJNYFz6AJt6TS97H3IfTEa+o3m5b978Mtzv5b6D9tWcqHAfbR7WuC8q
az/PtRy1dNxX5qzsuK/xz8y1z3N+zGwzzPlUujyYG5Pc19v/MmrqzXOcZ/rx
WzW7Hmx3cfeTva2bVzvmk/tm3se+/0vk7vz6m09D/vz5Rnt/m2QqOO78xot7
//Hb/69jvhr3qUM+jty3H+H5SqwW9bF75+Yx5D5zhBibqN8nv5FsT6txn+d0
iPtcxnfsHG4PV6GTois1PkHDrO0+9sN96KHmX+iWYbv6vrEN+q7fXI6RU+Tu
hx1v6B+oj2audWCNePwB4T/YATEHC+vpf5ntO+ZbyceYawScvfBKl1dG4fhk
RYX1+A9dlr6aQxSxHiBt42eJvgJ/Ri2HkU6HsF72WcS3dNncV+Z0GRLmBuzD
NuP7wfWp3Cf7cV74b2yX2u5Ef8juvCfuk/0y98VcTv6T978Z1yXnfObxKnlQ
7vMdgAxmbhFtTR5byX05HrKxO+52td8z98l+8kBmLQRdv8Z9+ifSnxwXN8R9
oau1106wU851nXRZGAk2kmv1fczsJ3fyX85VVHKfOZFgJlgK25LcJ/sx363j
aFsl933+9Uch8lvJfeZ1sb9yn+znNZzf+WTuM4eOuVUz981Tt9vaDzV2K2Wo
rXJba+TJfQis7TjnfMOMVZ7ntgP3zfNMzdzHmPKd48nsx9xr3vlN2iYXEZk7
L7MGDedF7osahP/yV4eagyVz3zJZFu6TWZeR84a+wdzaEeOcjT61CR+0/Wm2
aeThw8ll5oNbc99ajlq6mLfCF7NjtlrsXG25OTAT96382DaujbmvYD1iF9/+
84Vgvsx9H/zlVLzzQ5eada1br0jug/kQcrrM4r7XXviXQT/PsV/f4dyr55OD
85763EzuO2J/z5zDMy+jHgK5Wnp9rHBfeZzakmp+fzy/YBbzTAZPtTUFhriv
bGPIry7vU72d/827AhtZz0G+6rYb8eKa+6Zzn33RJ2fWfL9755NgJuydjEG3
fMTdSC2X5zzcx7hii0SitkBbN9GaB9yr/F/76jzcF3Gdbe6ZXFOB/bJ/59M0
7mMeTTuOnIO/xn3mUWVZxHS29SLQ94a4z7rjWX+G9dS95D7ZD+5D/8XfDt/O
kxePhei/OcF9bVtyyEQN1sR9pb8/UuM+66K7nbbvzH5RX7KtWe9417gP+zbx
iOzDnCpyn3UNcg0R95O5j2PP9SxK7mPf7JP/zF2a54H91kdUW6Hcx/VoDJz1
Jhyf7CPrMrnPZYvq+jnGL7cB95lbxjw0zsXmObs70a95bI6lPGpjpJHMfZwz
xBwvct+yOaOrZ9HWJVUy92H/m6dtc6jMI+bJJD/NrLroE3rOw8mam9jlqLtB
H5Bl2SrlvtMnfhPtYkOXAdnfMs7HNPbzGVLeL5qccGs/z7WsTnqxb7lmnbYR
ua+soyf3pfVXfSyd3bKot6fIfV/ev9qzq03jvr7v5vWO+5qcfn8JP0+Yr8Z9
1GuH95CNt5+byn2rkEnOXA73+W6YvB48l7LPZ5fj5Yi5L/uYuqzGfeRv4Tf1
2qmFznb4+qrvYQ+C+XLs3Tzcpx5G7B8MIn/JIB1vtDXXGTv8LhfhPm1+07gP
uf/NpW577T7okHIfOgw5/Nk/y9HR0THkCHNBcL2wLuwRum2blwSRz6wDQVvZ
xhQ2n+93OuZqeO2jzr/PmuosCw4c8QB2TfRf80eQC0b7Bv3MtQQa+ajL/dLx
yIhnf/6zvw6h3chB0z2/x2O8DO6DpebhPQXdJHJpfj3OgzON+2Q/7T/mxeR8
yejB7Y92enNH7svsl7kv51UJPbnNXXqrnRPOo6HjyHaIxke4aYd+2u8a9+Xj
Yl36hY7YzIePOh/HzH20bV0F5J1zv43rKWqwJe6T/XI+D+55XQxhhfscA2vh
PXx4Y7R8Uo9D5K6oA9/W9Ktxn6wSjN5ytNwn++krTR/No1lyX2a78KMuuA/h
vGcfR0Xu04fVNkruc33zt2TuM27OGhock+9i4L6oY1/UKiy5T1mU+xy/sY9z
P+fHxlvPhsh9/525o+C+gwjcJ/sxLoi+rXIf89DakEPHMs++arYjxhquy8yH
HDv2dyHsexb3YR/k/UrmPviI301esmaZfrVee3Jfrc38zqb8T+5D4C+elXLf
Mlistj+5D2F/vBfI+yP3p77Vi7afue/2V/V1ht4VrVpfXstalDIvZidT8rA8
DswXYrziAPcpmfu6mIUH9Xc3+kWhP90cPcu7+3DBfTmfZ8eGLffBfEjZ7jLu
a/O2k5l1eNuDc5/1ldBBB7mv4K8jmdeV2EI+Xz3/SfSbuC7P4RD3wXwl92XR
R2Vz842weWG3Yb2ca3Ea96lnltznf9lHCX3XuuWyk/UAjbmDvdCdZcfME/vl
Prd/0riPbeMYH93o1SSjfw1rNH686A3wEcJ3eInzybGi67AM/UK/xUW5T51J
u6dzkv5xnHke0F9ZqOQ+2S9znz4F6svEUHKu6H/OC6P9Y4j7sO+auyX3374i
Q9zHcTBfZDxqfERtuXYuubzkvjLnpHY1uU/2k/vw74NXsp2vzOPofc8Ywm4O
JF/SkvvKWoGRb2m0XuY+2S9YddRXvus/WXJfzhtq3F/mPvuJTx06OvF+mfXK
ehLa86ytl7lP3pPj5D7Zj23M/2u9g8x9tXwojoe5PqzXXuO+zNTz5ucot/X7
520tCn+X7aHrmz/lv1tZNlMo7Fvu027KfNTvUvYbOq55jj1zH21ybcjZUTt+
xGg8e6y3J/fB4EP+pbyzytwXtU5Gv+U+BHblvMp9CMfCuua6YVnYV9v+2Gbt
WGRT4gTlPvpLnC2fi4zLtPFye7nP+pdyH/sjRpN+wH3KovvlWkF3gPmGuK/s
k7JyfXkta6nItBwoq+5bVVrum7XeM+euBKvJczDfEPcpJfc1LHWtyVM+Yr/M
fJmvfv/Sz0b68MeV+0Cfudj/0LNQval+P5mf+6Zve3Dmy9yH7mL80fmdi/15
dcTMF/tsbYxlnfaS+7TzYPezvjp15OA9auRRg0HZuXKud+zzcJ82IpiAZ5DP
QXT8zHjmYGHe5RpXy+I+9VuWRz6h73finGUbAhzRxJNtNjGC34x9B7WPuI3H
qB3pw4snIo+7+slrbz0d46Ed6k7rQ9b4m34WPMHxlnkruL7oh5+5LkXU+ou4
qI1OtBchxlMFN93ZCpuctbgQ9XDzxiyL+xa9ZmQl2sw+jvNwn23I8A+S/ZJr
3tgxRO5zTta4L4v3Mu1U4dfb1gIY4r7G9+9mZ4cMDh2dR347r4a4jznAb84j
fE/fvvpqnJekxn22CbPAG5zfN1/7Rcd9sl/mvahf0B5Htldl7gsf5XZ+RO2L
h5vjfCZpm+zfoFgrI3Mf8sX95ndn77h7rsp95mhBtIFl7kNYFy5ju5o9D6F9
1vF3yX0yqnVWMvchOe/JkNC+8yRznwzAPaDzxW3ZbT+xW5n7SjYo9Wl8HLOu
v19+mFd/H9+Xx/VyfBdhfT/Gov5sn+1jmo+T+G65DyGWknuZ3Jd9JLX7yX5l
fhOeQ7Kh9Slyfhrzksr02g/lPkWfWtmPZdxr877oY94G3up0kxncp42/Niaz
xkwOLudC5r7Q725c6LiPWMlF5oLct+i8Wbm+vJa1zJAfAvv9/+y9W7Mc1ZWo
+7NPhONE7Jc++2X37hMd0fbutsN2N+BLC2MbkAwIMAZdsLQkMEsXGwnJSFoC
CwRGQo11ntapb2R+WSNnzczKqlVLC6vrYURV5XXmnDOzxpfjFvUj3rgwuB7e
++2fTi1w3xBT1fmpYT0+M/dlu2FmvyHuyyJ3jr0DXaWN9edOnw8ffb23P4X7
Vs3l2THQTPeR+Wrc96TnT823FD/PvU+uVds/lfusdWbcmnoZjFPqxf4e477s
W1Zyn/2KNPrFfDu+R23r1p6GnQn7Wx7H0EvavITosaHPP9z9u+M+ddODcp9+
dcaj8skxc59F7e6WQfClhc20xcFL8b56tp+5dGDDdbnPe039rXlnvtfGg8xj
Z8vajgvc9+jqAvcZX+d5GFfmqfXYS+Yb4j5j/5iD1lss84cOcZ9zg3HBrszz
AXbw/dAQ9+FTpu6kH2SuM17jvpzn031KP0i5z5hAYuGcf6yvcR9zHzYz/0qu
SZ+5Tx/U/PwuuQ8Jn0DslC2TMVb6dsp9cf4vr3Z5JM/uvLjAfTlnDZ+Z+8wh
yjVxPPrCGnmZ+1i+98VOCO2cwn2yH/Lhh29F/2cGkPvoj1ru1Sn/b7Ztnpt2
/L9O7kNW9d2jnVP0fT6ZLy7L3Jd1/Mx9Q6zCfKW/qN+BuJyaf+V54T7/M2Aw
uW+orYyJMeTGtrE9feRv2Q9GlPXkPm16smCcs+VJalLIfVxD5FZOte153tI+
cuz4zGU555JbZbOhPkayb/cYRw3qTpXjlzUirPVAv0zlPttBTYZV9THG9qj1
5a1sZVX5tnFfVyueOMV3PqxuI/eRywVBlz/35zPVHJpN/brF54qsd/rm4nvW
zH2///OJkFfP/Mf+mdO/CPYb4r87bY61VZ4bq/vJzBmP68rXVtMjx7hvCgtG
PeyZDkNujXIcoqbHEXBfrslunpca91ErXPn5K68G/yF8R983h0rY1V5/ZmXu
Q2AGazyFT92M08jzYj0F9Wf0+VyTT517k9ynvxw6vFyGLogOzlzHN9Lz+h7b
Y4YuP1tvTKG2sC8+uxT/6/h58kk+leiztvYC/fjxZ++GPhv1sFu/V3V5fRj9
rc8m2ze1w5trZV/4A26QJxBqPlDrDr0WXQkfUXQOa9XBnUPcJ/sNcZ/sV3If
12iuFeOhytrrY/dYj59W5L5s+y2Pp70wr69x31RGHeK+zJX0u/PXZUPcJ7cw
753HzEnzoQ5xH0xobhLmFPpkrtVVch9zStsb9tx5jcQ598l+Mf++anJjaN/0
Pim5L2yPX17tmI1jy32y3zdtHFjOiSLbZe4rdUrzZzrv4T62o39pg+9oSu7r
cn+2+V8z9yH6oXJ+mOQP114Jkf3Yb4z1yI+KPPfz/yfqy2fuQ7jXTu2+EMtz
PKZ16kvOm8J9U/7njBtD5L5V6rf5fMv+vFnCn72dR86X4IhH8/dh5hhiec7r
WXILz0V4Se5DZCvyTcIGsh/8RL/m403J2SL3ub3vveAbxDww2mfhubBjz1jJ
mDe5z+PwXe4zx0vmPs4L8wVLztqNcIxcQ4d1N67vrKjDTOO8g4jcN/V9walr
Dfetyn5b7tvKVjYjvbwuI9sd393tmE/uI7fnr9+/E3X7yPVZ477sc1XjvlJg
vnW5j3Oo413/y2L9o1W5r3Yd/i71yDI/fbZFlLnbaxI5EWa6zyj3Pem8LgX3
/efZayFD13Dl8qnJ3If+z384ur8cYvxO7djosmPcN8+VV+e+zubV6tzWtJad
Ypwe31w4r+yn6DvKsa3DFTrNU8x95tks86Ui5uNB9LWk7XAi9cybOmSL42kO
l4NyH+LcsrZBU3+ln8cixv/rfj3JMe7LdRXyubi+4NndV0bbNyTWY8j3fY37
ZL+o/Ui+kZQzBpFVSu6T/chnqS6Pv6O1tYe4j/kizwXXz+bKvZT7suS+/GzU
J7HkPtlPtrC2hLb5kvsWctD8ba/jPtmPbeWwmj1L7vP/5Dfnnw2bZuY+2Y/9
9BG1vZn7sm+r9Qcy96nXX7hxMo5hbJ/CuhNnnon8ODJf5j4+taOW3Id4bv0E
avHmQ5y1Sr7NbE9Efz/50g+7Wm5T/x/15x1a5zxinkZtx95cmPsBUyMSsW95
3st5mfu0qeVcLHBfZi35ib7Fz7JmA0NqdS3CZvzZ1Tn3HfvHEI8P9yF53ukf
6TLysyJNndmCLVvuy8vkPuxq1r033tHrgftWYb8nwX3aXFexE9dytiyT3791
7Mj15a1s5WmQhdqEUVvi2oJtCe67vHdx/+Tlj7q6fSX3nbp2I0RO8tP3q7AY
uh02vTH2e/GV74bg70nt9tozQN3b354jc581Al2PXXHdZ1vJfY3M9bkyR+UU
1su6n9zHJz6SC+P0hP08y7p9yBjzyX3IL47/vMvvQn6acjt4581Tz4dk7qvl
iMzch5BbxBjAqPnc6seZu/1dO84Q92U2W4f79F0zv4Q+ltlXDz1XG+evf/7/
djGF2o/gPX5Td93+CFtmy10wDfvEe+ZffDf6LuwBiRNyuyPmbqZPmfsjam6j
u395teOJW5/PfVQb+81utJl1+hgdBvfhy/bC8e8OPgOanPnvdCwgbwyN6zLu
m/thNutyvs7afTqF+7i2ct9l93yuwxfteNTk/YGzc5yc11tyn+zX2ajb2MUc
Y8ayIe4jhws+j7AIY+s2Q9x376t+nFBNj/Q5bBxa1q1z3sncvmCZNkcq12hs
Xsl9uX6htRMy92WbFnxRxu7JfbV2Z+5DuK/oI+x8cp/sx/1BbUN0/2zDydx3
8tJPQ8gh6jq5z/6W77RByX4s/973vhNtRTJz0lc5xri8Fq6D/qDv/C37rfo/
J/dxX1M7t1bTjvEofUfHfEltN2OXuY91zLPMfc4VniE5Xg5G8nmkfVTuMw4t
2/VyH5sjxmdJrY3O2/wb7rPt7Cf3Gdu3im/jcv1ifm65z9/wrNxnn6xy3CfF
fjxnltWlv3x7b3/nZj1X5xQ5an15K1t5mqSXu7HCfUjmPvw/kbxe5mueNzn+
5m4X21dyHzZABE5D5D6YT+7j/+fDy2/1uKvkPuwaORaf48h96rUH4b66rP6+
f5mg0x0193XxqMU5zedSyotv/S7serLeKtwn61ivDSHPCno8/+3YnNDH+Hz2
R/8QchDuQ4yR6/q8rdGnZK6xtpv6J///+n1q55NLEHNE/r1yX8RotTkkybOj
zS9iUmbnNNdmY3t5p6szqN9j5Mcb6XvuU3Tzg3DfUH4U+oc+sZ4d50C43lW5
L/tZ0nfhX7nTxF3KfFO4L8/T/I7HnCsl93U+kK1/pHGC8V6htdvqp1xyn+zH
OWkzvrYwHjYkhLwtQ9yHr5m+oVlfrHFf9svLTJZzerqPdSxlVu3QJfch8BJ+
e7QPXTfnZvI7PKsdBY7I/wFyX85LA/dpK8rXYS5RGA/BX7PkPvoIXZ8+wwYl
98l+rNd/z3sscx8cV9Yjl/sUdHjsPNSYZ3vZjzZwPPuNPp3CfXLNQWLbw6d1
AvdNiRvM+ZRk9ryv3JfZUO5DyI1i7FyOdyvjHeU+6gzgp4nkvtcON8TC5fuK
LHIf62S+ZdxXO8/UvCqlcC9ktpX7ypwzm5B1GZFcL8gQ9939fC9E7lu3fUet
J29lK0+ThH5PHYczN9euJx+5Hj+4s/+7P94OKbnv0weXQuA7/DTJE5OZT3sg
vJYZr8Z9C8+VAe5Dcv7xzcnmmU/uo+5516fkVnnCNRyy7ddl+HvuXL1UbXPJ
fdZuR05da+o5nD57MnRy87uQ79r5kbnP/Jpj3Gd8lPlNzM2Jzycypos3toyP
D537zIdhvQRtHbAT/qqhC/11nh80+6d6PUj2Q7VdHMf67LIQgi6bdX+3tb3W
FKBNMp41JRBriKzKfbLfFO7jvox4wVM/3D+581zHeXCVuTfNfaOYz9IYrFW5
TzskPqVwLn16+sbrIVxvyXpTuA+2sM2Z52r8OMR9fOqHSw4d7TvuV3Kf7NfV
8061PUJS7tHMfbIfOh0xMnBFtougS5fcp+7a1QHo7OF3578L7nPd39L+cp/s
x/Vxvshd/86znX0L/8eS+2wj2/Ms4NrhPtlP7iOnIMeTyZCS++ABYxBzzXbZ
D+6Lc832he+QkvtkCNqqDU/uQ/ydJbNf1HJp++L63Y8Wue9fm22pYyf3yX6R
T+frG4P2VvPpdjkZD8h92Jxee/H7IYzFQf4ruW/DLz3lqKEPsO92dsy/zrkv
5/vJ3GfsW1nf3muO+7ytMQf3sdyYvGXc53FKnox3H8lGyO9c72JIanlUD2p3
yzbNmCffIu5DiF0s68fzng3WQ+C+5y/eCaGm5zrnOGo9eStbeeokMd9Buc+6
m18+4J5vdP+vHv2x4zu5r1aTPXPf2yefC6F++97tndABH1TqsaI/1ewGf0/c
h20s1+2LPm2570nOgxpnZu4zZ4Zy9uLZ4D5tg1zDGPdZ50gdFVuW/OA6+O57
3/1Owxszne75mV5FnMOC394K3Kcem7kvf2Z/TvVqGDP8BR82ku0q+gISc6dP
2N0vdoKx/vLgvWAM9kWn+bZyH3GG2f+O+0s7W2Yr8qnK3nAbuip8ZWxdzQcz
22HhJGIIS+6T/aZyH5+cy7yjCOdiLMyBSLvCpjwTGXAq99XuS2PvaLdMsIz7
HhQ5OzNL0lbHOnOf7Ofx2MaYUcRxLbmvY7/W/1Mf5ppOl7lProJj/C3DsF2N
+7TToZ9zTnR1+mLOrH3uMw5L3zyOnblP9st8V/pRZu7LvBp+lDNelftkP5Yz
RnIfUnKfNhuOK6/JfbKftexL30G5z3eMpf1PYR082bzTSnU8W+7jnrK/YZvM
ffq94j9KP2buUzfXZtbdvwNcmCXXKxnbjvbKfuvwBawIb9EeuU/brD66XiN9
wnUac5ljOqkbxxgjmfvy8Yau2b6q2SyHti/zp8p9nQ/tjGvWqXeR7eTr6hzM
F+ct84R7cJN+nDkOfpX9sHvSJzXuQ2C/16+gHzay5b6tbOXbJeT1XMZ8YzUp
4D7u8V9cvBG/S+7jWc0nMrevFM+3VNsPgflq3Ac76ic6Fi/Ieo45+Rn9uHnm
D+WBmRq3tw73LfTztyCuD3n2nStd3okp3FfLcwOnwCv6BZLLRB03c592vTHu
U3dRF+Y4/DeXPo+ZqXJthyYfRn+7w+Q+z22NQK7V/BalyA+NHrc412AN+oL+
zHFo5p/M/U6fmG+U60EH1U+08Wubs99hcJ/sRz8Yv0obYF91vByTdfUvO6P8
lblP9hvjPq5j58bJrs3EHMqB1vTCThi6+cPbg+fN3Ed+Hfrbeh2MLwzkGGsT
HvIfpa36I5JHx/rq4d/Z1j7I3Cf7OdfN6TPPfTnPD5O5r3x+ob9rD0HI24E+
PcZ9XE/UUmh137CxVbgv4lzvNe8xOC46sbbGkvuM2UIyw8l3sh9tY19zqJQM
lreJWgiz7fRflftkP30sOUf21ZP7+DQ/hesy93lec644fpn7PF7U4zvzzAL3
0X+MCfPma+qFzPpL9jP/P9upy2fuMx9NHs8pfpZKF0P+qM99QzUiEHz2fvfK
Mz3uG8uNxnbmNsncN/eJ3uvOaX5Z7JrGV87f4zR5T5ijcJ/sV/obj9UOPohk
u58xrk3dz4b7mNvw8Fo1FQ/AfaEbzeYLNnHfj8p+B71ePldlPvqBNsh9Y3Zh
dEKEXJ6Nr/16ctT68Va28jRK5r6O71r/z7xsiP1K7sty9/PbHfepn+dnN/a/
eLYV3PfGaz/u6vXduX+7iwmW+2qsZ43jVbkP5svcR5vq/3Wb4z39s7J/Z9fX
34K4PiRzH8L7On2LsAMS0/e79z+Y6UQXuu3GuM8cluqsuT/UndCF0L3Qz2EO
+wld2xp9q3JfxzEP5nWs47iPb85rXbcSMaSPmrrb5oKxjgG6m3aou1FXr837
8uXcp9Oa2RzLWnmwCv1AfB/8UGO/TXOfuVJhTfYJ5mvZUz7Cf9McTDCGOWpy
7B/Hg5HkcvJBWkeO6xry76TvN8F91hagHz0v31nHvd7khtjrxsIckSX3yX4l
9zEv9TPGbsynbcn5a4a4T/a7184B7bm21bypSOY+2S9zX65dMM/P2Oc+2S9z
X479swYAHBZMP8B9UW991mZtc/JY5j7ZDz1duwz6sO87atwnm+G/GXlq21qB
Ne5Dr9av0ToNmftkP459717jt2d7S+7LNbSz3TDXodRmog8hIvvJfT7rmRu2
U+5DaCfthe9KloT7ZByl5D76LPKkPry7/+6F0x33Idm33P1L7puiy2fRJ7fk
pWXchz6PWLul3M76BcaK8vv0mz8LXvNdSOY+JXNfeUxrHTBP453Sw5s92xaf
zXua/n5lrp91JeeZydwn78h9tTp3y8ZlXU7Drs38sn5FbZup3Far6zeVY3Nd
d7jPcV/mD3z8g4b7DsJ+R60fb2UrT6ME9536qPH1zMxXkWU8Uq6H+7J/SY7/
Q+S+Un7z2gsd88l9bGscn/6cNe5TrBE46bnW2qrY5zC5j1wOQ9xnzfQnWbsh
mK84pzX7XvrNf4aebNvlPphviPvkmD/98ff7b7zxfNiF8OmkDpy8UavZnXXD
ZdxnrBT/P/jxdbX2HsztLTLcpavnu7yg1lDw8yi5j+XZZzHzaPbz1AYUOTBm
/RG+i/fPBysh2B3Rr7Ktzhydh8V9st8Y91mHzfqUN66fj+NYx8Ga87SxzNMj
65TcJ/uNcZ/cjz/n63863tkKo38/u9TNG94/yH2yX437ZD/bTpwf24Vdrs29
wz7LuI/+NNeo7enm6n81+VTHuI95le03wfptjGr2Ac3ch/6MLo6go0W9tdn9
S1vkPtlPFkK38/y09+PPzy9wn+wnR+UcjEPcl3VNckeiz+oDmbmvpm9m7it1
bvkTydxn/KL1sVmeuQ/JTFXWp5b7aL/3g3XvM/dxL/BuoWx7Zj+uUf/GzH2v
nj27/9yJ10KsP+MYK45V2S81u9dQHKDcZ7zd2P8g84SxQeS+2nHlPvJ6MM+w
/ch9CP1X84m8fX8eY2nNRoWc/XCfDFyOt9w3xH5j12V9ymXX7zu5hXbPrsV7
aQr3TeW8ZdvJfTyzautzfqdVzzVm963qSLPrJvbSd0hTfIHhPmTqObJYl/Go
9eOtbOVpkc7OA/Ml7ltguxEGzDbBfNzyXCX39Z5Fj/+8f+Pe4rMP7nv9yrwu
BEJO0JL7sP8h2Pb4dH9thZ57LD9MPNNa5pP76ttvhvu+eLAXsuDjic3tCXFf
L5drhftgvpL74DVqNrz6yrGQyNdy9mTYcRq/uPPBemPcxzFq3IdOrt8nfIHO
Rf0GdEYZIWp3Pboa+m7JfTkGcCr3GRunTYdzsx3XQV0739Wb20WdW/28zGuI
sC/+njKUbWZ7uI/zyHPqq9gh0e/MrZLtN/LBZzO9F35DyL1iXhbZSU6VlZCw
qUWu0AtdP3NM60NxvfBP5Px8dC3aji3R/Zs8gm0enraelHFnZQyivHUQ7pP9
0AeDARnnRw17Pnx8tZHWHiqf1mpGlNwn+5XcxxgwdxHYz3oN9Jn2QJfVuE/2
MycRUuYTYh7Qp5n75nXQ+9wXeVwfzG1/ea7pF1pyH2PLdSEXWn1MvV39rOS+
nEsRhqP+uLWu1bUz96Gjc6/I/NrmM/fJU2Pv/zP32Tb9diMOdY0879oezb0J
w8Kb2vgy97H+4q2zIfx/1LjPmhb0e9TXbnPQyH36X166/kbIEPdl3dq+lvua
9ztNDJTsB5PRz/KZDJi5L+bS7D8OmervaD37zo94gp4fNT7u7gaDWdMvM4N2
OVgvc5/vEeKdQ8t9CNsSp8m+tj9y18z6HEZ0vmbuK3PEHlSmch9SMhT7nH79
p43M7qUp51ul3UN2t+xzPMZ9Q9c7pU+mtpE5wVjBfcjU/Y63vmDrjtuW+7ay
lc2J3PejNy5EffCoEd7a+kZtejXue+daIzN2DEnb4wNKbF4tL0s881ruIy8M
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
DXFf773K4/k80x+w5L4mF9HNnl2FZR/svhJS4z7aSNuss856/PgOokPKfbRx
WU6KMS6U+4a2kfuQkiOUzH3zXDo3R7mP8TGPGCL3wUpyjrFkmfvIB8q+8d8z
mxu0XfaD+zgmuTSNd8vcp71srH6c9QbyNiXHlMuzyH3IFF/IvA3XS1/k3/O6
PnOfPbhP9oP7iJfTV5jt5L7yXENzY2x+5PcW68xT9v/kq4YZnUc97jtgfYbB
+yNxn+8+5T5klfi6TUnOazPEfYyduhXcJ/tRuw/uk/2mnI+5wf275b6tbGWz
IvNN4b7efgX34buInL/50f6pG2922yzkAj09/17jPgU95UGbs8u8LXJf+cxn
Wcl91tb1GaR/KJ817jNX5DeF/lHarFax7cl95G3jE9/O7N8Ja3XcV8TYbXyc
W+aLcy7hvsxp6rU5F6TXOZX7cr5HWZL/EPVkjmF9O2IZ1uU+2kP8nDkutOmg
d6GDs44YOUROYx1sxDptceTH1A4ylfucI/9duK/Jzzju79nU6O0vp68YR+dF
1NSetd/8u+twXzD8bD25M9mXdnOsnIOR/nG/qdy37D43t9Ay7rNGhONprCfH
MKZviPuM9TTHh3bt/Fwquc/5yTn0hcs5/2rch+AHaQ1zGI94OeQwuI9az3Kf
7FdjCto/pNezvqk7+XZV/8eW+MbLPwy5+9l7Ve7zt3yW2W8K9/FpbG/kfT35
k479WMZ6bHMet+Q+hPXPnbvT4z7Zjz5Hx1f/ncJ9CPvAopHLp6iDkKXsM9tf
5nEZ46J83Mx93XxvbW1yH32jTyxtlSXG4kLnPhX9Ng3laSmvc92ae3ufXw/u
k/3oe/o1b7PKMafmFo+xSHa+XHeE30fFfcvq1mfu45P3GXIfPp9TzmMeIbmP
ZUetJ29lK0+VvDPN1jcm1GiX+eS+5r5/ef/ND3/bfM6k5D73x/bHMx1uk/ky
98F06n4s9/kg8y2r315yX679nGsEfBPvJ8ee48uZT/49da0Rri9zX+43GexJ
1OnL3JeXHTtzOWL5/vLJhwvXUnKfXFTq8ejY+EYi8BPbhk3t4W7kryfHyRD3
6ROXuY//NViPnC4I/Nfx1ePGPpR1WNuJPgxTbZL71MvV27I9qco7j+ftCd/L
xzc6/b3h1GtdLQZYSn1VJoElOrZs74OmVt9OHIO2Ri0FmLu9J6zh4Hf9Nc33
Yq0D64Hnvst5JqOd966H6FPKvvAo/EUtPHP0b5L7lBxHp30r18fjnqU9tM0a
1MgQ92X2k/vi+dL6jHLtUVPt0dyurR1tMve1+TVlPuuLmPeSeMZl3Od4N9fb
jL/jSN/XuA9hjptrqJcPtY0DLLlP9mvyeTbH7GqPzLYd4j6WE2vE5/HXn9n/
+NPbIQfRIfG5hPuQnUsv79+4u5gLc4q9Se6r7WNeUrlv7FjahJhrmROGbEWO
T8l9zB1sZXGNX13puE/2k/O6Oo4F97177U8xl+Fic4nqP8o4wRy1fJLoybIh
58/cx2/rDpQ8ZC02zwGXyX3LxrBmP2SOMR7eY5n7cl/nPDhczxhLZLtsPp98
nsdH/cB9Gpvj9HnZY+SW+y7dudytl3vo2ym+jqWswn1I5j7Zj98HufcOIrDY
GPvJfYo+zLDfVO5zPmcb8JHryVvZytMkK3Iffpjk58zL4D7ztqh7NO9D59z3
2z9dCPn1+80xTl7+KFhIn0+5j/88nhfmXInne8t96sHdf2+KzxvjPfOA0ib+
O/O79Lkf4rJn0YDu1+bi5vujr+9WuS9LrpXX+Xcepo1vwLfTdWPclyXXf4PT
9M+cyn0IOg466dA54CFZDy5al/tsZ/DA7iudHZBl5oXJ9lveOWfu49rU0Zgv
6njZhvnfkfs8NuNBG4b6wHwqtXXa0/QTNcZsHe7L8Xnq2PGcmF2rNktyBjX1
1T/u2GgK98lZvbbnXPjf3OxqK3R1tivcZ714bdXcM7a9jP3L3Cf7mePV3J6Z
S8e4T+bzWiMfTMTc7vW4T/ajj+C6XH9PKbnv+OvPHFh/NN4uc9/U/PjL/Pry
b/jJ3J5D22d7fMl92CKNWSvPy/hoM5XtSu4zB6rPADlP9uM8+L4ZA5W5j/Xe
41FTNHEfQr9hw0cH10Yi93EN+muW3Mdv9semKPfJfkO1Aob6ruxvua9Wk702
RpHvKXEfzImds9YO32G4v37IeRvmdmbyVbkvt895kbmPGDd8PanfLvfR70M5
ZqbkTx0T5pP3Ic9Oxj/nEJoqm8rxYn7XMq8nzzriUk9e+mlIyX5yH/Llg/Fz
MFeNmd1y31a2sllZFttXy+uSuQ+ugflK7tOeVjIYzFdyH4yU7/nMfb1nQeU9
2TLu438W5iu5b+E5M2rjU/qMl7nP73AfuQLJ3Vljvq5PE/MdZu7OXn2+4lzW
inju3PVoMzZJrw87TWmrkfu0z8l96rOI8XOwl7UKGt+qve7/eBXuK9d7rGxT
0r+Oz8hx0eYb1bZS477SbzdznzGHNe6b1xS/2dUJVM/PeSOzvyfL9M8Mu9Pt
s9GO7As7ZC/ThkSfmeee66GfOI66ZFPLYTfY0Nps1ruA2fDhlOuyT6VcwT2n
Tuoxm3fpDaeyb2bKTXJfvn/sW2uvh32rfZbIdNa0t7byEPfJfpn7otZFOxb0
Jds4ZrxXzzFzNe6T/eQsfTLzuuwjzb0xxn15PrtvjgV0zDL3yX4cy3Yy9jln
jDaWGvfl+m2+c4h5McB9MB72P2qwYzNDxvLqr6JD0s5Tuy9EzkLybcozQ9sT
8/Vx6wM9WW9O3GcsXdaBs13IuivxHqLNDzPEfdZPzHUHYDk47OWXvtfZ3lie
uc93HNxHn7Z1Cox7QjeGMW6nWkSyn+Nm3B/ckbmPZejjsDR6s9dljhYYL9sD
5b4PP3yrkdanLvPWWMzloM7ePgfH8s5kdtNel+sByn20M9vUsu1VNq/ZHJHM
ffy3PRyoIbVM2P/dC6e7fC6Z+2if9Q1tS9ToeLjbq8vAsnX6UtHWpw9v9jOd
KpvgPnmTGoZyn/GzvucK9pt9/ub8syHoXdiylanch2Sb81HrylvZytMiY7F9
tfwtl+58FOJ9KPcNPf9L7qNWgv+R/Jfxu+S++E+N3IQ3F45XO0+8q25zdda4
r9G9G//Nofdunqu0+/V/7y0wn8v4z4ZhkTHuixqJr59/ovF8ZT12uVPmG+K+
znbwX/Pv+KpFvFgb4wW/4DM5lftCvvgwYvNYxvFyfhCOAfPxHwf3lTGVq3Bf
r+7ErE20NefokCvM8YKeQZvR2RDtT+bXbOosNzqNy/87cB/b4/eafSYvXDgZ
TEAdNPO39O+JYXso453roOd3KTXuy+yXuU87So6jnNu05vMCnmFf+mgq983r
MTbtkJuizmJ7HtlNu+IQ9/HducIcy+8zhrgvz0vaj4+q7UWsHZG5b85+17p4
V6+Va/x6JsyNsm633Me1HTv2T/vf+953QrgHz//5TI/7ZL/D4j765ze//Le2
jxa3l/v41J49ps+ao8TrbGJoT1X3cW533NeyX762nKNE7nNM6PPI49tyn+xH
PJ+xfM7jzH3m7GVuEwMl9yHmcTHGUY6Q+1gnK5fcl/V9uU/2M+avi6NK3Ecc
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
HTopbDiV++Q8+Y/aDRxT/T77x1nPGz32INyXfTvxv8k14fhvZ9mjh9eDO/T1
jDw2M8ZBt0a3j/i8+42Y+94c7hwr1w54Etwn+9W4T/Zbxn1cN8eLuJ42Bkq+
dVuuR5bgfPN3ztNrWtaubVXuy/ubTyPnXun8QuHvB7td+6Zy342ZbhK+rl39
tnkdRp4pNZtmjfvC5+9Bw9C0EU7jXN4XnPPuZxd73Cf7yX3hTzubm9SmQLAr
UmcRnUjuk/0y9+X8+cYZ4VsW+VwHuK+rE9nq4Zn7ZL/D5j6f18TzWHOv5D5E
/71l7cG2hZADo1anTr3a/wv7p2wP/3nqtpy/5D513+wrmbmPMcz8rY+t9xhM
KDOU3MfzE6Zg7pDPo9Z+z53513bgU6dtULsZ7YKFa76hmxrfqdwXuv4Su6Bi
HCP+lXksV6kxuKrQr9ja/D+wHqeSuQ8epV/lPoR+zzVUPh2I7audN3+X+xCO
yb0J931b2M8+hvXMSyv36TMk9/EORtbTrse8JG7Q5Xw3xnPLfVvZyubkx+98
OKl+w6nrF4KTyvu8Fn+37NkgTw1x3zL7oXk5a9xX2552L9TybbmvtP3pG2qN
+Mx92d+u1F3NxZa5740rc59Pvr/9x9uR54UYwN4YbIj7yng+/T0z88l97tNx
36WZnvXG853Ae/CJMXty3hTuYx0+b7CN7+3QWf7Pv/7f+//yL/9XfOY8hqty
H5LrohvLVWO8nA8/r3tS3Ee71RWWcWiNa0qWifris2vSnpjr3sEQ1hT4YvZb
7iPvJoKNFntDxwPt/sbyHQX3Ybsyto95gm0VPkb/pc8R5hXX5rityn2+Dyg5
jU/8kMucsVO4T59K4z1zH6DX6QNa4z7Zj3unq+XQ+ig7/t4fcp/sl7nPY1mn
wznB/kPcN49ZvBk2hyv3doJ/HfMa933vX7/zxGqFZe6T/dD50AP1k0RK7st+
l+UxM/fV9NS8nD6rtStzn31Ye6eY20DNQ3LVICX3RT6V1qdU7pP94FzYAf8J
ZAr3ef3WKc25Z+Q+c5Cgc8MNch9iLpVanzwJgfua91rDPKE/pdynHwj7HWZ7
ZWrY79L1N3o5jX2P5ne5z7Ya/3fQPi1tuR6f+5N3qf7PPskxqwl6j3Y+uQ9b
H5JzuGTuo498HwHrcR3c++YNNT8RuX2OWl/eylb+XoWa6cb0/eiNCwvcBys8
d/bmjFFu7F/euxLLhrgvs5Z2MuPuhnJvwlM59g5x2yl+oyX3cRz07KFcnSX3
4e9prGDmh8x9nz5YvNZ19FqZr+Q+lvf6vMi3OWkcixi+GvfJetbmM2cnfvgI
3Ecuz9cuf9hjviHuQ8Lv8bNLoSPBd7X8HVO4b848t0JXgSc4PnqoeTJgK/V3
dFEZBD13Fe6rrWOuoEt7LuYEx1Xn5joRmIn6Dqz3/W6uFf6grb9trJdxc3wn
/zp5N6MmCb5prX3uqLgv4tiSD6A8ZxwhvPP5F9dDQn+cnStyM3V5Jm+FcDx8
c0sfz3W4T/Zbxn0RK9r2fd9u93FXi9zl1qLLduCp3Ifo9+r++pba78u479OW
sZi/2V5n7BaxrvKg3Cf7yX3WKtSv1vFiPTbcIe5zrkSeyTaGDL3auMEa98kj
fJozRa5/ktxn3RRtkbdvvVvlPp4F1qjIfo5lbFrERs2YL3NN//9rui7exF81
dosh7isF9uO9D/lK6dN8LLmv+/+8d6m5Z1vuk/2w+50798suf//Y+eQ+2Q+b
Isv068zc5/HMR3nUzLCM+xDaDh/4XkDuW+U8/P+tOu7kTeWZJPeZ67j0nch8
JveN1Tc/iHD9cp9+NLXtynxA+Z3ApgXuw76nvU/2K7djHM1HJPfBd/p45hye
WY5ad97KVv5u5MzNxq6HwARy34z5gvtmv7UNUVOv5D7tXTLR/Hk4ZzRycsph
Y9zn8sx8mfvK49Yk78vztsZ9c5a71XFiPJfaOvCZ+5R8jk1xX403sAkeGve1
rFerBV9yH8yXue/CpZ145tp32CSsY4aej11OFlrGffma7V9ygOYa7G5jfMtU
7lOvjv8vuORx3wZkDN+Yz2eOAxvjPplp09wHX8kStunhw9shy+ZQttdpV6IN
9JFjke3YnIu+x2551NzX2c7afJ5yH98jLqat66Btwzp//M7cl69zjPtst7Y7
t1E/znUnV+E+WbuxA87nku2Q20ruk/3gPpkxxwFqt1zGfTI97Wd52KtTfqAa
9yG2z3su160ruQ9hzqJbIsQU8c4911LbtMgsmfvO7rwYPpOIOqzcJ/vBN9bl
sOZeyX0l2zTjNt0OM3Vb20U/YhfP3IfkWLysk8t9Hgd/uLDJtdwn+1lXodTn
szDujLfch9APZS08uY+cjPolbmIc17FvLcsXlLkvOAE/7TVsaAfhPuageYjk
vjwO5ZhoYz1M7pP9xt7NlPPkMLhPn6fMfdToG+trfbijTYn7hrY/cl16K1v5
NsiM6YbWofNHnk65L9Xujt8tE5Tcp1716OtGP87Mpw+kzw45K3NftsOx7TwX
WJ/FkO5d2SdzzqoxX15Wcp91q3J9QM+TuW9Ihur//n+P/5xsMCw7GPNl7lsY
qwqn1SSYrsgHk/cZ4743rzf1BInfox3m8GQZ/Md+cp++myX3yW3PH/unENZp
Y1iH++QX/kM/+arZTsZDwq8u5XTRx1S+K7lPu8kq3Jf5CP5Dj26YarezqRDb
iO6t7s428oB5IbW5qKvDfGxLvBrshy7rdeXaeZ5v6jyqcR99p78qv7EH4VeI
kE+U99RwH3yT98u+ZrbP+8k+CB6fXaPj6LU+8x//M2I0P7z2207X3ST3yX78
NpcJvCQPRp2/2XE8hvPV7Whn5j7Zb4j7uNaok9jWD5TR3YexNt/+GPchl/d2
upypua85h/GXY9xXPjOMIWpqhzfra9wXx5zdE/1+nz/ThrgPW1DOzcDcRZ40
98lt3j/UCoT7ZL9Sr+Y745C5z2M4p2Vk4oPyuXJduoPU0y71a+Ps5D6YgdwU
COxZy8Eiq+Zlct87b/405ONPb6c53GzT+Kss6tW12gs17lOsvbYp7mv+s6ex
le+V5s+Q4ePZTuo5yH2rsh/cB480dZiWC76bxprKfblNY/yNYK/GX3HT94p2
RLmP5zGy6fMsk1yjEe47/sGdEPJ2LuO+VeXI9e2tbOXbIDCdOTkjR0vDgXJc
58vZ2vliXcl97ba/+sPe/q3P9jrmy9wnpyEl99VYKjMi/0F37t9u2OzD34bA
l3IfzIfcvHe947uS/fytTkpcoD4ykdO+qAufj2NeCM41xH7uk88r983b0bfb
1fI7TBH8hPIY9ng812Aoc37OZAr3If959lrUCPzJL34aeUbJ2YmU3MfvzH34
eVpjwTws2HVkPvw0Zb5l3Oe6nGOEen/E8XEs7GnmK2EMS+5THx7jvq4+dcWX
s5S8Tt3XeKZGZ/z2c1+2Z0X9wDbO8NvIfXmsSsF/07i+fE/Bc7Q3zws4ayr3
yX5sd/z1H0Qf0yfm5peZtS8TK6dM5b4yT6fXZH8yDsu4L2Itv7rSzU3bVbuH
atyHzqt/LGN794udzoY7xH3a9YxVy/ankvtkP3OAUk9dv0/qEhxUf1MXLG1X
JfdxXgT+oX9gqZxbTO6jjeZZoZ/kwMx9sMJQe3I7NnFt3XjdvhDcJ/vBfTUG
kPvKGvHWn5D7eGd4/e5HIVfunl/gPuq9U2uuxn3wizk0am0+LLvUMpH7rHtX
rscmRLuwhyJy30HOOYX7gt9nzxnzh8J99lWuvzB2DNot942x37rxf9b58N3M
k+Y+/zu53xjD16/cCZH7Nn2+I9e3t7KVI5KwzyFdLFef+0L3b/062b7kvoXj
tcwn98UzL/FO5j78H/WB1JdoiPs6H8qHt3vcB/MpP9u5uv/c+eshNe7r6+1N
e6zJXuM+hfV5/1yLd4z7+s/i/HtRF8ssMebrWDLfAveZ1yXLAPcN1XrnOzF8
y7jv56+8Gj6mL77fiLUnotbgz34QjCf3GTdQcl8WeEbuydcZefG+uTmJ+5wn
bA+/RPzMw3k9BPu68+0rcmDU7Hqrcp+5TeAe8yLCG9ZyeP65f+xqV1y8fLKX
axJO5Xdcy+wY1D2AOxDq0cEf7I+N01wxfIcxmZeN3+d7nQ1pKvtx/XIpbUPw
R+X4kRew9VGlz2F02i6L6duKL6q1pue1HBqugyGCxVs/VtnJHDuXP3onOOAn
x/5Xqke9Fzrn3Hf6YNxHG2gL10qMn9dL3UKE68Smwj0sk8ML6EKZ+2S/Ie7D
X9X6B9mP851rv4xjajuM+nxLuI/xt/ZbjtuM2nmz62aM5D7Zr+Q+fRWavP97
3Xk6n4kK9yE1OzZy//61Be6T/fQHzWyvD2Tmvsx+xJ2tq7t5bL+7nHYwTtQ4
h9/MT1tynzldejXG23Zn7st6qXW/l+n5h8F9LjeWqWQA76vIWVvU5zMPZPiy
fvVhcJ/sB/dhu/rm61shX/31do/7jr378f5nnza2KdhRflnGfdZHf5L84FiN
cR8CN5PX5UnknpH76JehvEDL5ox1x5FldTPWvR7vE/IHPekxQ8xt47s/uO+w
znXUuvdWtnIUErF5clzy2fz3d67NY/gK7lsm8N6XD/rPnL6dq85fch//1dn3
UlufzIdgUyrPW3Kf8ss/7M7+vz4aPC91wbVHhg/XrO017nvr2rXIofJg9t+I
XL59Z6nNz9jExRjD1Wx6JeuZ37NW128K9/V8Nwsbn8eA+y5/dKGrmY5+Rg4V
bXedj+YS7oP12A6mk1OsqefxpnIfuTHRqWE89V/0a47TvJvs200bvptzX2a1
Me6bwkidj2HrT2edbc4DyyHYi7bcdzDu8/8/jtHqa/pTYp+Ltr3+bDAV4vxp
cmXc6vqBNq3CfbLfyZ3nuhyqrMceidB26ywyzuZY4XhTuS/b7rCrOQfnuQVv
LuU+WC3qsV14KcS55LjKkzXus39Zrj03+0SPcZ/vOjy+embmPtnPeyRy4jye
CzaFTXJflpL7EMaGGD9yXRKvlmsnTNWT5T5sRcu2zbkxh7ZZls/FsS+Xy33Y
jbgnmC+MxxD32Z7MffM28H/WxGrLfnDfi7/89/3jLz8XUnLfELsosGj2o3T5
mO/nPB/b4XEY+VHoO65B7qvVn9ik4GNrbF7JfeV1jl23XCj3HQZTw/Hcl5vi
vlVi/7h2ue9vaW4e1rgctf69la0chch9cF63LHNfYoehY8Bbv37/TnAQUuM+
5NZnjR2wZjthe+TaJ3u9PC2Z+TgGjMY5a9zXCTGKbZwizJe5j3NoI7Ndcl9u
y8Vbl0LIO0qdQSRzn9fKb479ET4jM8Yj1ydScp/LwweurfewKu/JViX3ed09
lks+njGmBfPlbWM9uXfOXQ9558q1rn4CMsZ9vq9XrJsuE164cDJ8GpdxXz4G
Oj18RxvQa9UX0dOJ6ZvCfX2+uzva3zHuKYe3OTvLHP/rcl/Ym2Z8Evr5jKXU
883RwjXmvIkcB38+5jz+lXCWtbjoG5kMvVxu4Tj6i5pbxfPUcnqWNkvO4XER
ftPPkRPz8ybeS1sHjMA1sR3tafI3NvY0/Uz17yQPKEJb9+5fD7/fuB5q57b2
uTjnjFvM7eI84LqYA1O5T/Yb4r5ybij6mmrLy+9u6MuS+2S/Ie671dUDaPpY
9tM/YO7z+t5S7qMv6VPaRv8658mD5NjLfbJfyX32FZ8cU+a2X8a4D5u1tSbm
HHmty9lS475cy73Zrsnxk3PaZO770X/8Q1c7Gh+2VW1kQ4xA/l904pzLr+S+
qXXenHfYCeGsV3/1b52f4LJ2LYvZKrlPLjNmVO7L7Bcc39YiK7kv219rbaq3
oeE+vt+533x/9ezZ4D7Z76cv/Cx4Q9Yo2aV2bO2QsIT2wSncdxDxfcnQ+sx9
1mOcGmPK+Ju7elnfcnyZF+6T/cKnvB27vB/tLo+T7yl1IMaV42j3W4f7xthS
7kNqttypcq/NabYq9yl/W/O8q8hR699b2cqTls6eh7/mOwO1TM7crHLfyas7
XUxR5r58T8Fw1Prxt9zHti9/0Ei0Y8YcMp/cx38fx7bWQ8l9C23MtsjEfVlo
p9zX+x+YtfF3f+wft8Z9x3c/Cp8D2s+x3LbkPt+12j+/v3lx//T1yyFD3Jf1
8CF7E8y3MIalz2bBfb1t29+59h6+m/hqyn0wX8l9WdDN0cmDO2bbYHeawn3w
GnYsbQjaK+BJ9Fb4Zir3YffCx5P+kiPhvlz7zXOswn2yS+a+qJnW8g52lwu3
mhyakRd0pisbs2VsHfYutpOfaCvXJ+ccBvdxjKPmPtlvU9zH9fBJvJ/jbUwe
8odLv+i+v/ja/+lxmnUCzXd6EO6zXt3b537WxGW244AvJ9fLdaJz2xZkKve5
nrZFrs7ZfrmeCG0ruU/2y9zH8fQvpa8in82MP41THOI+hPG19l/UzmxrXbAu
akkm7rNN5rlHN8uxpxGr2Prk1rgv2wDdjv3gPtlvHe6r6Y7BpC33yX6sy/n+
poq1zUru4ze5XYZ06NBfH4/nd4E70Y/N7eGzLnNfrb5fZ8OdsQO2xxt3z3e1
29fhviyZ+2AV2OWNN37Rcd8QayxjCdkvcmfO/uM24QdbraG4hPuIjfz1z/65
Yz65D46t2TAZc+2C1sNYlfuYK9Ya6OKJH/ZjUWtzpcaA2NoR2A+G/s0v/y2E
OTraV49Ln6v6eOWcniX3rWKDlfumjlu5fst9W9nK5kXmK+P0qLnQ/W7zvJT7
yn3nb34U8rBii5f7sM0Z78e+cl/XjpZHOK9xvCX3Idjkarkrq/lFC1Y1/o9z
hJy/Hj6hSI378n6cU72n5D6PxzWyzr6T+TL3UcMCwWcUu4S61RD3YUtEqNNX
ve53B7ivrK/+1m5IyX0wn9x39caVBd4s4w718yu5T8bjf0I7IDny536pt1bi
vnw880mr4/L/yXlX5b449+OrXb5OpKmpvNf54xln1eQhea9ll/c65luV+/TN
zNyHLupYR56JWdvv3jvfxSqqd/MdP0oE/rLWxKfdf2nTt9wnbodPJvvRT/Qr
/YTY1zXfP/1d2Z8xmL/LnsctGi+m0Ab4hTaznxwXvDhjjq5e96zP9YmkH5k7
UVdv1j+cC8G38+pfmppvkffmwksdx9a4T/ZbhfvyHDZPzphd3X42P84q3MfY
mY8m24v/8qCpjdHUhO77OoxxH33JMtbJyZxHluO+Mm9Ojfuwi9P/9J/2QPxY
EfYtuU/249nEuxfrTShzv8/5u/nMfSzPdf3M48m4mD8lc1/WM7/3ve/E55g9
aIr/H+thM+1L6N3wJLIO9yHah2ibtpoh7tOXkrmh3dZ1OY4zYkIL7nP/sCHP
+kzmy9yX98cfU+6T/TYRU2h9vsx9Vz66GhKxog/Xy1dKP8p9B7HtDdkZh64d
noONiO2U+xBY6c0TP+r4T+6T7xS5z7wqzIVlbWR7WTJzX23bKWOWr1PfR2tl
cG3LamcseweR+1Puq61v8oi9faD5ddixlFPlqHXwrWzlSUtwUcXO1+M+tqtx
3+WPwv7Fd5gvcx96duY8uW9Ze+Q+eQdu7P6H2vi7kn9+fPpaIwPcl21eXcxf
4j79QI9d2K22KXOfbcFmCPu5jTksM/cNiTlkSu67dOd6CIyHXU//TX4PcV8t
L8sY9x37/YX905cu7F/YPR12OHRqBFZbxn1jOU34XMZ9Pb/LGXtpu7A+gvqw
zLeM++g3dNlsa8QGldvW+YF+fbuxW6zJfXzKd+jffBp/Zs5DWEauifwYM71b
m4o1uc3Pqd625b4+92HjbOyUDceQtxT7H/vR53AKgi8ifQ5jm+/S8Yh3RX+9
0uujdbnP+oO0Keyvj5raivKn5+hyDLW14adwX9f/j+e5XDp76ldXupi4zH2y
X+Y+tzfXJ3PVGEVrY45xn/dVydWcc4z7sr7d5e1MemXJffrrN7bDve7a3X4q
9y3TGfG7RI+vcR/HlWem6IT6h2JXydwn+8EMcB/HK3Myyn0fB8u/1+bYudvL
4UMffdzG5Gqrs5aA3Ifov9nk+r3W5RyW+1478YMQ/FeZ+7WYvnV0Yp612nvu
fr4XMpX7hjiGftR39DC4obQhOoaZ+xwrbHxyH8Jv5on1/DL3+d4gcx/zYpkf
pOy3zjWW8ShZ5D6uwzmfa2ccJOZP7vN/tVw/xn1PIj/OJuWodfCtbOVJSmcP
y3F9RU7H3vaFTTBznwIjkXNF7quee8AHsxR9Pr0/b9zb62x2vbyTp/v5Z7rl
lWVyX+18Q9yXBa4zDjFz30Jfcc6RayQPCkJt85OXz8d3ma/kvposxPEl7iMX
C0LNdHR//qfMJY+U3GesHs/3Id/OGvsNsaHHKLebyn3q9uio6KLk6tT3Tw6k
vS/84gcdE07lvtLfUZ7BntPw3fkutqnRoZsYKBjDfCk17tMWuDL3zfTrYDZs
lrNPbKewG8K10w+0z7wwCO3hmByL77QVLkQ4v+xFO+RB2pKvm5i33Ad/+aSx
23K+ctya+Mmm3zL7BSfPxhre0w4sr/Kda4u8M20bbJt2UeyeCP1Gf96Y6S5y
n+y3CvfJfkPcl6+3rA8x5AO8CveZC5O+ZyyYi5m7rePA/t6Ly7gv+PnhbvQT
Ps7moeH6fV80xn2Ifqt8cn62QbANsl3mvuxLay6azCnZN3UZ92HPI4auzMk8
xn0IbTqIHqcOnGP6FJktc9+ynBpyX+1cmfsQnlnMPcZGf82S+7LQB3Kf7FfV
pRP3ZV/Pph5NMw6Z++bccKt6TVMlcx9C++J9zpeLx2OZy7muIe67vnc5RO6j
/gGyCR3evihr9jGG8BC+lXnbMqZP7kPgWsaUfTP7Rexweh9g/9TiA2EvbIjc
V5vmFedC5j6+Y5/NMZgsn5J/yPG2b7wfV7WP5/i8ofWb7ouDyFHr4VvZyhOV
HLd3pl+jr7cdtr5Ux29IZDK4jzoNg3YvfTKzfW4gTyi+lwi2v8x8uU5g5CKt
2CO7c3DsdH3PnFmSkzS1r1xXtedV+E7u6+pjnL7Zq4Uo82Xuq7UFvhtaXuZt
YdnZi2fjvx7mq3Ffqddib5H7kDHuWybWPljGfTVWzN85jjkqpnBfFvTt8py+
M7WedROblDh1Be5DWCdvNb/Pd76mtBk/O3lWsV6ddaDR17CHIuwX+W6eUu6T
/Ya4L/r7/vnOVzZzH2LuINbLd8QxNuPU5NHJ+UKWzdMp3Oc1N7aXpj/wh0Ss
Ac91YkuzVvsq3CdjcbywPzM3Z9v1ePBvd3rcJ/uV3BdzfHYMxqSMTzT2LnOf
7Af30a7c55F/dXYO2pVzkJbc19WEaJnTmpNZ3yu5D2aAcWSiUjfM3IegT7N+
qj/h3Tu7oedipzEGreS+MT01//a9DPtrLyz343qYi8at4TuYuQ/Rbun1lsfg
HKvkllloe/Ihxa6Ejp/XHzRHSuQpOtlwkNfc1ar5ssn9efMvex3zZe7TPlhj
RHxGT+xc3X//472QzH0HtRdl7tOvlzmhLSyz35hk7ivHzLmROTFzn+fN3Mdv
5uTU/DFT5my+jxS5j3uYdsh9CPO0tKVjtzRnkdxnvfZ1uc/3QHnZpsZ303Lk
evhWtvIkpeW+pfa3Ga9ErfaZ5BoPtW1zrpYFX9HTKQbvVGGvktGsGdiyjMwn
93XH0qdxhPtiO5an65P7FrjTOMB22157ChaucV8XI0m/kAfV42bmS7UQp46R
fIePpmMQ0sbl5WNl7stMI+9FDr2C/UruK+P5VuW+KTr3FO7TFjjPI3EzdP/c
Vmv/Zeabyn0cT18+dVptcvptwhVN3fHzXX1r9eDD4D50LOqmdayE/+dnF7t8
kejoxk31dP62RrE5GdXN0e/lPupGyDpNnpHZ2H/eiMvYLjiljcEyF471CLV/
WXtgGWM1OTUbdqMtxsvpJ6r+uAr3yX5Tua+shzdlbs5zxE7nPjgM7oObrfNu
rFzk25yNLbU3yAsq8y3jvi8fXe3GXRayhmDJ8UPcR/09bKIRZ1ax149xH88G
fXSjLubDG52vsPdpyX34fjE3Hj683emkMtAQ93X3yK13e37dNe4by1uRuQ+x
bnypd5ZS5ht0HpXcp284461Ppu8h5L7GR/DHIfwuuS+3g76Sy2vct6q9RO4z
fyb3b2n3WlXMTyv3eT9xzTFnW+5DLt46Gwz3/MU7Hc/JfS++f6eLDYQ/5D7k
uXOL9bjX5QKf47CVTCb3TfXtXUXyefQjRjL3wVLMo8x9+gUf9Pwl8+Vlmfuw
BTM/5D5EH1e4T/bj3jOvrty3Trs6+/8S29+3QY5cD9/KVp6wZP7qLZd1WobJ
tsGuxkNmpparcq6W3rFkoMx9+kLKTQOcVW13rk93eiAPaXF9C5w5lAPT9slr
lbbE+XOt+5QTtcazHQ+25x1q74L/ZuvDOcR9/Wu9HjY+dV/1qTHuQ5eznrox
dety3xS9Wn2xy1/TxthFbbu23rT6qDr3FO7jU9tKeV5ZxVwS6sgyX437tPkN
cZ/1v7VdwWsI9i54DdsMevTlvZ1gMYTftgPJ54jcMbNtOJdt+jZyn/15EO6L
WsqFv20ZT4hw3Wwn9zl/ct0Ac4Rgv0SwpR2U+7KYz5VzqgPDa3AeepXfp3Kf
fqrWIok6iTOWo25gV5Nhti2slblP9svcl/MWeb9HTcI2h2vzjmGY+2rxj83y
piag8Zcl9+nrGtu3tiYZvsZ9WeKefnyzi8HqvRtJ3IfOib6KrqrtjhipIe6D
DfG3dFvGpuS+IftDjfvQg2E3+ARWzbF3ct+tL86HyGy0T/1f7tN+UhPrBnI+
89vU2Mc5bL6Wmh+qbIOU3Cf7DTHgslhJjpl9NjP3OY6MfeY+5PgH/E/eCa6D
+2S/5068tv/yiV+EHDvxfI/74EAYsjZmQ8uy5BqRcA3cpQ/uKty3ap7Rkv3i
PUHK/aNfqNtsmvuWjancR24ahLkp9/FshfOy3wy/T596KYR7aZ12+b71285/
R62Db2UrT1p6XFTYwLLtquMz7VaZFyv2wl6cXea+ZO9a4D6O6flHasR3NeSD
za6Ncl+3T4Xrena6zLXZNle0p/st91XslbkvMvct2BiLOuph1xvgvrLuXmx3
6noax+sL3GctMMT8JUhmhhr3kcsBvRSbEz6W6rXrsB4+Nei++L9lTpnKfQjf
YQD80mo5X/BlDb13wEc1s1bmPu0UoZ8+nnMfuUjMoaFfp3ym8I4+3vMn7jMf
y6a4L2L/unrsF3tjaB+N8TltMC8m3KcNUp4ojwX3wS4yFO/pQ7cjJ8yjqwvv
EcaEfo66cNRnf9SwdOSgmI2n3JfZ76DcJ/vZPhgz6uF1eRHGea+pi7a4LnOf
7FdyH2PDtWl3rB2fewBum8p91n2Ht7o8P+3+jBG5cJZxX9RNeNTUp+hqNrTx
j7R5lPtm7IoQH3jm0ktRh5I2Ov+HuE9bo/XQ9U8tuU/2y/q6uja1ojP3yX5w
FQxSYz+5T/ZzG+PinDM1ffkvXzbvc+BOty25j3uda7O+e+fzXXCfx0f3X8Z9
9lvJffSBzyLbmbmv1O3lPtmv1K1r3Ke/Zumba585Fpn78rnpB/eT+4jd7N4/
zZ4dmftOXduLT+pAwH2yH9z3zK9e3H/29XdDMvedev8PwR2ln+9UdiD2zhi3
dWx9PkOm2Ez13WQMyB3jecu2y36b5JYp/RGxp7/5YYjcl23rXe3MN5tnj/GM
9P+qbcnyt8qyTV77JuSodfCtbOXIpFIHIVgl295K7iv5Lx1PW2HHjXy2zDeY
N6bCffqWho0Lf079O2WsFa5x4dxn5swX34faVeM+7Z4l4xXcN9SGBe5L/R5M
V9bdW8J9/NYnS11iCvch6K7o1trQkJL7hvTlIRvbEPfpx4ZuQfuGbEbmDZQ7
Su7L7yblvjEbjjas7P/q91W5T98s/Q2jZngbu2ZsHe3VJ1E9nGN4/V6TsXqx
/v75/Xst/zmW5N3h2GFD+TvlPvahL4wJzD6Z1mmg3jpc4bjrZ8n8oz4Hc1S+
U19lHjNWcnXUjiu4T/Zbh/s6X78vdnv5Oj+71+Sp7XxUJ3If90DHPN/M51vY
mNvYGt7DaC+U+2S/zH352Fyv9WL0UVb/HuK+bL+tyRD3ISfOPBNCjk7uA49N
X5XcJ/sxPtakq9lRHFu5j+tnudujt8Jlcl9mP3Rt8zUi5uaXYWQ/z0s79r7Y
CYHhMvch9PPbbz4bbfCeL7kPaWwa9fg5uc82DemctAsW9rfXm+eGfqZD+Wey
jbNmD4znXpG/P3Of753MO5O5HHaSvfP+9ANjzD5//MupLmeP7Od21AFEMve9
e+1PwXiwH59wX2Y/ubDkvlz3Y4rQdhhrXdbI3Bc1dyMfV//85VyW+4ZiUuXz
TXJLtq3V5lfUY2ntnXJers/Hb69D7vP+W6ctub//1sq3kfeUI9e9t7KVo5LE
QD0fzxF/y5L7SjbKPo+DNeFrx9WW1sYV9rgv2eNWvcZV4uqq7cmMWOG+ycdS
Kna8Ie5bOEbB2jXuU4cu3+eXOl6N+7Sx8L9AThVFvlnGfeiviHUF4A5tJAiM
MZX7EGLmZIRcu0Fb5UG4L9duINd+83+/E98R8znKeoo6ds5Zsir3zWPZlnNf
zstRu85abCbfbRfHcTzgB/KOIDFeM/2P5XAW+V0Q9ok8L49v9vJLmnNkrM/l
Nvt2Fe7L+0/mvgdNXQl9YOlT6qQgtf7K4rWNcZ/sV3If3M+4cB44qMwXo1h3
bwr3sZz5Tt9b/9ExZP1CTZTEfbKf9lJ+2w/2Bccf4z4ZF+7E9s/ce3OnqZGI
lNwn+8ECjAEc4HKE30Pcl3mE9TwbGPOsd8p9jJHPD1iI/oLv5D7ZD+5je+eY
sYWZ+2S/qGsxO5d1ENg3c5/spw6d7ZI17lO/xV6Y68GVenHj89C8g9OvwWu1
PgRinXO5r/RV9boz97le/3W5L/c12/luIHNf5mR4fYj7kJL7EOZBuR3cx6d5
O0vu4xPu4/89sx/LGI+zOy+GZO6DB29c3+l8WpXPPv1w/+NPb+9/9ddGDsJ9
iM+cMe4rbbBjuYjkPsZ0Ss6hVQTuK+eT3Hf1o7c7zpP1eDfh/bSJeo/5vli2
7bfJ/nfkuvdWtnKEssB9q+yfc6Ekm92qXBTtSNzXHe/0tblf5Zrct3a/FNy3
Vv/Ujltw30rtKbiPZdRlqOVizFyQ16n/xLvw1p8Owceqxn3mGwm2aWu1GTuG
8Jt4IPRbma/Gfcac8XsZP/DJuWvcZ5xf5j79AJt3163NsfVJ8zf/j00s0jvx
P65N6iDcF7F4LR9kGx6xVYp8of3MnPu5Njzrc90++o9P+hP9bJ67+85CX31b
uE+WL985qIPT5+aLy/lZrSWCRHzObEx8H0H8psJv5gC6M/0Y7HdA7hubg7mm
HXlZOA9zBOabyn1Ra+/S8RDmHdsx7nkb2m3cpNwn+w1xn3Zb5pfcJ6+OcZ/2
yXktvmY84Tykxn1IHK+NczSPEdL4PM+5L7Of360rnnMe1bgPe1/Wy2A2Ob/k
Pv3prM9HbTbsLTXuY5k5LD7YfWX/xPHvd9wn+8EZrJ/Hhc5tOtm/uFyX9Vk+
PQ+6fW0buc/8VeFP/Nn58Bc0Lkzuw2ci56opdWe2oVZh6cuY45Zz7Yeso1s3
vqwNIffp71ez0zK/mPO5TkeN+7KYtzPyjnzSSOa+V8+ejVg/ahnJfbIf12kN
iMx9xgpevHS+4z7Zzzi2g3BB9g9eYK2Wr75O/L+MZcwVVKsz0jv2QN2+MfEZ
bQ1I3y3IfTxbjdczv8s68XtDMpX7pvTTk5Kj1ru3spW/W8k1C5Iv5jrcl2XO
fNf2V82F+bSK3Fcuk/vGdNxSP5eRSu7L+qpslf09l3FfZhc5AmE7v7PNVO5T
aB9tKrmv9HlclfsQdHn9GaN+YKtrI/CdHLdz42QIMX36eLIcHar03czMdxjc
FzFzFb9L7Zjl8i8+u9TVbMs1FtDx8UXke44n4/zad3OOlByHZ15UbWZPlPta
PYfzUweQY+f6A+a8qfUR9gM4vdZPy7gv27PQfWGqoVrw+EtO5T6O4bzx3tRX
mnmhHb3GfbKfXJcZxbrv1iHU1lPjPu5zzsm5aYu+jhy35D7Zjz6h/TIfcv7G
if2PP3+3x4CZ+9AR4TTEcSfGCO7L7Cf3We/AmDI4YIj79DGNe/9xc7/p65a5
L/PMhx++tX/sJ/97kPtqLJD3L21/xBrWuM9t5+PT5z7sg9iEyMdPWxgL2c98
IJ1+j603cV/JftlvtGyDzxK5z2343Ln0cmfny9ynvc33Csx92Y/+zrVJ87mY
68Z5qvPLfvfvX4s4PyRzn76L9Af2TOtlwH30xYU/nNm/sPN6iNynj+grb54I
u6Lct4naCVU2q3DfMsn1ABnjwWOP1GzPfVjOr+xn4VzxeZu57zBkKst9cv9u
5IJddb/DkKPW57aylb9nKfO2bOWQ+rnCfdgL0Q2pCzDkz7mODHEf54Hx/N35
OM7+nxFrx2Xmy9zndpk9ZEmPo31KPliF+4LvHn/c9UXWR4z3Qg9mufkqg7sm
cp/5O0vuk+PQgzlekxv0fKenadMx5kobDXYYtj1z4aWwadpfxng19cl3U36+
fl29zAHYvqy5dljc5+/c5+aexF/VWDtzjTR2nb3wY+VayjhNvzumsBJjzHL8
PHMOV8ecPjwo9zFW6K1DdlRtbnAmujfHWZX76Ff9NdWR2Z7jzP3v9rrj5vcF
Ne7LOZKGZIz7uvoZ9893/seeBxnjPvdlHJG4V995dv/cuV8Oct8J6le0dkHy
SjD3ImdPyxIl93k+fTO5Ft8tlNzX6dKztrAOu4b5K0rug2FoJ0xF3CK1BWvc
5zVq2x7TuaMOxdeN/+oC983ON5TDQ+6zFjjcij5uPGDmPs9jrshsx+E4bA/f
IDWdfp7HeXF5rW1yH1LyUua+/C6LcZb7Gvt5/5iZ+3xv0NUcn3Gf7Gdc5teP
Gsncxyd2Mm2fwX0zoSYf/Qj3yX5yH5/HX37uyJhiTJZx35Bkf8oh7nPeZl9g
ue8wr6lWT8Lftz5rhLhxuc/aj5n7GPfDbCOxufn3UetzW9nKVjYr2Wf0qNuy
KSlzurgsc9+Qbp79Pctc+kOSdW79P5Fl3JcFfdXaerk9tHcq92UuKGMRObY5
K6zTV+O+nN+xxn3oj/Bc2NnaXJoIuVFC/798squlhsBH8FrOAYB4zCfJff7f
Z+5T54taa+3y8O1KtSrQw+Ea+j0zBT6gjAN9EbFnG+Q+2W8d7pP9kBeOfzcE
PV5O0QYhz2mDrMXwrcN9MW/b+RJ2j5Y/qV1g7equlsoXH07mPsaXuZD95hxr
xiLXhh+7X+fxpE1uIm2J2a+7xn3GGeY5mnMY8TnEffSPvo1Re3DWbriPa4D7
OvZL3EesoLoo95x1SJCS+/ht/t2aLpe5j23gJhmJGDXj1Eruy8eAvcghioxx
X5mfUO4rt6txX7ZPIiX3jenTcp92L/aFeWTFVbmvJvSNx+P4y+xkmftGj3u+
qSVu/2buY2w4L59DuVqRzH3GydEnch9iX/3pjzshmfvgDKS0LY35cR6m0P7S
f1bebfIbz6X0n1w1ju573/tOrzbfYV5XyX0xT9rnYuY+JHMf61hmHxyE/3h2
lMuMz5D79LE9an1uK1vZymalGiuY5Kjbt47UcnkiVy6f6nzAsh/eKtznturI
Nc6S+8byOrq/zFfjPuuWa1eE/Yy1Qe9HX0YPRXd221W4T3uXfUGsnrqvddzp
g2DN1h4B422S+xDWqc82te92u1p26uZfPGz25xz6eCLq5LfaXPJcH356iL6s
TdxRP1+r9i71V0QuQt9HjC2a53O/s2CDjToF1G7rxTU18Uns18QQzWXOgNe6
a7YmRbbV5bohCHGFmen058zb/eTY/9r/zc4zG+W+2n1hn/Jew/cQzK+8/RD3
yX6elzFzrpCnhzExJ6xtZOybti/nPsaDz+zrWdp7ZTbZL3OfYyjb0RbuMWu1
jHEf7w1i+zaulbnK/U1c3CD3zZgQwXYE+/HJfWaOmJL77s3uC3Q2GI5PGXCI
+zpbQsvvjnnJfbDBvXu7cfzmubCoK8JesMmy2gur+KRZrw2ByUruW0WXlnOQ
zH1uQ7thorH2lm2nj+BTjiNLyX5y1DLR/3Mo12a0veU+RH/cV3/1byGZ+4by
vcJ9tp3aEoj9YV/yXibzBtwXc2PGE9SUQOS+XB/jSXIfz0FsfLTVvi7HZIz7
yrEcm4v6SyNyXxMLfzicV/tdshv9L9N9cn++DJH72J840HW5j/vbeps8D/IY
x/O4fSZtuW8rW3nKpM0Faj7QXv28kv2sN7GkBsO3QXIumPg949pjZy6HDjbE
fWP1tUv2K7lPBijjq7DBIMu4r9RJh7bP3GcO+ZL7zB1qvJR2QBmAtmE3Q0cM
O0rKc5K5T5vfEPfhi0pbjNG729o1WA8LYrfRVmYtNHR2awlo60LHZ9ky7gu9
v8J9nmPLfc1y49+wlf3omf+58B7COZnfC2ijy/bWZeyXuU/2k/uy7yzj6PbM
K/s16qTPPhnfqdxnbRNtzjIX4805reewjPvYz3ni3DSXqvbhGvchYaudbc95
mZ++w+jiT1vuk/3kPmw3+laixzPW+EzCDkPc95Nj/xh5Jo4d+6f9+/c/6PT9
GvfFHPr6RnziS2gbcu3rzH3MPdbRV/CMkrlviP2mcN+Q7pvtHHmdrEZuT3Np
rHN88/9Hve17V5ocMF/fCmG53Ac/eX0lL8gdHrfkPpdPtQ96DlmtxiEss7Yi
7ZL7ZD/mCTq4dr2h3JL52Fw716ltMnNfKfoXsv9bf9pb4L6x+bBJNkIy92mn
PGhs2wJbESO6+0qI3OczqMx/uqnrGrqGGvfVbK5lrJ/cd/fz/na1eMfy/Izl
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
pMZ9tN0aBO9davJlyn2ywZiOqe4+hfs8Vsl9Q+xhPlHbXHJfsMGsT2HanCNl
TO+WdXLefuseIJn7kNoxh7hvKiPYb/AMYm5N2Y92OM5RPzJxn77JrFulDdjL
YGjtZ1PGdh2p2d1y3cjMfdrzhmy6SOY+4zKniLUrp27v807um3qtfL5z7UJI
jfuGcvcctsB9sp8xgpn7GItcuxK7ILlCL925HAL3aUvP3Ic/6FHrsFvZylZW
E+vDd0wG05Uc13LfM2990Mg7V2JbPn9x8vXJ9QY3wX1Vzqv9Vip+n2ELHOC+
Id/K/HkY3Mdv9X7EmLjgN+qnPb7RMd8Y91mTKvKCtPaPJq/JxYZlPrvY8U3J
fdp2hrgPdqD2HozBsaxlBsdZRyHnraB9tJV9I199hfuyrp65T5/bIe6T57IP
HufDDxDugP/sQ+IJZbjGb3NegwHGoR8au+NOiIyIbn75o3f2r/5lJ4T9tUHS
ButuW2cRH9MmTqzhQ9oE77GPsYq23VwtJeM5DsR7Oa7adbHD5lyVsB/Lws9z
xmgI44Duvknug5myTTh8TGdtb+xU83w05F2hLfT96dMvhzT2ssUY1THuc746
95g3zMmGD5q6kohzXu6T/UruM87PGpIcO/t062/pfKlxH3675ILx/Yu+oXAg
v5dxn+ynnh65N7/crXJfHh/WY8974eV/CWE8MvfJfurWzpmxeKtSD892L9uf
uW9q3W6Oo01qajwgUnKev/PyyG1ScJ9j7TXrOyD3yYXsO6Rv51punsdcJ/AW
uVPMa8Oy3J6pdpyhXC1+l5Uz9+W+iGd94r7sp5q5L7PfsrZl7jtM3nBuYR/l
fHC0+UBgjWxzzNxHrYpavCJzQCafyn3OBblv6thxr+VcPWPy3Lm+niL3eY/m
thxmfy8biy5+9GF/ndzH85ZPuQ8hp49+GugWn3xxK8YR2XLfVrby9yc/Pn2t
76NZ474ksF7Jfc+fvRwSy1u/z+r+bYzfquzXsamxeZnzEt8t7DfCfT9/5dXQ
Ucv4ozHuK/XBg7HfldCnm/fszfFK7ut8NVvus352l2ejramc21JyX1drrMJ9
cgk6lLXeEBiB82vXy3FjB+E+BHtL04bdnm9eoxNf62pI2G7bi/8nti76oWHg
m50u/7Ryn+w3hfvkOwT7n7ldaT8CgwQbztqJXu/4Rd+1NmFraSjm/R/jPtmv
5D7Zj3kFf8FO8lps29Y2z3k1zYnqfJX9Su6T/Wr3YNRZvLc7zyU0kxr3yX6Z
P433U6zHiIxxnww6zzt0sa3zbj6XOvdln4JSNyu5T/ajP3McGzk1cp3vKdw3
pJtHvo+ZbodNBb9CdHNYZxn3GS9m2w/CfezPNbk82+FyLQPaU3IfttHIZejz
4KsrPe4bY7+SA9gfXbjGfavm4piyrXavob7N/Zv9VNc9p5xVstUmfRJzvY3M
fcwP6wzmOEN+6zebuc84SlhVuytzoMZkHq9aN/LxzcnXCYeTN8laEUPbXf+k
OU7JfdjDjEHO3HeUMjZvnQuZ+1huzUDzuSJwn+zHNketw25lK1tZTeS+3jLj
+Grbt3k7w4eTZbPvNe7j9/FzuyE/Of3hPNeLvLYu9yV/zd76AVbN8X4v71wJ
2btzqcd9C5z3eO6Ppq9ezuU3hfuW5WepcR96pX5+6HfZtmduuF5uxQHuC5Z6
sNvLaQ+XNT6eDf9Z+zvifVbgPn0lc55663Ujn39xvWM/+IJzy0XmPDkM7rNP
uBbPp/4ud9L+bCeUA7R9autCqP/udevTSp/KuXfvne+uiXWwJn6DfdY+H//7
J15/Nmrn6TuU6zFk7oNZ2b+L32zHlvORywTG0w9Z+xD9BX8cBvdxDsZT9pH7
9CvNc525aO34f//+/+hkCvfV2E/b7ps7x+I+YUx8B9K8B5nGffRp9u/l02un
r72/nb817mMO5louXgf9y3Zj3Fd7BtSfCYu6d+QFIdZxJsTzEdfHHK5xX1k3
IJ4rj5f7HxpnGX7M7Tv9kvuyTl07hmzib/R69Pyh2LdlvMI1qWPSNnhf7pP9
4L7MQozPEPfZV8s4NPueyn34gSBD8Yzlfuvo4dwHcp/sV8br1erPHUT/zza2
PEYHPT58bH2IoTqLmftqQns4hoyfuY994RKWZSbLeTbHuG/KPYHIfUjp64kN
7PLtRuS+Uu+A+xD46KDjddjifWpeo3zfwn3lfEXoH7c7ah12K1vZympSy7ci
9+HTaTxfty7ldIlls9+3P/p9J9YfrnIf2yeb39L2Zftga4es2fdku2fPzX03
f/f+B/tXb1xZ4D6YD4Ed0EVDt2/tNuiimfvUF0rumyLLuM9acJnXpnAfkuOt
tNcF57Wi7Wsq96mvZ51d7iNOTn+7nOt9He4zz2WTv6OJB1QHpy1hq2z1+Rzn
xzrrn2V7hv6J2MUyo2Xuk9m+zdzn91W5D30R5rMNSPN++XzHJo4L/cRYsm0v
r+uXV3ucbZ5S7U3rch/f6f9cV9CaEdm32e+y3zLuk/2itnk79433U9cn/k7m
q3Gf7Je5T2EM5Qt9AZZxX/ZLDt/Cb+bPjyHui75/uJuW7XV2t6y/ltzX09da
1sts4zq5zzEd0vlK7uNY1mkvty1zqAwdU+7Lde5K7hhalq8hc59MSmxbxLvN
uCHbweIZVNTxsD8z903lGpjI2Ldl3Gff1OINe319d7dh9pmuzL1r7hg+YZkc
XzWUi3RMpjKNx/L6sp7POmPB1mGIzH2rxj3mvrRtjrU5dTL3sS08SL5Z/Yvt
53UZSDn2k/8dIvfJfnc/v935P8J9z19c1Fuw/SHH3v14Le4bqqN4mILtDq6W
0xm70s7vPNEvGWH5UeuwW9nKVqZLLW+nMXwv/fZ3c+7L+5y+2auFgI0vM5/c
918PGt3x9d+eCOnYMtn8lraxwn29trQxejtXLwXz1bgPQXelXnmuR4Bk7jMf
e8ls5tpbhfdKG0KN+Wrch6gPoz+zXg4J+8Hts716a2PcZ63obN+w9gExXmV+
/mXcpx4u98EWOUaKPjLuRj28069nbcLvDz9IBK6w7lpm0E1xH22HSzLjyTy0
4+Llk914RwzYbJ3Xi7AM31COhe+ifEfbmSuRV3G2vcsReY5jW3sAhmcZn6Uv
p7zT+VT+9UpT6+Hr2wvzRSbNOUbgk4Nwn+xX476cSyjPY47v9dB289HQbt8t
6Ke8Kvfle9JamlwbzEeeUXxanVe+D1nGfezPPWPMmvk/jQNr/CP7fV3jPpax
b76X4VTuC+beGPdhw5YZ8/68dxriPvVy2QD9k34s9cHMfdkWVNo6Su7DLobw
7Pj0q/e6+7bkvsx+y7gnt8f4OPXCMf7IcXUew+P4TJHvSu4zPgwu/Oqvt7v3
Apn7yhoHpc3MWvdIZjbtYeb2rMVE5t+cQ+5zW9ooj8AqmfsQbVbWpc/cN9ZX
9s9CDsmJ3KfIVnBTeZ51uY88NPbdQbgvf6ffZL9yW7mP6+CeZU64Pf2LHbVk
6prUrlfuizqZs+8sg/v+8Oc7+6eu7e0f/+BOcJ/s9+Ozc91E7pv6niFyRrV1
Cb3P1+2/VYW+kvtyv8e9BfulWEC5L7+fOWo9ditb2cp0qcX1yXxyn9Ll7kw1
+oz143k7/9+Qde523FfW7uvl9xyKBXQ768HX1ifuQw+b+3H0/amGuA+hjejx
6u/obFlfnlIvfYz7lvl3eWzakWu1jXGf2yAwnPY981kg6rZj3JdziZovUp1b
mx75KjherosWdpJUL3Bd7mtyu+x2+5mfUe6TT2i3cXW2o+GlndDxYTFre8O7
bEufcUzG8mnhPtuA0ObMucaQ0V/o83nOMl7opMTJ5Tp/7Ee9RfTpbLOdyn2y
X8l9bMO7A+YZHAq7yX352rOswn3akc1di3Bu5sWVy6fCNmn8Xcl9sl+N+zwO
81L+YA6NcR9c2PnMtXGb1mc0/+sQ90Uem3Zs9Ntu7L1zXTFz3zL9rcZ9MiGf
2udL7pP9qBv/65/9czUX55SchCX3jdXUzowxtD4/U/I+H8zueaTkPubxvH7h
3Fc0c1/pk+lvua/JEdSsg9cy943Z8mp1FOSPbKMyPo2+KX0Vxzgon7v06V1H
sq9n5r5yrKcey+/WnjBe76CyzH/WuLTMffChdTbMi7qsPsUQ98l+fL5+5U5I
5j5Yr5R8rGV9SXtpp/7EsBfjgRwm95XvJ+ynvI3tMf8ny7TzbblvK1v5+5Mf
55p7xuzpS0nMX8t5Pe7LOTNTLfad3XlsuMzn/xP+nmU99cx8wXRnbi5IF9NX
MB/+mtjyOn/Nrk7vnUHu03fTWslR765ls8x9vrPPcUjlMaey39TlJfepFzc5
+xubnXW7so1uCvdZr0GfSoQYL86R6wcixvjJfFO4L7MZx0Yn55Pz5hoHMAas
or9o41/ZxPfBBYfNfUjYRO/t9phH1oPx0BlynhaFa5Lj8LNsxqSZR9pjmDul
/SrnQIka8a3PofUnaL82z4hRJFbzb+oMhX34s0tR+3CM+2S/g3Bfzs2pf3G2
r5rzE99L7XrMHbiIZTknbMl9sl+N+xqm2QsfYJhNOxt9Tv6aXKed71O4D360
PiBzgfXm1eF3P6fKMPc5D6M2Ssu/LOfcuS59jfuYt/YbYl2ViMsc4b6Iu2zn
FjXEuC+X2StqOma2H2buC5v9vZZz2nuM2niZ+0r2y4w2xH3ZvoYuvoz71hHb
Qfwh+nKeAyX3ab+c59Dps4T8y/XzSb5H/UlZD6+ZtxAZsnnavyWjyKcwCGwn
D8N9U9gq5+bZZI2FHKfFvCWHytg8WmXeMWeDwSbmwdyEmP9F26rcJ1Mzl9fh
PgT/6p++8LP9nZt7IXBfjfUQbHysX+Ynm/MEyX36VM5zuz6zVl+sIswp/vds
T75faUO2QTJPZNPSjn/UuuxWtrKVuZhLZSF+L+Vm6dc/WOQ+lv/ojQuN/HY3
JHMfzIc0toH+c2WQ++IcN7uagJ2vacl9+IIWbSdGT+5TNxuKo8nMV+M+a9Gg
K0Tdt5kubF2vzH2rMt4Y9zX/5XO/zsjL3eZ0KWtkj3EfYt1tbWc9297nc3va
VO6TGXJ8XhMXeLGppdDqrejOHN88mKtwn+3I3Of57Df63nGKNrU52hX5kbw8
UauPfI9tXULWN/r+TpxnXvOwaSM5TnKuxwXuS8x3lNxn++C6sDPO2gLP1Orl
dfFiMz6E27kX81w3J6jbw3qIDMkydeODch+C7yN2T+sLRo7PmcCBzCdiHbNv
ccl9sl+N+7QVR8zeJ+e7miAcl32w8ekLW3Kf7Je5Lz83vD99D4Ef5ij3zcbT
e5M5yD2cY0THuI/jMJ+sxcj38zdO7L/90S/nOXcOyH15uWzEuTP3yX6vvfj9
yOcit9VqneXjl/6TmSfkvpMv/XCpTW+qoJPmenOZ+2Q/n+XZLzRzX6n7l9yX
a+IwTmyTuY9rysyUuS9fY44NzNzX88mcyH3L8rKuk1OGc1u3iDbCfSX7rSuZ
++SxsmbAYYoxfnKU3LdKv2eR+5Amr8Ai76mbyH1D48H8lbHKuiC2F2H5UGzs
Mpk6F2A32qBPe86L43rnltw3ZMM9aj13K1v5byuwkja8Nj9nj/vkqRrvLZHM
fSUzPnPmw/3TF85UuS+eZ7P/XtkvxxHKfT2fz+x3agxghftWtbNpT0PQ43OO
hiHua3TfNmdmEeeX9cSxc5Y5I7LIfDXuK+v6lXXV+UTnHuI+Gcg6C+gOOacI
gp6abS/GG67DfTkHZFMLYV73L3wrZzp/tOn++U7/toZ8HosnyX3a9hh32Crq
Xvz1SldzHXsaDMX88LzMHXRma87l/I2OU+YZfqP/07fOP+w59JvjZZ82+f5v
duwzxH2y3ya5D0bq1dZr/TbLeLhgF3MGzWTIl3Uq92kXRPQhzXGAjCtty7bx
KdzX1NJIOXln8ynnSLLuXznvSu6DN7scMi072J/xzqJl+Rr32U6OkX1UGZfG
B7HhPtlP7qPP3j7/sxCYjzl6UF1YLpH70CvV9dHRYSq5T/abUuO65tuo7Sv8
RmfcJ/tlvXQVTon8nvcuddwn+83rrXt/3+zl9XV9tkGW3Kct1HmR33NwT87j
YPdCRy65r3kX0ObkTPZEdeSIcy9qVBwG66zSn76ryty3yTwicIvMm7kv+ujB
5q99Slsys5TMvkyMZUH/ydz376dv9H/PdJMb13dCyvGgr527YzXpbZ/chy0Q
bh3Ki1ubB1PvL7kPpuPYOS8O95u5ZeU+1g214ch1361s5WmRkbyXclOP8zL3
ZXbKuVsy99VqH5y5uchdrU3uubM391/+4M7+Ly7e6K2X+8zt8k3klm+eD/rM
9LivYn+MaxrgPtuIf6f5IKf4WWZdLv+vl9xH3B9i3nvjmqzTJffVak4v484x
7qu1k090V3TkKdwnPxnHhy5uDpSoEfboao/7sl49xH0cI9sHsbGY91KdFh6A
dejLnDvloNwnc+ADx7zp9Oo2lo5P2AH7HIJObOxbrommjVM7pLUE0UXR6bTZ
aXM0JynX8KS5z7mGXgL7wKHYvxgfBJbjWhgH8980tb6vhT6hLTX7ftJPHM9j
Z1tVroNg3tODch/jS5vlO/1yYRli8xDqyGsvZZ1+uatwn+8uuF9d9vGnTQ4K
lo1xn+ynbp/HL+xC3/Ttm/qUjnEfzwaE89nWnBM1c5/sF77S7T0mC3Iu1mPr
szbjJrmvlCr3nfhB1ERHeP8h74wdh7mceUe9Ve7jmAi2yuwLmfXSXKMvuKRy
PPTQd978acjdO7vBE3Puu9nF8gXHpVz9cp/sV+bzLLkvrzfXS+Y+9Xb04Mi1
2o515j7Ph31Q7ivjLZ8U9wzVLYDz8Oc1Fm/T3Cdv0VcyS+Y+a8MdlnA+5rT5
Xmq16cfmtvk4n7/4UUjHfepEM+aT+54799H+L85c2n/7j7eXct+knKxtjQRE
7kPKWhg14bxc9xQfW+4pRO5DjEd1Xfbn3HLfVrayeelY7vRi3kv9K7W7LXBf
8tPMPpKZ+3oyVDuv4D6Xw3w97iuOn2s5ZO5T17x05Vz4grL+j386V+W+si+y
vyfL5L7MTPppdvpb60PZi+sbyMcZuefxXxvhvlwbL9tV9AFdxn1jtsBaOzP3
Ifhkak9BxzYvBcvgDOwMQ9ynHSlymsx00uyDCDuhm8uV+uyZj5DrG+I+21Dn
voalaEMXKzeTM5deCpbCn4Q4NYQ+j7pfbYyT57NGn9yn3etJcZ+2nqiDSP5Q
+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
J/u1OZ8+K7h2YGPP7aPivvThWu4r43K38+3wlbkOsJb7XEe73inuMw+y+P39
My+5T//bHM/0L5P7MPxm9QVdV3Jf5k7m/rXcV/JXF8uU91QR95b7khVbHc2p
eEnqlfIbRlzG3uzt/N9mXZ9m33l7w8t9GNzyyZ3V18p+rq8Rr9y+UnItze+U
+8iJxB7FMTvObJfjXZWrCPfN+jcT+nb5vdzH/9w7rlPu893AQXBfuZa/6vJI
53opyH2eB7aLwX3c7/aul/v4377sqemyblyn7ND96q1t7XE1NVreuTbEyexd
t8Hyo14HaK3Mzcs6F/bkL49X7rMHH5/5+9Qbp4rxeWk7J6e1ZJbmK70chv2Y
477Ojxw+3/j8/d3P731Yv0vu++ruxZIHiqEVQ27o7Zu/KczXcl+Nxz24tps5
V7Vub4L79LXkFv0VfNI57ltVr2dccI779G/MX3S5QZ97WK+xgpb70jh2fRj8
a8YDJsAXzp7Uq7gv+/NpUz0irMHaL/cZb51iCJmEeJXjwbglt+P7ZT+FLfc9
HPdl3LPkwRHfXBw3yxFLw9hP1kk8MvVUB13D4fpvuU/224T7NLZ38dJblZ00
dVd8P9Nyn+yX3GetJftGDJBejWoLYZXx+nO+ivuMAWa+q8+QgdumuY9aRsbQ
WDRWend83l13c9zH+44uVn6i5HnCftitO2cP1C/GJyyxqleeqPU8LfdhNW9s
sU/reKAbv7OjXOHkPtlPnZSs6Wv1LmVD79mW+/Q/5UK3mdznPha9lwdD7kVy
XxtzzJ4Wcl9qwrTHjA9eauT6/DvYSu7DuG7X+c2r+m487HnGn/edGftGLq9a
PkyT+5L9su9cuw+bapK8e+ZksQ+vfFS5Dyt5ktH74FFxnyb3cexcf8ldpY/F
BPMVfU6taiZcXtLtbI17R/aDp9guVmr9vr56ILnact8m/JjbszZQ1jO3M7nv
Ycf60H3rrW3tcbTU5tyA8wqrvf3h7lOvvFnsmV/8bJn70NhcsNvSu6ie+bBn
Xjpa5nn6yDPFkvv4f4n77Ke3gvtGeak99xmnW1cDDPPJfS0Plmdbz30wX3Lf
bAyif2eb3Jcai/b6zv5Ncl/1BXrue7P0du18/rvRu2FKeyW5Tx/XfsjqtPt+
OevWWu5TX59t67vzLs9tmb/Wcp95fcl9yW1wniyk5iC5cmpM7oX73H/M3E6Z
S40RObD2PVPH4u609up+uI+xtLeEbInZc3DU570fa/s6ul3r1JJdU3ux1cMZ
9XLrj8nryXxADPazzhL/XrbwvGSv9MKAvYZQ+sqp8Wj9XOmXseDA0m9isZzn
getCTVCvOesijX3pN8v/B8V97q/5vSU+t2AsrKyjf3fi+WHc5Vc4d577zi5x
X97fvmPJ65S/L7/+k8rl67jP6xXz/DHdOLPX1yruy/cr5Z749HTldOpxk/tk
P7mPHofYcu+Tsyu5byovcr82xX1MV2tD33KK++b61cl9Xs/ymkxkD2q5T7Yy
fud61OjMPMyiEYNeT79fzp/xwC7PfNgfOU3u6/IlbtYc8NmxeTDm0ewDkcev
Dg7cJ/vZnw/jfmu5b+5c+L+1VFPja4xnT5yw8Oc5h3AePr8ajXLfJvvUTuca
mdJkufnZ5d2Xdz7a/dmpV4vJfU+9/Fq15L4v/+36Sg46qHpWrx25j/MEn8l9
sl/l0VXctzDilS/8Zrlv34Xrw/4aV1OHRU3zg+C+/YwN3Mf+cC14D7X53Q9r
h+5fb21rj6FVXRbq8VbN28fq4DW5D+bDjvz0b3af/tlz5S+W3EcvBY3pz/3y
5WLJfUd+0dnzzz9Z1sv6l+oCe+574rV3qqkh4zwj/VCXX7CorLb5c3mZ+1bP
O62PUjVa7g8aenPcV2I4fW8mmQsj3iL36fcn96UG4jJzruY+/V/m4TtZs9Tj
9fV/ct/w+z7mPvXzjQ/Ip/imzAP/JbOt477Mc2Oc8JPhR5cvNYP3un01jrdf
7mu1FDX19mG/mqvXs466GvjSsIG+O7V9MOoq7su4zzruazX3v4/cV66TuN4w
NWOtJ8TaOkM1ZRlz2Ax+cZ374b5O8+dsZTRi2u6DsTLG29hy1QragPus1TSO
VmrlesYiLsh88Ngm3Mdxlmuh1n++X3tVZkw7uU/2g/taPRqvgaLRuoL72MZH
tz/cff+TU7sfL/7H2HdyVOe4b1U8asq45ormDfVnC+7DLl78Vfku/Xl8Q/r5
lR5socEzxyU5DR83Pyf31Xn7c5p5m0yf0p/gWWCuotyXGhPW+k1xn9e7/Cj3
+WzyevPZmtyHqfXa6pDKffAT09v94Zrplr+0lCerlZ7up18uRjwzuQ+NTcaM
ukbjpXvlPiy5z2lsp9X9aM/jqmvN6+TTzzsjXij3YfDe++dP77566lQxue83
H98sRpxR7nuU8c5cj/EuuW9Ku6Ww3FT/4gXvOY/ch3Hc5q8m93kdb9J34WGO
aS9jJvelFtFB2mH711vb2uNoS8y34KQSc3v1rWJ1es98GIx27NhzJd6FJfdd
vPCrYu+cfK5MO/pilweT3Hfn0w+K4dtcOHtsd+fkzwrzreS+3qa4T2MaccLC
nA33tf1Fh3jZeq7rcjbncsiXex5k/d0y93W/t8k3WRcyxX2YcSbrSwpv3f9o
JfexvCyUegL6FPJEy32ZL4ZfTCxkqh5wjvtkiynuQ6MTn5HcwPSTmY7hz+6V
+6z3IyfNmIjaGHe/OVePxd4E/FXz46C5jxoqzxmsApd80bNZWzNZzml/7n0X
YA6t59WxxcdzXGAP9IBkSse76oBErqA9+kpe6IOPau8Cx5Pz7fXCdr0O2IbH
rH595hIyDd4gf1Nj/Nke02HE5FF1aLz+Dpr7HPM/3jhbe0nId6XP+RvPlGU5
58ZuGXN7HqYm0Dru85yV83O/q/tT7/LoiSd2nz/6g8JVRatoA+6ztzxWOLu/
zhwT+6ev4z7eqajNkz0x7Vsv98l+yX1+Zh3GVbFunAbuk/3Yd/KG1/mBU9zH
O/2iw9TndfHeP7lP9pN/zNX1upH7ZD+vKWNxTJvaF+6h1OSEa+a4z+sy43wt
D7AONYpgVOZJfcFV2qBYcp82x31tvWDLfRi/s+bCttw3tS9yn2OO3w0TJPdR
Z8t015vch6ElM8dpq4x1GOdzmnmf+/H/YTZiZPRhx+S+V0++2tmC8+Q+jGXg
rKMf3Cgm9z0KHlrHQoz5s+9+XH0cuW8pvjejZY7lus2RhftWXX/f1jGu4mi4
j79cR6vO+37PzWH711vb2uNonSbnuCZP7rP2DoZi2uUP3y5+cHJf5ht5r8F8
Lfdh1seV50/PDHLfmVMLv+nk0WIld3Smj5+aKuX7PgY4xX2YuafkZLLNlvvG
z6gbdb/a6TDfJtyXdX2pt2L/3u43+OaI+eS+Wgvyp073m99bc87weeU+1yf3
mSenBr29xpPn5rivTHvQ8YC+PD6H3IOvnNzX8lFqQlijljWK1iQxHf6b4r7k
Qbkv8/V2rl4Y9cyGd/B9C2fBVn1t2n65r+VZxt16xlJr0sdKqeHL/hGMO+dF
/Ub6+dnHDxbBvuvcJ/sdFPf5LiLj1N4XMqY5l3C18WD9V8ZGTRQZUA7cL/fl
deu7C2Nr2Z+RfYJ/mHdT7strm/Fhm9kPQv7ahPs4nuwTKLOxjNNa7st1cy+w
X3Is16X3YK6z5T41Wu3hZx8/8jznuM/nEXzY1uBhLfdRZ0nskL/monn/T3Hf
B4trA+M4iG19dOX4iP3kvvQ3+Y79meK+uZ4KU9xn3mb6z8l9sm7G5lq/O+v1
cj/lPo/TGKCMJ/t5fXy9uAa/7jVY5T6M+Bu/dW19ov/nfDJfcl9qach9sh/n
xvmZJ7lvVb896/lcxto6uc8xeVjuw578+QvFjOfJfe0yWfv2bVvVsFxsn32D
+5L9Rvmd9mOf8IdgO1n3MI5jk2Ns/58yrolVNYKc3/2w32H711vb2mNn1vY1
3Mdz5ql/2SlxN2NvyX0tG7XTqnb0px+Uurg/PbhSmU/uM88tuXFj7rN3RM99
tfbPvhJZbxjct/oZdWN0LOrmwXtf3v/XYtPLLtfWtXrqLfelzor5hrLYHPc5
RuZbos+uvv8q7sN3wxc3/y+5sfi8D8Y5gnKfuob2bliVz7op9yW/YanViW/M
X/3lKe6Ddea4T2OaMTjGhPk9xto3ccHPXb/3c4+M+7L+D2ZgDNs4aRdLHPjK
/E59XHs+lvzMOM/lXH3Tje0nvW9trBVOSh2SLm9vp56fHH/jp3n+fVcgl/m+
wX4YNcdzsV3YqMTFnv2rYvCBDMc6svdEycVbwX0ut1fug0uO7TxVeaayYGjK
sI/2oBj0Lru+mXvlPuM7XGvH3/tp6QHBcatbK7+lfs4m3JfvQNprxTyBVdzH
8eV0rRz34tzIfbJfcp/XUMbgMeZN7sv+7XCf9y7razlnivv4TdDfP/7mT4px
nyb3yX5cG9xj5pXah73w2gT3+T7jxLnni7X+ptw36KpcK8xp3LDlPpdJJmu5
jz7tZ3Zer/WImds6xX3Jii33Za5mxsS5JmUijt0eld4zX/fvILzPzLuU+zBY
K7URW+5T55/x8LtWQ9F9a7mP5dThbLlPjUZjh8l9bIO/rtdjhPny/WyaPQCm
uDDr9eQ+7Manlx9LJtLkvlKT17Bd24/d6cQDiU/Sc8J8zsM+jvX+1fw+tn0G
V61jrzo0h+5jb21rj5tFn4ac3nIf/2MfXji5e/b0q8v3Yx8Pwwq39MyX3NfV
sQ/zTXEf6/J35+hbr8+yX/YaLJ9lvuC+7LNw4/q5jXI601rum+r9l/mUrU8/
8N2Q95jT2zqzrv6ry91iPngL31Z2SO6D+ZL7WNb4DvGu7POFreS+r68WpsGS
86qW48LWcZ/702llduvXr5dp+A6fblPu0zJHrfLdYjwKX114axzrWmxH7tMv
2iv38X9h3l4vHh/fXEPjccSyGJPsYS5z4k+nLiDbY9k/V+4rsZBe54fjVTen
1VHRuOZZZ8Y8yzOl71PgO4XsGVi4r2e/TbmPc+w7EsfVutXKob0vzTH4/mWO
+2Q/uS81UmUxe8BjMhXxwXXc9/Szfzm6XzJGlz0E57jPPu/2g++u/bP1PK7i
PuOIMuMrp39SbBX38T9syPHBiejBYHPc1+3H+zX+qm6K05L79PvMXzx++qe7
zy6uvWd73ZrkvpcXx/PhreNLfqP7aLyRvhFMy/XzObkPxqv3ns+2hvswWIZ3
R3Pcl3WCub22Z7z5n1PclzV99oVP7uP6zBid3Cf7Mf4wmL+1yX3qarT5gFO+
dqmp69/xwn3kfbpOe6M7LnAf+0Y80XmS+/T/5T7Zj/3xc3If28oecZjcd+I3
vy32xhvPVe7DOO7U6jlso/au+lzBfev6NCT3HfYxbORLhQZunmvukzy/6zRd
9qM9eug+9ta29hjaur4IT526tsR9MNkLr79cjPhcy33l/6hls6d0zmfP5tov
oX8ey3wj7rP/wzt9T753oode/7kwqnmp6rr0zDfHfX9q6t5Hz5gRow7HNJ5n
iOvVHshLOZ7L3IdlDpz1f/iJc9wn66TmPD6t01dx3+3eV+a7oucW9YTlnXLP
fHPcR4+7UR7rBANuyn3mBBLPoX4OPwa/Vt82eW9T7quaIYvtMC17EMjYJT9v
wQ4Yvi+fyWfT7/3Dl+d2HyX3MS85iJjjV3KzFuOS+q35PqDopH7dMX3h8/67
rKmE/1LXVN5yefZV/VN1YRgn+zjw17zHwnT3zo3eI+hvqwXkdc48xFy5RmEf
e5/jx6P3cubMsWIPw32y3xT3MW4c2937Q3y5+PJ33i/nhmsLM2/YdWefvnXc
J/vJfazLmlKY5pWdJ3efeeGvluLYbW+MltWS+2T2Czd36vnge6+fr+9/spb7
4G+uBc5Hxg/V75T7ZL/kPvWEWAfT815kP+Q+2U/u++Hf/kUx87OJuflcbLlP
9uN+Ik5Xr83P+jqrCe77w5dnC7Nhl26dXMpZTO6DL1gvnFd0hl7662It92Es
Jyt9+sUHxZL7ZDHfkcktU9z361Ovdhxz63Qxnm/JfRj7w7Qphmp7NqRfm9yH
1ii/K9c/f38UA5f7XJ6eaKUfQv9MkvvYL3MgXnr+B5X7ZL85X32dT537i99u
zZ/cZxwQS+5LXZF2Hc7PPhJTlEX5Tl7EWu5jeeJmMp/cZ6wRXpT7DpP9qLuD
99Cg4a/sN1XHN6XfornsYR3HXiw1cKvvFdxn7DnfOxyUHbZ/vbWtPY5W+zfM
9HCA+7I/A/Vzcp95mdTmZf2bbJA6Dn5P7K9Y9LTzWcx05uM58NqZXxcr+9Ez
H/bCO+/vvnT87drzr9Tz9VowlfnimI59eK4YcceW2/bDfWM9mGWNk+S+orfS
v4vVrzF+Msd9yXn4z8ZZ1HiRIYxlyEC8c79w5e1i+rr25FrHffiFbhN/uO3h
19alTXGf/GQMTc0C9frx040nbcp99n7PfDl9XfudwZv6WEUXZ7GNvXKfjOOx
wCn6SY65Oh/GfRh7uc9xN18w43UwNSxtrqC8833lvjbepj6Lx5/TeZ+gdguG
rwg3Zy9Ij7fq6/fb3y/3YWyLv1/cOT+6rhljtTndzp/6+inuG/VUWu5r2Q+O
s7YQnoK/ZCeMz8QH1W+d4j7ZT97LGBxxuaLR2r9ParlP9pP7rPH02izHEhq3
c9xHzwaOLdf5wx/+RWW+lvtkP8YbVjM3lOM7ffXlyn2yH9wHd2W82bpJuE/2
a7kvucR6wOQ+jO/YBv87z+3b50bch1GXZ65nxrgzNwLu41lw8sSLu++997Ni
/C/3yX7/+MT/OeLx8t6u4T7z2OSd5KvME+36dXbbb7nvzu0PqzZpmtxX8+Ee
dKxk/qzcl70GH9aS2eyxCGdxnMl9nd7mauZS5yW5j3XZ2z25byruo06ndXvO
K/d5ng+iL9x+LblP7c5Rn4Y+p3Ok6QL3EQts8kBZD/qj7TaIBa46V5ue14PS
Lp2yjC/LfY9iO4ftX29ta4+j/a9N+rP33CdnlV4Mx17fPfLmiWIvvvxs5bqB
5Tp2unvvUo0Blvu9Zz5zJuW+zi9f5j547uh750ptofdycp99BO0hYW5qch/M
N8V96599g5Zne3zdPGP2GWlqBtPKfcYQ4D58kqx3wu+R4+a4L/Vj7Mt96/bp
jk9WcB+GD0wNmr+92W+BGJTMN8d9c33O3adue5tx36C93i2b48J3+ma+294r
99nzsOt/ca2sV31Qxw0/Fw62xzhWY7F3P3rk3JdMmteA9ZBZY2q9poyAqWla
+jh8NRhsltzIObFnSNGXqb0tdpZyaj0n6kRgJeez77shC5b8076PQ8bq2lj0
FPfJfvvlvjqu/XXN9ea+1rzY0MhhOn/Zbm4ruc/reI775GKPH5YxBzI1M+El
riPP0Tru4/2D+bhckyyb/Kj+5iruYzmv4459+z6fi/vAvuvGKFvuK9fUp13P
dvbT43Tf5T7ZT+57+tn/UuzH//h/lXuSafAExnNxivtgH3z3fL4y3nPc5z6w
v1OM0upi8rfVDpX7ZD/iX+Y1Fi5ZcGhyn+z3wW/+ZRRXwuQ+2Y+/+KxoVGHk
vU5xH/mnzsM62h7d5LriA7exPvM21Wth7M6ef61Yy31wUcmd7esUW+5T91P+
wabGdE6LRrNv+hRHyJLJfVMcsUmsjVxUz0dy3yZcQq2b3IeZH8r1h+2X+6zp
OEgOSe4rrGcdX28j3gvusz8fy8J9sp/rS+57/cMbRQ/l6/vDmF37481yLtvz
uez/rNfj3K8Zbz7o+N6q8d7a1rZ2Y6iJg/3Wzdv3a4fzkvtgPozfF3qey3gt
97Xaj8OzZeA+69yLn7fgNPpBtNwnw1344I3dk28d2f1g5+ViyX0yH/FB2JAY
4cV/PV1s/hl3Y/R/y3yV+x78vvpWLftMct9imv6XveXs1zbHffpB/F6bD2td
VXIfzFe5r9efkBntR61OxjruS+ZUs3CK71Zxn1zXaTkMuazGrdhn6u1kh+Q+
e1RMcR/TyBMsPmbPKMQLjeNlLIP57bEgD+yH+2Rg+x0ydvYPwNChsE9a6m5m
/LbUX/Z8xv6zvjwn2bPru8p9JR7Wr5fP9hU03mUPvdQnhdXLe4LF/PjGQ2x2
uCYcF69Rz/UU98l+67iv5u6eOFI+57sOtum7Du8R1m8vyE25z/hqOe6+ZtOe
62lFT7Svt5vjPmPdmd958sqZUcx+HfclQ2RMuV5LM9yX+6yuJ8drz/aW+2Q/
YmNTuhxyX/rvyS5qwLjfU9znu53sqWDuJd+3NUT49+Y8vv3mM5X7ZD+uhVKn
efqnxWTXKe6zHhFfFZbjf+MVch/TU6OUGKS1h3IfY+i00jOh5z7Zj/0uOeO9
TpH74djBffRj93vjYnKf7Jq6pMl9GPorjE3ry2/KffvR19iLqT9T+nTskQta
jRO5z3gS14C1jnvdr/1yHxqj9Ndb6WMl97077tlX+8obAwzu828a0371u5vF
kvv4C/Np7flcdQyb9uHci5V3Evs8F5vaYfvYW9va42bqYq7iPmvokvuM+8Fj
8Ndnd68scV/Ww+XflvuwKX1QuS9rvKued8N9b7z9RjH24c7d85UNN+W+jOEt
53IuzzfFffqjcJ494axLSu5r42fMY46k8RKZb4r7qPcZejeN92MV92n4QEXb
RB24hU9d/J+IM7bcNxx3d1zGRDD8W/sRZA80fffMV0zuUztE1tA3JS5Regv0
fQ6MT6zjvlqTFdxnLaH5xvi2WvrgWVskHzJ+6od+G9ynT37vfhxLxA3VnpSn
2Dacp9Zotf7aMadTFmjzitlf4kbJfbCM9XR53lhvG2sr/QYW+3sQ3Cf7zXGf
OZy+c5dlsobVeCDTvb5Ynn3gmoJd9sN99sh0nawPDZnMRcaXZ+zIdd2U+7gu
coz4yz7uhfs4ftfH8r6/sJ8fY+H4tNxX/mcfbp8f9WpUq3YV95GzWeoGF+u6
tdguPacxmGiO++wLh009g5P7yGu8+cXOkj86xX2+J5lapz6l3JcMAE9Ylyv7
yX2VtRbLwHxohrbcJ/86Jslzcl/mcsJ8zz3332ssUO7L2KDrqtrEPfephcO+
sM8t9xlfxYyXtnmk/C9PJfc5z14ZrtU5nZonaxf3YvRzxF79+d+NuG/dPsJX
sM6qeeQ+cmL3ul/7OR57S6zjvlGs793gvr62b9TXoWe/5L+21zvGWDD9+L9e
Lyb3zZ3PVcfxqLgP4z6wj98q20/PjcP2sbe2tcfNCvOt6AVa5om+CRjs9/SJ
3y1x3/JzZMxS7XfJevm/forLTHFfrks+9BmS3Ie9/uL/3L15faf8f/TID2b3
M3NRp/a5PSY5xd4M8lDLfcaX8J1KHOurq8Xgijnuwy/JfnOptdhyXxt/++qL
i9WKXj592xb/44e03Gd9kNyH3oY+oXGmKVvHfficpX6o7ytRNRIW4+X85mSu
4z6ZjJgdvNXW/qlxAYdhMhvHo47MJtyXOakt97EfLEPM1P0ptWRfnBv50XKo
8TE5xX4FWPYGUAcnudEYZ67vceA++8qpIV/zILnmI4bcsgVjZBxOHvIzOZ2Z
d0l92u2+12HqqhwE942Y68subp7aRdyTvpPy2i61jXvgvjdOPFW1Rb2HOF71
PokT8hzgXvfea7lP9oOVrds9euz5YhduX9r99MtL9bmxjvvspeJ1ynEwr+c2
uS81Zbm+7ZeBTisMkizacp/sRywJf10tSRgQ7QZ8Suvgkvuyzox5qF+D+Vru
0yflGMkL9Vzw/yruw/An9fFTF1Lu41gwmIlYGvuLtdwHd6eG6RT3pf+c+57c
x3f8ncoJzXiq2/L75L63FuvCiKGSm+DzQ+6b8+tlP+upMM7RVE/6OfN85TKr
uO9h2A/uy3q+Tblv1Xzq9CT3wfKb7NN+j2fWB+vjeMb6RrG9OU2XrP07NaxD
BkzLGCDc5//7OR+Pgvu81+S+dey35b6tbe1grPS6a6YVDc9TXZ5k6ePwxqlJ
7sNeP3l8qb/B8Fuz3NPd6Z3PeGUptpZ+1yb3tdx3Y+EzYBlnhPla7nv+qf9a
jP/Royn6ZwtL7qs6D8S9vrq21HOiPIMmuE+/FD859V5a7rP2DI5AQwT/7v0L
x4qp+S/ztdw31MZP51yu4j7Zj7oqcykxetXthfvk2qnp8FHLfVUfIbhv0Lu8
tsSvXd5Wdzz6eMy3H+7DOC72B3848zrxxdnfPLf4vsR/GCM5lvHmOA6F+x50
n60JNQcOHpWR6vJfDWzifPaGyJou9o9zU/RfFn/tw6BPO5X7uZL7evY7SO7D
uA/sAZlm3Cdj72oleX403yXshft8BpWYXV9DZ40c06w19Z5lO/zdlPvYh6xz
RWO+82mG+yi5T/ZL7sOsk0z9XafBGdlHM7kPg+XM5zXmWeKfbz9T4rBz3Nf1
mBhzAMY657jPfm+wC7mKJRey37eW+zA/y/udrunVyn2yH3+Z1xzxKTZI7jOP
kXlYl2PRcp/LwkjZa6btXYEGCbV2soTr9u+cfkpyH88n/0/ma7nPGKHfJffZ
b2LuN3KJn5v+fXvxo5P7nNblqS+PveduP0zA765x5DkdlzR6Gmjr5rWvhLWO
m3LffnijjfPJctbuLdX2vRuxvan38Wq7NPV/dZngPxiPehv3IblvU87fNA68
35xf7jdr/doYbN6L+93uYfvXW9va42iF++h/F30RKvMF99lb4fiJY7sXzh6r
zLeO+9qe7lk3J/e1y6zjvq4m8FrVBK3Tm/xSePC1F35U7Bc//W/l/SEc2HLf
zsmfFXM9+JS//e3RYlPcZ3xribt65mu5D4bA5D01L1Zxn3oWWOqWmFs3x33f
fDPuJ+i04vOd++US99mjnO3id5uDhsl3qVG6CfdZK+RYVd5Y7INMmMtsyn18
xheV+9QStA9d29Ms9TAOgvuM/VRGC/4xvia3dJoMl0YsVHTd+zxPOMd4WvKv
uZ21L3Ovt9rFZM6OerCpC3MQ3Mf/5KKaW+jYYmqOGntkG5zHzBf2PQXXStfb
fugf6D4O9Wzd+cdndTxSn1Y7CO6zd0rqImnyDveEcUGvN1g2uU/2S+6T/dgO
xyffef8yP8dfc6oXYyxrrOM+1kNupf3I4TGuWbbXMt4U98El5iRzfGroyvjJ
fbKf3Pfi0aeKsQ5yV5nXe6rlPhmAY/JcY9c/ebcwoLocU9zHcaHX2Wpa+jd1
WukDkXnjaH1a11c4YYb7+My2k0HkPt9hzP3OyH3ULsp9vkua4r6W8VbpZvpd
ch9GbNHedhlTzDxS9wVNmqqX3eTDqsE71A+P+yVgnpfcL3swzLHQVNynrv/B
tSWdUce87V24ztxH6xbXzZ/ct8n6s78Dpu7LfthFm8q1HHFfxPWm+jakXmd+
P+m7Bfe1/Mf31vcl9/GMufXZMD6DfmxX/zfHVfW6+aazdfPtx+Q+dIG4r5hm
PJDzNO8Lbrlva1vbqxXeQ9sl++FNmMwn95WaXHqyf7Pcz7zcj5N9D25V5vP7
7ImevR3G9/aNWu9WfkP+ND9va3PchzGNv//04/80Wia5j/pBlz9+7Klic9yX
uWjEY4qexsJHmeK+jDW8d/L5chx+r7ZLMl9ynza1/XXch7ENfEG2aw0c7375
Td+E++Ys+6ttyn15jaSfJ2vn8avrmMy3KfehX2HMJvVRuKYyzoMWKrlU+P65
PyWO12urpo7Mo+S+Wpu1hvtkxKL53u/z7d7UxuCvLATr6veWfL/+ejpI7pP9
Hob7aq/0xfWqv51asI6bsXD2s/Zy7PM998N9vq/yfpPn6NtAPmfGgNDHKXm1
K7hP9mNdalxicBxsx//GCfnseuxL33IfBru9ufNs97kfG4w6VFjNOGHLfbIf
LMe02n/SnvSLsV7Ffb6DT3+L44PfPNaW+2A258W3pt8CNsd9qfNFziexOLlP
9pP7vAa8T6f8QtgG3z6nZ+x6ijlgU485uU/2Iwc0Gag8n/bYGyE5SP3g5D6M
/UA/x30xDij38RwZtD8v9TZwH/fjVB6n3Gf+LdvinGXf9Sl/flW+3xT3zR3v
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
xX2Zq3nn03OVI9mO3DfWqx90/Y0ttRy0ivsyn1RN/HH/jM1ZL+vdfL+cveyS
+6ypSe7Lfu/6paN6yT6fL/sZDP7D/rgv8/Q0YoHkvWKsjzhcW5toLqEcbn2b
29+U+1LTc8t9R3afeeGval2hZt2m8VuMa9ZYps8Px9lrz/HZD/dxDWDE1jg3
bNP9UT+W8TCOvhfuYxrrJTcT4zPrst96ZzsruQ9j/bAasV/PUeaLZg5p8pLs
983X18u2rf/L+6215L4/3jg7uq95LvKXHM5V3Ff0dfvznLzoNNlP7rPHIjxj
Xz2PKbkP850eY0ffB2yK+6ydlRUZB5ab4j6PF56bqhdUtxOTEY+98sRonoOI
i8l9yafUPdV4ds991me63SktmYz9tdtp91XuKzGVxbHCRJscS9VtWdPbfFPu
s4ffJtxHjiXxOGyv40x+q/0R2daqcwfjtbmkct9kT4XsubCmX9bYF9uM+8q8
Dfexf44F3Eff9huLv1hbp0e9H9w31b896/j2ew0fhOX24T54T5P7vlnR/+Gw
/eqtbe07Y+90vdxb7hv1cjh5sTBfct+R4zvF+B0n9jfJfb2mC6zHb/Eq7lOT
orv/x9yX622Xk/tqrmLTn4E8T7lP5sPmNGKmuE8dTHxZfAS1WNSinOI+mGLI
V8oe9svcJxsUPQzyLu8Pfdfsbz3FfRkb68bqk1GNGr/L7u9euE8dm5qr++Dj
3U24TxaBJ+S+kpvY95bTJynM1x/fptyXzNgxzMcjXRk5I3Ngi196r+PLg+Y+
e/+x3TLf56drPSjXgLomLs/5NZ5FHAuzd4P5nZjcxno9l2yLYys6Mnc/KuY8
1p9iHKvnzPFincQzSx+52Iax2tTFLDmdi32GNZL95DLZhP4E1tWpKcO6yn31
YHjPY8/GjPkcFPdNvZMwpnzh5vm+fuWT0fWFhm3G8Fruk/2S+zD5npzR7AkJ
u3FuiFVi+OTULMp9sl9yn+zHODLWyXv2f5Cr1nGfNYHMt3P12Cjft9xLa7jP
64SxUWuE/MZV3Ke/qPZUPjuT+2Q/+i8km7bP25b78P/pmf7xZ+9WDRksuU/2
49iux7MfFpH7vF/No8i6OOaVoea4r/WBk/v4O6Ul+rA+b8t96oa+997P6rMr
uc/YXrvtTblv9Ls3wX2baNccVC4ouX28D8g+Ga1ZWyf77XUbcF/Rd134LMQ2
czzYZn6W+zC2l1qdbR++kcZm9GzYJM+zsuKqGsCYNz+7f8T50G+B+2S/1O2U
+9qeeAd9DT+sef3nNJivXB8LHxNL7svaPuzQfemtbe27YnKfz7C+x1/Lffz9
h8V8GH0dZD657/qVX9ecncprPfPJfXPaLPrLlft6XjSOx/JOm3tmsOzn9z4c
cZ/6LfyuO8/en0edj2QMo+U+Yw28e5bfkvuSh5P79Enp3aUGQ3Lf8N520LVw
GlZyIPvf/XXcZ04bcQ58x3He6Me7q7jPnm36ztkTHd+0iylFLGiP3KfP1sWh
rBG7NjreLm74fu1PsB/uw6wNxLeV/2WdZFfN2ro2H5Zty6bfB+6T/R4F95V1
L9bZcp8arPYQND5rHM76zKzlhEvUq98v92UvSLbBtlMLFqO+0etUbtiU+3zH
IjMyrq5DnmP81nGfPdlZJ2xkn3d7tlv/t4r7kq3l2cxTmOM+2HU8vtP+Wfs8
LeuJ+B65m3Kf7NeuC26jfs9efS331djxYj5jTBiMIvfJfnKf03w+17zz4D5j
fcTS5nzQ/J8cydR6WdKHmemhXtfxYLP+dp3eYh/nb7iPbROba9eb+7KO1eZ8
e9Zrf1t+013XXnVL92tyn+w3NY91d/thvjx+uc/eDvafTPYzdxLek/sK+yXv
ZZ8G43zBgJv4XxtzX8QTczrPObkPc3wwuW9TPc7D5j5s1T0C9432d8F9W12X
rW1tfzal8dnmfLbcx/xMe/JXHxQjBijzyX1wWM1zXPAYn1c/k4e4nsxXuW9C
GyZN7sttUI+IRucc96H7gtXtT3Ll2L8kT0wfHpvjPnK+9L/auFr2Y5f7zB0l
nzRzY9Won+M+fXn18pNT4BM1E/fCfcP74uVp67gPX5b5PvnsdGUr/C985mS6
wkOfn67M13JfHqvcZ8+J1BUxjpC5oNY+2t+OfFvjL8l99hZ/GO4b8vaWrevp
PjAsx6FuJdbxyKWao2l+JvuUWqnyHdPThzUO5LL2lcj3C/YHaY+j+MexPvvV
Mb6OC9wCB2WfB4zaL5eTa/X3Oc95zAfNfbUf3Z3zxWB583nlNuZl3/k+71um
75X71G7hPmLsHBvGy1ikY5HPhSnuk/0cCzmQdXEuGbvUaUnuk/3kvuRy99/x
bOtaW+4rur6fDnmr6osab53jvjZHcMpnk/HkPmJ15oHCd+0yLfexDH0fjFHa
n1Luk/3gPns+YHxvv0fZT+47tfNCMfx8tDmff+mvi01x35x/bO0dXMo4sWzO
M8d9NbdiDffluLoMPQVhFGoPsVnui5q+h+E+2Y9tqicDh7XbfBT20vM/KDbV
X4E4FTV92MNyXzlX/blM7qOeks+wHzWEmNw38peC+4rvdOrGWMNzg7jd5Po2
7OHQzpe1edT2teOzKsb7KHV7VtVPrrKpe+TfF/cW6zPmN7fsYfvRW9vad81q
zZ91fxP9/ZgG881x39HTZ4pmCj3UMbnPWB2fu77LV4qNn0Hj/n/m6tRYn8yX
2jBrYoByH9bqj2JT3CevDt+Nma/lPvM07UsGx2FsT+5bVzdHTYN1eMl9+v2w
gPGxjDOZb2gd1yrus/7I+Fr2is99HNeHjLmvqze8NooRyRvyZ/n/3rmNua9j
o6H3nfNkTVbpSXf7/Kh2a7/ch79mTmfGWowZavf6fufJoI5pOTc9g7IPXTxo
p++r8efNfSUe28f9OV6O75Prp0Y5ndg7Z16MXmRdL0LOC9crlnmfyTMPw32c
f/5nGcw4OO9d2EeM6Yyr+9Zyn+yX3IfBKLAZPGXvd+J3WXuJwW6bcJ/XJnFE
GcjjTOZL7stxSF5mPzhnyYZz3Md3ydltvG+K+6xNc9+LjuznnR6neZpz3Mey
mRs6xX3dc7TzURlDYjW8y2N9sp/c5/OQa4nPV2+dLpbch5G3yTq6HjnruUjm
TO6T/db5z2rBbFIL6Pc8L+Q+2Y9zQ55p1hi23PewBnepi5rcBx+xPwfJBtRs
wVknX3+m2Cruk/02OVfrTO7L85rch73wmy7Ox1+s+kBTfdc30e2csw24L2OC
zoemC7moeVyp5XkYxn1ZbHEu1c5Rm2XTdfh7mdPkvlL/eXu+/vOwfeitbe27
ZiOtl9R7OXmpmPPAfP/w9qXOmnW03PfhhZM1tqXPJPeNnsPfXNttY3hZDzjV
F36u3q8+A+9eLL3b0fJUb2RyvshLdT/kvlWshh7nHPfpC9qHblPu0w/96ouL
xU+1rhDdSXzrOe5LH5xxk3mwqlm4hvvaPNFkBznq6u3Llfsy71Lu08eFHchf
rJ97dmH/3S/7O3hN7JX77FHQ6WPsNDl9Q09jzhPsIPfdun269pN/FNznuKp5
MeR7dn6p+i6Y/JWxzS96nVT93ez3Pq65GvIX6zm9+1HVuMxecm0vkLyXsq9D
4ZM779eelBwf5+rClbeXuI3+dua1Mg/zd7mPZyv7JffJfsl9sl9yn+zX1vux
Lu4FYrVZq5mxrNKH4tm/XIpzyUFyn+yX3Cf7Jfep+8ly2fe89Prr+5XIK5ty
H/8z3saxZPrsdcL2k/tkv+Q+8jvJW2VZGFdWS/ad4r78fqrGchX3Ef8ufnjU
COs7T3Ff9dv7+3/q+ZvcJx++cvonxThmuG6K+0bvnvrxy+tR7sO4Zp61f/3R
HxVL7mvZb86MpaXG553bH27Ec3KKNtdnL3kme1XYwz25j/zP1HrZZN/XmdyH
/gfbhfvsdf6w3MfyrFPOS+7jf+vv5sbuoDnFcXFsfK/77pmTlfuwUUyvj+tt
mse51u9yXXPry7rBmC73tez3qA02bvsulFhc/65A7qMvCTF5uU9dzk228f/h
70UOJ9zHu/urvzux5b6tbe0R2pj7hj5/9n9f4r53rhUzHvjUG6cmuS/5LnNC
W+7Td27nzc9z38F8Lfcl1+V2RvWISzHHoSfeKu6T+TCmp0++CffJfvieLffZ
b0BdTH0b/RziaRlDm+M+6wSN93BO0DNp80/Xcd/5G5fLftjfWv7KOjP7qcl8
Lffp08p9yWzqtfM9+4fBWqzD99rWtj0M96X+vfVW+NvGuuxTx5g65l2NaheH
Nc5V++NRq9jr8agH8+fCfXAIzGOcsthiPSzL9WDeZi7vewj3NWOl7HMZv743
tbHS/XIf83ENZI0prAQHFK3VBRNgXB++xzEfchPuYz3U13G8cE9qUnqd2Ccz
uS/v4+S+7n1KF6s2/sk+yX3quST3yX7Mk3qm6sBwrzI22Cruczm3lbGtOe6z
L0vXr/N4zQvwGbuO+7Dunp/mvtSvovcafDDFfbCd+2oPPk3uk/3MZTSuOMd+
spfbZ5pcLPclO6ziFnmvPFvMWd0g9pfcpxEbg/tkv0386U3YyW0m92H2Wtgr
Jxg/41jlPtnPGBuW3Cffp57rt1V7JvfJW+Q0Ve7rtTcfKr6XPtap6fjh0nwT
+Z1VH/fO6aVjaN8n1BjyQ+THeh7lPq8LLHtyynhyH5yG8Y5Fbc4v/rD6PQvc
J/s5Te5z/Tk/1ybbOGyfeWtb+85bz3HU/v34jTN1euW+mfmT+85dPl/ss7tX
Svzv6qX3lngtdV+KD9jniLXcV/lupn97rpf+6zAfRl92ps1xn8tnP+zkviGH
Zsiba3MjZb6W+9LP3pT79DftuywjMI11t3ECuY/8UMxlsw8an1l2Hfe5r5V3
+3mzvwC2KffhG2csz3o4eYZ9UItErcF13Je984p++513J3tlqFOBf9b5Rd10
9qPte/aouE+2xUrMpu/noP/JemSRqkez+L/b7tALnum+P8i8UfX68/i9hr2P
Spw4dIJS07HN/bzX833qmnpc/i8nyHEy16PiviHvZ7hGU4+W6xrzuEtO9OJe
St9/r9yX73TKO5OvrhbtXYx7kmXpFeK7hJb7ZL+W+7Lvh/Fyrzl1XnxHIPfJ
fsl97BPzpLauudk+R6e4DzPnlX2WkTj206d/VmyK+8z/fO65/77bspo++hT3
lR6cK3pwt+tivE6ce75YGd+X/np35/xLk9yn9gf1eTAwXDfFfXJj6w9nDRvc
h49qr/Ts0TfFfRjaMz/827+oeaPruM/v5D7fyXS/N/O1V9jt2+dG56E1mNA+
f5sw3Toff4oRssfeuuVvfXZ9pB0p99knUM5zvPmcy5uHb2+OdeN6EGZN37uX
ftfVr6Bn0HNf9lbftC/fJla5b0VNYPbts1/7KxdOFVvFfZuc070a5/HGp5dr
f732nUByXy4n96HF+fbrT6/lvrrPwX13bn1Q6/tcP9fQ737zet2fQ/eZt7a1
77o13PfEa++Uv9XeOjc5f7V3Oy2YlvvQ/cToB8jf7PMg92UcUN+3xgwb7uNZ
Qy36W689Waz8P8F9Lee1n5P5hu+X+SzzImvO2IW3Rjmf6VOv4r7Ud0lruU8W
xB8tfd8ix5B38PQXTM3OVdzXbgufFtsL9+HL2zsutU1cDsNv7TQpN+c+44Ed
Dw08k/2nU/eCv2xjU+7TN03uy1xPaxJTF1E2kwezX7j/mzfreWF+rhOY1Lhr
npPvOvfBbRlrc1qrJSLjZX6h++v7lI73zo1ymAvL3P+o77+9f+7jL2aOp7Ed
dTep3ZOHuBbskeI6N+E+ziOfU68le9RzXBnbG7jv9BL3Yeqgeh2UfPHF9h0/
Y45z3JfjZD2h27UGeI778hnH8ed5m+M+Pr/59k+KsS7q0OyLMMd9xnw+unK8
WHkv0t/PLff9+B//r2K/vfTLTjuH2Fxo/ct92Os7T+++ceHZ2jvV+r/U86ox
tF7zk9pAuGOO+zD733hPJffJXuzjXC4l05M9p7hvFfvBfYw1zPTGS0+U89By
3wfnflnsoDgoe+QR39G3vr+if1rLfZj9GmW+5L655ZOvp5j9UVlyH3yFpktl
vKjDOzDm25D7Mg9U7nvtX18u9uGt08U24qh9jiHLcM5+eez5wn1YaqBuGgtO
7mP5vewD3IexDlgPk/uuXXxn98pHxw/fZ97a1r5nNsV9JT8hOG+K+55/6bli
L7z+8u7TR56Z5L5JvZaG+765d6kYffVY7uiRHxSb4j6mz9Xzdc+x6d59y7bM
fOmPGX9KnZfkvqxRy3fgyX1TPNjG5ew1B9PJfak5Kfc5H/l+pQau6P53uXss
m75dct+qfcDPwVevvQIW/s8XX53bmPv4m5yKn0v8bqj3vFaZBdsP97W93THf
9xOHcv3622ris76H4b703+Q+x2IV92W/Ro9fPpbdMj/YvoF8Jx+WfuX3Pypj
mcu2sWtzjTs9wUs1Zsl82RtezUHjnBjXDb48dXjUrWHfFvcR9yrXTa8XZD4w
x1R1WBfswxi3ej95Pe2H+7ifsJLb+co/7spQmddJrwv5fR33ef1mP/tu/8c1
u479Ku7jWHyfknG9qXc6yX2yH+Nvr3vfD7TPoTnukzE0cg15Tk5xH/ceY0Md
HZxiXRpjL/fJfuzb08/+l92n/un/Lua9a4yr5T40WmAJlndelp/ivi5u9G6x
jMm13Gd9kjqhwzNlzH18Jt7I744xxuQ+NUKS+VruU7Oze5c5XRuYcWOvh+Q+
jp/x5H/Px0FyX9HkuXS21PWt4r52v2En6+JgfrkPW7W9P339SWXi1PbYX++l
vVur2yn3OR1fR9/nwPM8V7GkzBfch8l92KMcF69NuY97Pjke7oO71M9btS6e
C8bY5b7PP53u2TFncJ/sx/rY9pb7tra1R2Mlt/Oda4PmZ9/7ITlvqffDrz6o
zCf3PfPS0d2fvPpWsaMvPl00N6e4T3+G7+G5C2ePLXGfMb2Tbx0pMT5tjvum
4nyrn3mD9qH+uf5Y1prhwxMHmIoLtty3Lt9zjvuM+VH7h3aMeZ08+9SlwA9q
uc9ecXJfxnim9gcffI77ZA64L2vN+GyuV+q94KdlHGwd9+m/u8y9qFP86I87
ozgd6zG3FB/6YbmPfaamLTU4u7y1t0cxRX3AjvF2ag83dUnN9bRHIcziueMc
yWHprz+u3Jc6Im1uGf531ti1jJfs53xqqHwRMUo5n7/J2pX7evZL7pP9VnGf
5xAWgR3gGH1prhuYD60TdVPy2pniPjkquY/1wzGMhTGn0k/vxBOV+1LTdh33
qf/C/hmLS+aSgzbhPms6sw8k0+a4z14q3tO+g8FYzxz3ZV5lm2OZ3Cf7UVs3
VX8Ht8l+yX1wnDE/OWuO+xhv9UM7TdTjs9xnzqVMhrXcx1/YkFzDjPXJfRhx
Do7phz/8izouyX3d79m1Ue9BrOU+tkEfC5+fyX0YyxOn1d9O7pP9Ll781aQe
4hyjrfP15b5VvdTXcR/7ynhN6XTSX670yFgwX8t9pd74y3Mrj2dTM3bZ8rX7
iTZKy32p4Vl8m8jxPDCfyt4Prnem33tb3wf3Xb19pdiJKyceamw2sZdefm73
+K9eLib3+ZvGuwDZC+6byvPEblw9XXwV2e/Y0SeK7ZX7tE8uv1vX57TD9pG3
trXvpb0TzEcvv7cv9c+s6Zo/uA++s9cDNX///KvTlfnkvpvXd+q9C9upv9ly
n7pix3/5k/KMIR7Ycp+/x11PhnFPpXXcJ29mv0C5L/1UOUIfSfaa4r42Z3Iv
3Ocy8J1shx8q9/ncS+7D4I2St/f1EFdhOfgULlzHfWeuX9w9ufg9wdIf1z8q
vfTgv575Wu7LGry2bkt2ylio9XzZO28V98F8Lfelv0verT4y/j7XAfPKeKnh
WZn0q4FFvm3uq3WDkScq/9qXobxz6HMfi89Y+h1eGuuxLqbVOsnej894pOdP
XjC21mmoDuztmD9K7pP9kvv4y7nkHJvbqi6u94XnocarYzzVXHWZ/XIfZu42
f423GF9O/aNNuM/zZ8zc3hvvXzjW+U6Lv9g67vO9hZqfML/vUNocgynuyxzf
9lk1xX2yH+vimaqOCP8XXZgF60xxHwaDwH3JdIyN3Neynz31sLfO/HPp54BN
cR8xRVjHZfkOxpviPnM9//Dl2VGvg5b7ym/PYozwY9WjT+7DyBv3N8i4RXIf
xnlqe/u13OezMs+L3Cf7qYmqLqrcJ/vRT4JjcAxa7pvq67DXHL87f7i4+8s3
Xy7Wch994778tyGfM1kOe/bUxVKLKae2Wp30HJD7MI6ZY3X/5b7bX+6PCwob
3L5eLLnvxKVuf63nS+6T/ezdIPuN+rI/BPdN8lzb6132s0d79O3LHg7fBvfh
SxTWW3Cf7PfSCz+sdc1yn/Pbi0ruQ4fz33sfDO5jGXI1vSbgPvI+98t93Hv8
3XLf1rb2LVpw32h639+99HjvuQ/mk/ueO/b67pE3TxRDA4YYoMwn98F58BxW
pj3o6uFb7ht+hz6pvfewKe6zRnCK/Yw5yn36RPwmW2ekjz/Fffi0yWssx++7
fLWK+1wPPq/aEFPc53M1tV5SB4Z+ZYWjGu7L5eA+NC2L9fl1yZrm4cl8q7gP
RlGzftDXHPcul2NqfCG4Tz9oivuYD99WX531sx2YIOul8IFz35L7rNPaK/fl
uuwtr+9vjzBjjMV6Hku2Onfml/UcmQPMdcLxyjjqHHIM+Y5APRPO46PmPjmV
aaWWL+Km1obyvXqZcAj9DrJHtu9FmGZdpXE3x5c+Depjes16vZS+gf14PCz3
WRfp+VKP0ms4ew2qg8k90eruruM+r1OWhf3Q1sTQqoFvOAYZbxPuy/7xcp4a
mz9+8j9GH/jV3Df3nLF2dI77vEZk5+S/Oe5zP+EO/LiMMyf3yX6MS8m9RI/q
TndfwTtvLa4XrOW+ep4uDN+x3SnuYzzNBWC57G+T3Oe0qVq85D7qBdh/tknO
AJbcJ/vJZBjfT3EfJjva6yR71qR+WbmeF+tquQ/LuKTcJ/vBfcb+ZMyH9fvh
PozcTnL8prjv9Q+Xc2aS+5799eI5fevKUj4r3DfU7Q/ch7G9TftOpN26cW6p
nhTug/WM7cl9GN/BUDJech9/J/s37MNPGumBhoZnNfnOmF/062t5kPWxzzvX
uh72LXfPGdde6s4O/s94WVjK+Kzc94u3ji+2d2NxLVwo3Cf7eR+03Jf5nnAf
MT0suY+/pT/kgvv2yn72eJD7Pvrgjd0vP9vqeW5ta9+Wldjf2xfH04P7/qHP
B+30kLu4oNyn9ifc98pLfz/K03zthR9V5kvuG+uu3Kr5nMl9LdOt474yPesM
F5ZaGMl9WPpL1vjwvJvjvlW8519zv+S+2keu98Pb9aziPnP69Kf1eanTcn7z
z+a4D/N32X7g5qbZc519lfnWcZ/rkunShy+6+D1HynT75T6Ovfhri98Yj0nt
DOY3Vqh+ZxuPzN4BjwP3ZQ5j5ufJKRk7ZDqsl3nIydb+38V3uj6EB819st9e
uM/rKK8l4qTm1n32xeV6bjx+vuf6Lb0Db5wt1uXyDno4e+E+NDMLR/Y6R7xr
4fyVe8r7uunnsgn3EQtkPGpfil47B1896+fWcZ/XqPtuXWKn57ecH96a45LP
ro6pB1ab4r5hHcMzE6azj/gU99En3Ro2a+3kOeNvyX1tLW2Nr81w3z//4v+p
MUN6vBMjc3yS+z754nSxocfmkIeQ/q++b+kjeftcseQ+2Y95zCfJXnbJfdnb
jzHK+eS+vD7nuG9Og0Pu+/z2+WLklJJL6zaT+4wzrvKh4bd1frbcl+zHcljL
ffY6l1uS+/AN+A5mkVfkPq83rgO5b/2+f1LG3HOS3PfM8z/dvXp5Z/e3v79R
WE/2g0fteyf3Yc+++/FybmejvbJfTZdZ3mv0QZP72mXlPvdX7sM2ieN6T3U+
yXBt+Zf3HXC6mq1wH7ynyX30YeB78zST+2Q/uO+P1z8YTYf7upz5/p1CcF/2
e9gL+/n/lvu2trVvz8z3bLkPxjvyi2d2jxzfKdZynz3iiRc+9cqbxeQ+9Vrg
vsz/xEfBx2m5bayv2TwbNpw2x335rly/JH2hlvuMsdX8nZ4dV8X47L8m95n3
k1wxxX1qNPgZpsCXprbP/gmruE/uYHr2W5bLCkNswH3p76tLaB/3Yv2YyX6b
ch+swT5Rh+e0ooW42K7sBifYX0E+YpsHwX1wyu2eSfL9vH3pObdVd+b+kN8q
53A9wH4lrtbzS+mtuFi3+a8ln7X0hHh/9M6gu4YuNdf2zRrf6Wr6rtX80JHm
7YMhNjbEAT8eXTty4Sgu+KC7FvWlMHofEO/q4mpRG9j3snCsmG4PQKyLRV4b
5aoWTdBvzo10Zo19PCz3yX6y9cCjl8q1AEtxLjB5KXvQ0RdwFfdV9mu4b+j5
MmiMwoGOnzoyyX2yX3IfHM1+ttxX9DsX3JO6LKu4L59XeT+X9xcruK+cu3/7
sF6PbZx1jvs4Bvxt/XPPV3Kf7Ac70ZuvjbeZyzfFfdTkmbNpjvfRt58o3Cf7
yX15rNnDveU+dFw6XdOB15L7ZD/OGTUEcirjM8d9adnbT+5zO1WLq+E+r2mO
Q51Ue2SMfutCQ7X40sF9xP/cNnmnc9zXfjZut87PNt9TXZfkPmNlWHJfq0XC
/3Lfhze6e5pzL4f4fF3V32IV93E9mBOc3PfUy68VQ5MF7pP9nvz5C5W95L5k
v1F+50QPvY18pBnWq3G9fdQNyn2Zv7oJK8l9sh+aVzAXJvehjwJH0S8huY+4
Gib3YeRutttwfS33Mb/xwHLuvuq0fuU+bKoucBNjf/l72P7w1rb252RwX7EF
z9n7Ru6r38GG5IXOcB/91anjg/X0V+U+/ZC2V02JW8z05Jv6jZiK92GdpsXv
h1jdvUuV75KPak3bwq5ePl2eYfiH7t8c92X8q303n9yX9R58llHYnjU46cvL
fdb5JffJUPjSrMteeKyH30d85HXcZwxIVim96iIfMvUoNuK+nlm6+OmgH6J2
TGqDGgua4z45YYr74BXOiyzNfNZN1dyvvj920aeJGsVSl9f3CcfcD32SLfcd
HPd1vvjOKAfXa964k7En4/IazOc7l9KLu4+r7oX7Sl5pr4XU6QOM4+kZw596
d5PcJ/sl99Gz0Hgj/Odxsz9+B/O13Cf7yX1eU/biS2PaOC63zH1z+Qb57mWO
+zgPPl8YK/w39tscy+Q+2Q//sdTyLZhMO3b+mcJ9sl9yn/dD9hrhepH7ZD+O
lXF0ncS20PnM51dyH/fjH++ere8RsOQ+OajrHRTs/t7PKvfJfp220HodfHuH
UIcoh2HJfb63yOdWch+5jmWfiv7SzdG+JvdR68c5gfla7sttW/c9xX3E3OC+
TdkP7oM5MDhP7pP9Xr1wafcnr79brOU+4n5nP/nXwnzJfVnD5727CfexzzAv
Zvw3uU9L7iNmyf8cC9wn+7nPZb/Tt0nuW9FvYbTMHOu9uxzXy/58uY5WZ0aj
JvE3Hw/Mt5eefPZCbK9VmKv2igru43/0WuA7DO4jvmduZst9siHra7ctK/Kd
65P76MfAtvbKfcT8Ukv0sP3grW3tz8WS69T8LPovcJ55ng33VQ3QxXcvvvUv
RbtlivtW3fP6JoX7Hgy9cGu93kSOZ7uOwZcd9ERhPrlP3xGDmWAJfEGYb4r7
qn9ur8HwCae47+v7nxQbYgbdZzUV8V30Faa4z/VY74eVfun43n1N2yruM2+1
MBc6oaFVgi9K/tom3Md29E3V+cz8P5YtMcPFsi33yURz3Meyxhjxlcz3lBPk
Tb6z//bTz/5lGZuD475ujMyJVIfEfS26Lr3Oa9aHcT44Tufj/KndkbWT+KwZ
A64aJQ+GPMrkuCEn9NISk7R1amnJQ2p62j9dnQ1YTx/qXNGFX2aFufowP9f6
17sf1bzGch0t/nK/bMp9mXO4ivvgOb7nesV3yf1i3npdLI4JPRd7RmL75T7W
2451eVd140wZQ3vVr+W+6OHutdHFpTrdIuPgq7ivGxtz9m6O9HrmesW07wbU
M8paSXs4TnEfun74jFPPZrkv2Q/us/4O9oPpPO4p7rOe7vjpnxZj+/CYMdTk
PtfLfZR1fcl9sp9xRMcZ1pL7ZD+2Q54nBk9lj/o5Fsnfl+Q+dUn5nEyT3Afn
ca5hUmvcprivNblPe+3lvx/xXmvd7+L4GOC++193OpwwBHV32Mifv3OrsAZM
dOI3vy0m98kxMiDcJ/vRZ+7tS2eKcWxyH+aYDu8m9h7nkVflPjVliPMl971/
/nTNU03uYx9fPXVqkvvs1z6Kya1gv41yOJ331PA3ue/oBzfK/jPWqTMjZzNd
7pP99jNu2qXFumAt2EvuK/0Ve46S+zDifPCZNX1zNXmr6vXI7TS2B1vCfaxT
7tvr/st9GOs6bF94a1v7c7ESu/MZB9v1zDfiPvU+ZUL/D+5Tj4Xf9wt93H7d
72taW/u3SQwwmQ8tlz89uFL3w9onmS+5L/uwqVEiH85xX+szlr520ZtM7ss+
XupVqgNhHI7YDLaO+/T5jDMZr/IYNuG+Ekfp/WvWn7mlXc3jUMfXcp/HktyH
WSN3u/T868aNHgosX+r7g9c6Ptsf98m9cl/meXb73cVwsw8hf7NO0fVXbZuG
++S3Lfdtxn1ce+rPcm7bfiDturKuUSZgOa7Nkivax/GS+2S/ddyH3wxbkOPJ
/zVedvvD8l5kiJNM38OruC/jdqlzSf5x0a9c/M3+7XKf10dyH9cJ1zrTW22i
vDb2yn1t3K/lPq8HLPU6Yb457iPHkz5yby3OM7Zz/qXKZS33ZR6ncT0M7pL7
ZD+5z3kYL3oGypXJfVin+3uizOu2bi6ea3Kf7Af3ybUwLflu1Bi03Lfut2R4
3g6fsx9Fch/PUuZxX5P7sKJ9NfM7J7t1v199r9Q7Zyv3yX4cjz0T7QEytR4s
uQ8jB5LvmY4l97XxsM4HGLjvyPtXdp/Z+ajU9cF9sh/HVbmYZ2Xks67jPq5r
a9na79gfOI58Wkzuk18//fxW4T7Zj2VOnnixWHIf+amuy5ylJe6bYz97urc5
nFrPd3Ad42TOKwZDu1xyH2Op/igm91V/56vN4n0cfztuviNK7pPL1NqE+4zL
MV3uW3cfyH1T7Md6+EssUe5rdXjWcV77mXVtuW9rW/t2reW+0t8h+7cn5019
fvtSecai87kJ9x2k4e+oC5PcV3UyFn6qvdjt0Qf7wUhOm+K+kjf67zeWfPYp
7pNx2JY1aIWT+t7fMt8U97FOfNbnn/l/Rxrh+BL6vKu4L3VhOLaiPxK5cxzf
xUtvTXLf0J+9574vh5xOY59qx3AMReNvsS618fbCfRkPkiHJ98QcW3oT6qPS
54JjN4ey5b4h73bv3Odnz1n2RpMF9ONLfdjdoX7QPLqSj9pzMuvRZ6x5r/fH
OZ6ja6fXY+nO762R/159/ZIL2uVvykzZM5F50DPBF3TMiKHgO7K/LUNmHvMq
naJcDu6VyTA+c29b43EQ3Je9TdSr9Vq9cKXjIq41r3FibLAYLKEmfnKf7LcJ
93Ux96uj9yvsI2Pa9jtfxX1dPLt7b5F6lFn7uI775s5De33MGbGlTgu149By
f10/Nct9PC9rfmRfQ6bJfbKf3JfxNMYpOW+K+5hmnZ+aOTmP3Cf7tetJ7pP9
uMZPnHu+GPtF3eHJneeWuE/f13yHud8P7pXsB5F86HVBjihjpu5KiZX23Cf7
db8RQx8/ua9lv7l6xMLbfY0bRv1lcl+pgzz6o4nfv26bXCfwgb0NWu6r8anI
V6wWOpNYcl+x98+X+F7GGVeNaWtsP7kPZpKFkvuwogt6Z5hX7puqg4P7iHXC
WlhynzmhtU97y31qcOYYNPqbyYfG7pL7ZLLkvtQWTe5j31vNzjYmuxfuk/3m
uKxcG/d/P+K+Tc+X+ZyreA5W4z7LHhCz99gfPizGPqjjefV3J+q+yX3Me9i+
8Na29udkhf36GN+P3zq3zH3qv/Sxv7Jcz3zJfUdOXSj2+sn1Mf/7X3fPwcEn
XT2/+aBz3Fc+L77/w73zdZ13Pj1XuU8fU+7TV+V3235eMuAc93UcNGjKmW9Y
uCi4T02R0ns96sqKj9j3s9aXXcV9sgV+ltqi+v3EXm71GovruO/yp6eL8T3b
Upve4zUOlvGqddzHNvG5iz/fx4SMoTk21vI5reW+5KJV3Cf76TvDmBg+7r2+
Tq/qTvZc53livlJXWGMzp2u+7veV+2S/g+I+7iPWjV5KexzLLPXxqIfioAm7
U68LuIhrar/cZ94bx8287THxGb+Zex3bK/c988JfFYPtYIfMifb+9Fpax338
9V3LUNd5baM43sNwX/bW4z6lH0rLIDUXMdiP49VgP3zX4Tk4cJ/sx3EwHjIc
BotZs5fcl7Wi5f6KnM/Uf+F/xpNeEF4zZ64em+Q+/mLki96K+vGW+9BQ8bh9
9rXcx3ati8bsHygvq/VCnz84DFO7N7kvdYHb37FkzKz3S+7j+Kzd4ju5b4r9
ZAD4QPbLfnawyChHcabfXP1+8R2/5y33YZuyQ8t96Wsk9yWTsa3kPo6J2Jks
O6V/oqYoPMZnc1ST+bCRr5P1fjP9GFr/yLGcYjK5j+Wsg4T7sn5P7kv2+/fe
/DzX215W2uu4w337OV+y36pY3p++/qTYKu4j75MYIyb3wXgY3Cf7WVO45b6t
be3bNbkP5quW78uC+ab6u7uOR8V9f/rm2iz3mQ9qzqfch6+K4Vfif+GLYGpb
ynwt99nzQS2Tqjfy5Yez3DfXA69lvinuK3HHhT/DPhuHYjvWy7Tc577LfZoa
nUWnpI+rqPfAdu1FsIr79O/UhLB+DmtjjHDaKu4znpfc5/jon6a2I/49frz6
i4Wx7sW4ffb+nrnP+ea4T8aVz7uczuH64Bg5bj/fKvHN7jpx3GWfzFO+1+dF
ss/1HUTvH2YOsddasoj7lP0SPR+uS715ch7Vr4QpWNY8WGKsqbGo3mluS16a
yi2Fl/Q9D4r7ZD972HlupxioMODies2YdjLffrjPY3a/2W7eB7AR8b2NuK/X
c/H8eSyyC3pG/r8X7nNfuv9Xs6H6QVzjw7OjO9fruE9fc+gbc63jtgnuK7aY
h3xG+0WoHyX3Jftx3dvD3L7p+UyU+2Q/tpV9vq3Ptfd7cp/6qqd2Xij7N8V9
8BTrw3/94PTLxZL7ZD/WY54p25niPraB5ib20ZXjlftkP7bjeHa9a06M9F/G
v1c3Z7nP88F7A9lW7vM82otilZnnKftlTmLNZ5yLbfX/myf58w9+vfuz305z
36q6RTkpdUJzH9xOch/7SYwM4xjkPmwvzCL3yYsw4ZK/4j60zPfuWLsUcz1L
bHT95uD79NzHvqM/euuzsW6LMUAYONfBc0HNsznuk/32y3D7Md6ZrMvhZB77
BE7tL9yH8b3/y332zoQbt9y3ta09HtZyX7LgZK7Iux33PfnOxd2dc2eKXb/y
6z3lfq+y5LvOLxqmJfepS8hvLr6EuZxynwymb13r83rfJ7U8p7gPXw6fWj+H
aV0O4s4S92XfgOwFwT6yTfZPFlvFfemztkx3r+et7M0wx32+cy/b7eMp+l6p
vbgX7jOW2jIsf6tG390ux83ft/1wn/vZMdtOZRvYofOlL9Vz0jHe+5Xv9NNT
c0M20W/G1nGfy/65cF/RhluwAmYdYrtf9kg0R1jGqxr8nw3nOns2Pgz3Jftx
rZm/6HUz3Gc9y/T9WTblPvrtYWyHZ0buA9vjmiAWiq3jvlU1wnOW++Py5us5
j+O9ivuMA58p7+Rd/zL3yX785bqSceB8nt9Vnye4T/aDg2Aj8yyxj6PeMbnP
OBj3IvnAaizBbHKf7Mf2zO8kdspfnl1T3KdOKGPvcSX3Jfu9fezpolmDoU3R
ch/75nXK9uA6c17lPj/DfcT/MldT7uOYW32s5L653zm5Dw0d7OV3nizHuVfu
k9WXftsn6tiSw7qY1ZVixPnkPtmPaeq8tNxH/Zo5ly33yVFLPe4i3thy30H4
DXJfy3KOxWg8Iu/T+jyPY477ZD/8Ivdd7mM8jv/ruK889zDfYS333VhcM98m
263jPgw+++be5WIjf+z+70fcN1W3xzwwnvPAfTxP1JWR+3K5w/Z7t7a1rY2t
5T7jfjUGeOJK5T6YT+5LfZZB+3I937XTh3VcHfXJpZ5PPXbfybfcd69nI/Mv
9dWS+Vruy7ifvg5MMMd9A5u8P4ovMY++n4zRct+tO+9XHz1jjiyDHk3LfbVv
XsTZOuYZ96pIDpD91nFf2c6D7n088xIfxIib2u/bceT/vXCfcVF7qadmKPmu
+PLGaUuvjZ4T/W1kWvb/2w/32UdhivtKrueDq6OecsSLWv43ziGvuM6MxfL7
/+mXl8rxY5xj9rlcE31skmNhPPStXZcxzFIndH/o4+524BN9QXMl7dHuueB/
zl/R0oze7zLqHHfIRY+C+7geOGf85XMyDuc/8z3RcWEfbi58pJufDSw6x32y
X8t96LRkDE1rr3k1cqa4z3GV+2ApjH2F/7xH23Fcx33D8+rmZAww19FynwzF
OcmcZu7trOsbc1+fY7Fgj4wvlPdib/606rAk92Gwmb0GzEWE6eS+ZD/5rr7z
Kv0clrlP9oOhiBEa27ve+79T3Mf1nBqicnbLfeqsUOeJoWch98l+xNJqn8ZX
niixQu97uU9exMdlGbir5T7HxftLPc/kPt+9+c6yNd+Pch7UeU3u49pOTc85
a3vZj37D2/iW3DfxWy/3UeenOU32UwcGg5OS+3JdbcxxSV+l5z61Sqh726Tf
xqZmzM19GOW9Bvv5HSb32dN+al/Yz6KH2sctMTiP5z6W3OdYmd8q9/374n7H
Lv/xVOG+x4H9zCtF10VGg/vU7Uzug92ybo/v7n11qZjch/nduhjiYfu4W9va
1pZNDZha+9dPU/ezaGgt/j594nfFTp55J+J0n4y4b4rx5rhvztTulPvU9oRp
8B3hFH5vk/uG96/jWid7lfG73+Z7Jvfd7fUgM8dSDZNV3Ff6CffxRjU89dnX
cR9W3rF/da76euYmykfW4q3iPvO3YIQz54/W77r+hx1XsP974T77K+APY/j1
1AFW/kCnf+GbwTjyQOnr3nOfvu9euK+srx9r42DGO1yGsWj7E3r+MPtOZPyC
6Zyb7xL3yX4Py30Zay5a+p+erteL6+XcOjZeU15DmnolaTktuU/224T78NNh
MbkMLimx1cW5U++T77ne+M4cz71wH5yU2qH5/sJ7kWfLFPdNsd8Uv8nK4/dU
A/dtUveHreI+OZg6ZvtQTnGf7Cf32e+O/62Pw5L7ZD+4T92RYgsmhm/M1Uzu
k/1YBn0Wc0BhLblP9oOZzN2EyazlMy7Yct/V2+dHejDlefz58MyA+/Db6/uK
Ly4V3UhzmJP7jHMYD5zivsJ+i2kwHznBWHKfeZupcZnc1537TodRLaLkPnMK
0Nd5a7FvWHIfRq7p8y/99egcel5L7uiCc9A5Gf1+yzc9Z2WPgqnfeuN+yX35
nbEwuW/Wb0htzIl+eCxvn4PkvoNkGcZD/mzrHZeP+8aQ29zvxxSHJvfJr3Ce
7JfrTEZ+8tc3d89fjzq/nvv8/7C5T/ZTz5MaPPguuU+T+17feWr3zYtHKrvC
fVzT9pPYNE/1sP3brW1ta8s24r78bvH56Hvnisl9MB/mPX3jsyvFPrt7ZV+M
t/Rs6uMP6mjoS+GXtdxXej9Zfx/xPbmv1vlHzR/GPMYX9RtWcZ+99sxlS43Q
Oe4z/7LNw7OmD9+l9EFey31D3SH74DGo+4+GAX5hy33VFwnuK+y64BTZQaZU
k7H2zP6im3eO+2p/tlnuu1THjVoqzGOCFVIf1V7Ocl1hwEfMfRw7fqGalPYt
9F3+UBt1aVTTVvQ+bl0p2+Ov/w+1mIPvWsa1z3nz2vKaNnZ98/PLo9gk05mm
Hwj70cOO89XG/5ifeTGvJY7DYzSv9FFyHzmPmj3+fC/C/sFQ3A/eC1ybcBQ+
1Pkbl4vtlfswY4EZ/+Jz6eOymD+1Lv1f9pvjPtmMcSsc8MbQr2Av3GeO+cd/
UO9hbJtouiQreo1n/DO5T/aDYYjToblpf/O333ym5lAm98l+1z95d8R+RYPz
6I+mua/Pa/d5J+Ml98l+sFbV9Fysj34PxFinuK/0EOx1Xeo6vrxYuU/2g/na
XMop7jMuh24L/R483uS+zMs0dpjchxn3y96Fcl+yX9ZJttzHOWMMPSct99Hf
zu2pLQP3yX7ZfyK5T/arnNdyX/Soa3/rYbtVTLiKnQZ/4cYS97XzZFztUZnc
Z53hVN4neZiwJ/diy32ev1wn8Xf3Pblv3ZjIfcl+yYCHzXytyX1TvR38zU/u
46/cJ/ttuq3D9m+3trWtTVvmeFYL7iPX8+mTF2uuZ3IfzCf37dd8nsh9GRdh
mjEDfAY+m0M/xX3GUvSd8EGLf3D/o9E8yQcdS12qvjsslZolc9zXxhbYR3z1
1IuQ+4b44sB96vXJWrU2ro/vOX9yX/Z7k/swfHi5wHfY+IgZL1rHfR4r+5L6
Ne4DjODvAr4xPhsxHcx1zHGfOvfruA+DE2QfeBOrdYmy1MIfLbll0Vu6xOwe
dNqEWW9ozifGGBHrHGv+fD+47/KtC2WM1Z5Ul5Zp5M3JaHIaPIV+IuY8yXbH
3/tpmQedUafJgQ/DfcXe6/q/ZX8F4njeL95TzHOk77ftuKziPtmP7+Fc1omZ
Cy33qruQnLUp98l6GWeU+VZx39R6NuU+jon9llVlOq4RuU/2k/vMX+Sd/uef
f1Df7ZR7vec+2a+w2oKVPF+sg+eL+5DcJ/v5HM38zBLDm+A+9lWtluz10HIf
nAf35TrlvmQ/dEvt7c5vx/17l4sl99E3j2Nhfz///FL1+5P71D0t937/fct9
MkK7D8l9cJvXKPFCuU/2ezauYdbdcl+5tn/+QrHTv39nqScu8beM5dX+4g13
1RjcqWU2XNL5DL3LpT7mTa3eaLsrtDI36V93EKY2i9uV+8zBtBZR7ptaR3If
17I1t3Bf2/ehHHvfE2tOB+/nv12uiWu32WqAfttGjifxPEzugwO/vn9lcd4u
FuP3HX8B3tPgPrRaqK2dqg/cct/Wtvbdsba2b/TdYhq9HJL7xs/Nvb/TK/l/
TS9Aue/m9Z3yHT3jZcxXXvr7ynwt9xWfd+FX4wcZL5MdZb7kPk2u6tis0ySU
++SotqdDl/N5utfcPFe1Qua4T37IfFN7BlgvpR7KKu7TN9XPTI0a44L43eu4
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
ee+V+1xO7tPgBqanT4XBDC++8s/FYELjEuh2YqU2tO//IQuzr6l/ybGr/+L1
or5IMsRhcB/zD/3p3y+c533AuMlmsglG7As+85q0vs7zBD8TN3Q6Bvfxl2mt
hov6Lg/DfdTgeW45Ju4hxnKow702ug9lupqnvSH3MR/j6D1f4nHEBBfj4nnz
/M5xn+zHclzvssVcf4e9cF/7bmeVcX4dZ5f1+er4eX213Afz+S7J2lOOT+6T
/eQ+tVo6XdBhzIkFyn2yXz5fYDUYiHpCY3ct9/HegWNIXQ3WkezH97LoH748
WzlP5kvuKyzV63Kqm5LcJ/txL/7LL/9XMZg28zmT+zDu8ey3ntzHspzjcg30
scTkPuojSw8SNET7Y0juc53EYlP3Xu6bivkk95m/mL/LUyzX2iqdlrnvKg86
bapXxLtDDd2FCS2TwzSvL+v/5D6PB9ZL7psdnzzm4L70lUbsN6WNNzm+15f6
ZcF99stIbZinT3d8uHOtM7mvrSOcs3LPLHgu6wy51+E9DW7D+D85D+6TAeU+
LKfLffwP82nX7lwp0/ju0H3crY2v17DD3qetHeL10D/Hs2cftXxtX4dNtTrn
5vvq7sXdl5//22IXzh4r06a4T468e89+fp0PJPfZv0+/jRo2TO6r/l9wn/5f
iR3cH2ry8Fsybyq5b6Rp8ulQC8N69O3VAZH77P3ccp/9CvQtMDguGS25Tx+6
5VR8OZZ135hf39w6m025L+MhXa/C05Vri0UMTR9tFfcN9TFj7sNkGK1oEz77
lzUm6HR5RytaHb0x3yrus77tUXCf44TvTI6m8+A7UjPHd29f+lmxj/64U5gq
ewe88Nrf1HGQX+W75NzW7Dn3bXOf7Jc9y+VS/qKty/IY29+5emyUm8fYZMyQ
c70X7kvGKbmTvYYH6zaWn/xT9I76XvfJfd77q7hPbqv5AdF3IfV5VnFfMmfG
8eZ0WzZhPrbj/THHfVx71meSJ0ksv76Pm+G+zEHmvoDXvJ+T+2Q/1gk3lVjc
J917LuaZ4r4uL7m7Z1KPU+6T/dg/Wct54acp7uPYiCOi/YJGDJbcJ/uVvq09
V6YOp+wHu3kdEU80/odNcV95X/HDv6hx0OQ++A39UON+yX0Yy2ecNbkPm4pP
zTEM1nJfxt020eB8KEvua7b1OHMfNjU2K1kvczgbzp1dJmtleI9+8lJnjV9d
80RDFyY5MrkPfVBM7sOcz88c31yssNTp+a6k5z7uQe5v9W3hPBiuWB/7g/mO
Hv3J7htnTtbvkv343uknPjxXmVHu87Pchx22f7u1iet1y4B/1jbk8l8ZXROV
++JaQdez1fNcZ8lxU9y3ylruK7/RvU4Jho+B3yLzpe+mb2RPNn/fzcuS+ZL7
2twyWVFd0exJ3Wo/luUXPqc9wNAhUTvfeM4q7hv6J5weaZ7wv/Vh5ivKfe5L
y33mdtnHwD4WqTkoW8p867jP3n72oSIfD5PDiNNlLEteyVjdw3Cf8/H7dGfh
g1k3hh/54tGnCvvJSv/4zP8oy5gzmvshl3e93q/W3FyZLPuH8z/rPXriiaXY
l+f05JUTRT9EltFajnM6/IeduX6xalJqfGYfXOapI/+jLnvy/Jlial3Ibycv
X9l9440jZRx8v8Cx0QsQ3iPnGOM+MSe05Isu/AHyPfEFnMb1Vmrcoj/GKu6T
/TbhPpjD84txvHJZvi9ocyB9V7Mp9/E9x8V+Dn3VOn4n7mzt5FL97wz3tfPw
rPEen2K6Ke5blce5CfcxVmw3cwEYA8ZaPdWW+4jPwU+ey2QcP7fc18a/sFIH
3XOf7Cf3lZjKgnlYB7lf1hhOcR+mzop5jRlnk/u4VoxxovWJTXFfyX2+dXKk
+TnFfXUbi23Ch1Pc171XW+Y0uQ8rdbpfXau5ry33MY173ut9jvv2yzGj3+02
/vaouG9Ky6XfFgwKb6g58zgasb6N+lJkzV5wX773Xrl8MFwdp577RvHCZv3p
d+V6NLhvlU/+zOmbxeQ+WJB4IGynLifvIdXjlPuwd86/UON9ch+sh8l9GHWK
LffJhC33aVvu++7YlgH/TK3P82y5b+p5N8d9q+KAo5o7OGzBfuZ7ksc5/TsX
PhM926mR++rciPv0MUptUmh9Fr+ur+lSS0Pu05/SF8yYX+ubyX3ZT+Ju1LVV
Fu39iBKv6LlP/ckp7utqYrrt2sd7U+7zHXyrEaPvnDlrq7gv80iNYWHFF/xq
6N+ePqJxEvhgP9znfPYg4/8Sp3pn6NlMPE7NwtLL+XpXV8hf43TqkW65bzPu
k/32yn0eo/38zGlW8zMZD7+c7ec54tz4foZ9WMV9Xr9T3Ff+Rl/Ou32sOfta
8o7C63Md9yX7Zeys5IVHT42pPPA57pMTu/cyHy89I/bDfWjJeK/McR/6QKm5
RMwLdiq9E2a4D1ZS+6b0bnj5xzWON8d9jNOdW+eKUetnjmLLfRjzck7krk5z
6viI/bKeTa5hGZmp5T61YtQA5X+5T/bjvsyeC0zz2Zzcd2rnhXKs2Z8luc9+
6exTzVUI7pP96NP3xxu/Kfbbd1+q3Cf7MbabxqRWzYMt9Y/L2rtHGetruC+/
m+O+g+DcTcdlE+5b5fdok9zXx+U24T4tY3lLMcOM9eV3uc3wt8kpLfuWOaHu
08S2jQHKfeiywHrmoGQ/hlLv3XNf+R1YTKNXHwbTwXOY3IeduPRhYTh5EO77
55/9z2KsR8Y78spPd1889lyxLfd9t2yOAbcc+D00ni0TGsWTz7vFtCOnLozq
E6a4r7Dag99PPK8H7lPDpV3HkiZncB/G73qJYfT5bIUN7n40MF9wn37fKF7Y
/96v4z79tfreeKZeR+areWF33q/+pXly+szJfeaOtZok+LD2TrC+pqx/4U9q
m3CfNTjZn1DNzoH7zvZ1acvc18YGkvvkOk1WypxOp6M/gsEDsMhBcZ/GujMe
iMlYqReS+4txDTGOsCuaoVpyn8cCp5y4dKEY8xOnzDzMtu6waOD32ioYn/Gp
7Z9etWD7mkr9cI5f3ctc92snXy36NdjZP94q5wDW1fge9jOvJxnOc1beJSzG
WDa0ntC6PebhemAfs1e73Od1vFfuIx4oQ+f4k4daOe7+8J6GcfG63iv3eb13
99k4H5K/5v3KflkfOMV9Po/y3i/vPPpaP7REN+G+qefKujig3AfzqSdT8wT6
d2mruI97Kz9zDTJeslLLffJR+8xOPkrus76NXvD2zVP3pOU+6vy8XuA2epdP
cV/Rj1o8y+E6a/YY59QI9X+v7dIrfbGPtadPcJ/7zXnl2GC+lvu69wLLPb2T
+xjLTsuq219y5Fru4zP20vM/KNc7Y7uK/TZll5b7qlbnt8B9o34OzXer9v3b
6OHgNTM1jn/48nzp20eOJFaP52S8407um4nJ7Xvc5D7XkXzZc9+k75X7cLLZ
v/DPyjbevjjpo3nMct/Rc1c7Ta+G+3wOyH1l+vV3K6vJfTKc3IcVXSLyEBYm
93X1Fv+5cJ/s96O/+w/FDt3H3dr+r+MtA36vbak3zdT5De57mGc2eZ7G/Oa4
z3e13feDP5TcZ8wHX4GcM/1nfLquNufsEvcN73ivjeJ+c/7ZFPfVnm9NPaHa
elPcl33cs18Cfi5xp6KHsfDVN+G+sp0+Nyp7nif3sYx+8FDDN819+vv2c8je
DV/0zJe1jmg+7pf7jFMVHVDei/dxUIwYKdONyRV/bXEsd0NXA65TQzTXNcd9
rZ7k48h9st9hcx/XKufYWkLjzq7XGCfztdeLn58/8t9rPZr1f3vlvnJP9O9R
kpO4D9lP95l95Bz6jqPlvkEXZsx9XFsyW5vnmVquc9wn+7EOlmvfL61juuQ+
7+fRM+7OR/VaXsV95mPLvu4bPRfmuM+8CGvx7M83x31M8z0ffPPGS0+MdE1a
7iv9HXotUfYF5tOS+4j98ZnYBGP9x7tni01x3+0vhzpp1sOyLfe5TdZJrZya
oMl9WuG2yOOY4j61OZP7ZD/ihh5z5eOG+x42ZmW9X+qRdL5Y9Fp/lD5B08uP
aUfev1LswxuXR/uuTiZGL4VHxX25Tc+17DfFfVgdN5gvuG+yN8VDsN5Km8sX
zTqauRhgTm96SlTthaaPvKwL8yX3ca/dWNwTPsfL+58+Hlie8Qvuw1549Ye7
z738w92fLJ49GAz3N3/7fxTLWg34blxn/5+Ldc/7/7Dlvu+RbRnw+2k+F//h
7Usrn4GlN82Zd0Z1eyuf1Q9+X1mu5b7Bp1pebmC+Mff5/v9uHyszf1PuM+Yn
98lK7oO+k7VDUz5aTsNvyO3McZ/L4Ivgv8M4WOcXnxv1BZT7qo8b3KcuYtGB
If5291zt7Vb0B6p/PM99nht843uhT6NfnL0vqm7hBtznd3BfW4dX87N6zR04
j3hF1nj5nTG7Vdwn827CfWyr1X8hvxMGMdaKX/z80R+M2NTcTJmPaeQkqo8I
q8FUztvq1DgdDrz5+eVq5lpqHXOdrpx9t/chb90+Xd8RMC4cP+fA3oCM33NH
/2n39KefFt7DLtw8X9Z34falYs8/9/e7//KbDxbTd0Z5k2wvcyg5f4ylTCfr
pZ7oQXJf1/+wi+PK4cZx1V5peSr7muyV+9QpavNFWeaj2x9GP6mbK7lP9uN9
EsxqDmzLZ+Rdwq7ea6u4bxUHruI+xoxrvuQ7RL62mk1z3AdXwd3GyNC1fOuV
f6z1dVPcxzqnnsOyUnIfhsYnWjnyTlfXeGuS++jhZ692evqZ85ncVzj7Qfdb
YA0ysTTyVV2f3Oc9ZA9WmSy5D4NDUru01HH33Cf75bGyru483qrsx/0to3GM
1PSpJZPcx3TOVdF2qfqrm3OM9vX9ce8ze7d3v703lljskVnkkuZ0uS975rXc
N3e86Kl8vWGv73WszLmem2/Wx5nrYfg4+F/Z/09GjfzPOj3qAkf/9zHGli/h
viM7ncl9mLyX3GfcT+7DflTugf+9mNxn/M/YntNa7jPv87DHdmsHfK1uGfB7
Y1PcV6c151zu24T5priP/8nxJMcIm1u+rbXJnC+5b/AbO1+t1vDcG2rxWu5L
zZeW91p9mCnua325VmNijvtq/C5yNe0LcC96wSf3ZU/v5D77CvreO/usV426
Xrt0ivtcj9ynD1n8ynvnRn5lya/t44IYPrM1ffvlPoy6TPbJc4bfRGwQlpOh
0M60BgeT9zi+5Dx4I3M+v2/cJ/sdNPf5mTEyb9P36FnHqHXHsTPqbZH9Lj1/
XuvruE/2k/u8v72G6zW4OAZjlNnDO/d3U+7j+kUzRV1O9vvq5dNVA4fpcp/s
N8V9nDevyzb2P/esSFOzpp0OMzhmq7gPYzx4n59MPsd9sAlGnwXr9rKn+6pn
edHrPPZ0jf1NcV9Z14PBSg+I/r1Uch+GXuf4WjsxyX1cLy5jLd8U9/l7kLHA
lvs6vatLu7/+1bPFkvHkPur0HCfv9Zb75Eb6lXLszi/3YcQq98M2cBEG62W8
qvvt/XZifVN8aR95zpnvZuQ+NUX5vu2NLg+i+Sn3PQz7zRnbuPfVrdJXYHQs
5lY+hqw3PfbTPvSo9o958rgyNzVigLk83GcO6IWbFyrvcU+1eaBwH9yWcTu4
z9q+5D7qCeE780HhvtR42XLf99u2NYHfHxu9czo5kZ+weKYcOb6ze/7D94pt
9q5uXLsn983N3/YvmIr5qb2v/r7cp4/U+l1q8lsrmPO03Gc/Lnse1PhXv8wq
7oMd8JP0a/Er8XVrLGMF96U2h7yFmXum6S/JfHPcV3U5e//ZvoGOwR/vdbEa
tVz2yn32KoDriB8Yg4PPiAvWPul9H3ljddpBcx/GfrF/+Ow1p7Lkte5UBs1c
VP8nLzQ1WhmL0309Q/Za4HhhSMx+79RaDdx+tmwr+wjAEyXO0uci21fCvDsY
Dj5Bt+Xq7cvF5D3NvngyFsY66L3AOcFgR/OJs489+2mcLGv2prhPf3w19+1M
cp/nxGuFa1tO9tqQ84bcuZt9XdbNPXMf60/9lpajyvudr66Ppq3jvtIDI/SZ
OD8ci8sUfr/z0VruW6fnsor7MHI8M0eBY+caKP35ZriP/9G7NL+z46Cz9bk6
xX2FI+lt0edGtjyU3Ie1cSrrlKe4j3gdxr2Nj2kMeIr7Uv8SXiu1ff27guQ+
dD0/7mO9ta4vuE/2Y32ffvFJsRKz7LlP9ivLL/gVo08D+bHqdSb3cf/bo96a
vuQ+9s9azIfhPjRSMPvNjXIVJ/IuH93v/8B+OV3uw4j7ZW1hch9/6Y2XTAb3
cVzYo9B9Se7Lmr6yb/LR98QfHR1D1gg2McB2ueS+X/3uajG5T/YbNM3+wyhf
+asFq8t9ah9170o67mv7ySf7HfZ4be3buy63DPjdtFFOQaM3XHu6B/fdvvmb
YhnPW8V9d+6eLwb3ke85Fzcc8j+HPDD5Lv3yOq3P28QXkynw0VLfYYr7jP/J
esZG8K/nuM/+0W0ul77Yeu672vVE//pq9VnZH35P9Z9XcV/GNxgH14sP+P+z
92bvUpxXnu7/3ed5+uYMfdGnqmt0H9slV0lCssUgl5hkJknABgk2IDHabAaL
SRZIYIGQTPfNPvmuiPfLFV9GZObegAARF78np8gYv4hYb6wp1yAt/d2X5D65
helzDqJxntGDbSKZDzuHuixPw318B6vlzzmG89S5lfU/fLi1E8fJclgfmcn/
5nqa8NnIff3cZ84p46X0IWzrA01r70/9R7Jh9PlOfkzsfcaUdXbR03Bfrrtk
3VqZJy+3+FC/Pbk092X2o2ZK9HRs6wBHPco2jhjmW4b7mMY8VM7tIT/fPO7L
/UKdnnGi7TXEfW5v6ds+GXPG4s7jPq9jzGNam/Zo4T7Zr4/74D176w1x37Qe
z+3OscvcJ/uxnNwXlHXP/ke5j3lfuno4tsVeDn3c57o4D7at5j7jS9Affv/L
uEbX3OdnuLCP+9R//vYf1/e+/8tQ5j5E/ZtlWMVYyT7um7k300e9Zb+fxg6Y
5T6k30/um+nx3k4j99W95mvu6491vRHKvcYXiXm/+VmjTi0XbZiqb97PRjlH
sPZtVvVp3HZ7A8p9xIKeurZS/H2Md55r5P376LHH5mqn7q3+3Jr7Mv+98H00
6oVoZMBXU33c1zl+bb7yPO7r1q67U5hviPu6THWn2Igd7muF3Rd5dqnOZR/3
5WlynKW2yRD3IXtBME22+/qe7ct92InEQOUaEebvOY9F3MfnyG2j90JrH2kX
T2vCDHOfjIpdznf2+UJMl3+/29rRah73aZNm7kPEjMAJud5mxF3iD2w/E7fK
q4zSPAdoju/z4D72+fm7d0Ky07Fbd2ZiPfedOB6iJwK8FbZxm2spa8liq9cu
THS0+C1y7qZjhmOW43ZZ/gfvv12WgVyfev2y8Hdmv6t1WZrlNsukXof+IcR+
oA4I48vjaUxw1rPmPt7bsy9zH+tf54Hy3EPu0ScNj26U+/IY5Tl/X+/3nHe3
LPcR45trP9HnAw50Gt4vw305RzF/p2+w7hkq9yE4wvm6X5r9cK6X+2S/k9f2
lLjI7dv/KT7fuH+y4yOtuY/9aR5fH/PJfbJfbavzv1xbJ3PfmfP7oo959BRr
j6V8WXMfLIeYn+dQzX0oagZN+DbHPOT1aXjvbPmdGjSH973dy32ffPhWiB4U
vq+5b+vkGhZ9HMqx63If60YuoONjWe6T/Xj9/Mvbod74zhyfWDHWc7v3p1jP
Pq4r0/RwX/EXHr81w30IJpQLh3x/y3Cf/ALrOW/fFzsl2TAv2p567sdMH99Q
jdK6j3y7j+Q+nh8iuQ/VxwDu6/O1LmLyUa+3Rl/gK6Zj1wfZT+7bdfhIiLw/
bJnc46/mPl53bPm7UK7n2cd9tfS/yXyZ+7SrsNFyfz/tqyHu0w7KPQ/y8/gh
7iPnx95v2JHc7+EUc9jkvmkdzy73wXwsVx8MTIvvDZsl14Wfx33GxbE9Miff
NXbQNB42/BM93CdP1Nwn+/Ka+9sheQxbGX9e6SN38fyGuK/Y/C33ud+c1t5z
zAP7/MLVU8VXxjKwvf3c+MjOB4fWdUbtM0gtzteV+5p6GN0e1/ZicN5MU/co
zM8hmIbXh63vOWIbJ/ymbf403FfXDfK5Rc4hZLyzzrmezEa4L8dk+xvnLD7K
++1YD9/tvUuD3Cf7ldju1F8imK69xtSMN48H8/WNdcm9HDNPZu4LBpksx2uh
1xS+H+I+j3kc05avctyA7NfHffQj0A7ss9X5X66T7HW65j7Zj30mZ1pLpTyP
SNwXNmWbw8c4R2yT3JfZzzHJ9MzD5WXuIz6T6wVMt3/nG6HMfSjuP2n9MvfJ
fvZoQMSEyn2y37LMh/B/+V7u69pLL4b7YtlpmaXGSx/jVX3ds4bmneNAe58X
T3hD1b998edpvzq5r8+GtG/6sv3XfzYyxy/1k+jwb/698gHKfW98MLmGXB8+
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
WwrLYUtzDH1GEftw8kqcLuI3prFmPseD5+yNr3raP9K+A56LT8N9WYxNfWyM
EeNOlfWWSr7kBriP8x5xHvse4UeL/pEtBy7DfUP+u9xnFO6Zx31984AV9fXN
4z6fpzD/1Wv7yzGG8cjb9dzN3Ie+bHtH6quHn2A8OGyI+/D9WQs2ljlhMHLk
+rgPJuP6oD8OUR9T7pP9+AwrIfockE9n/czMfbIf89x95I0Q60ZfQmPeM/fx
X6an/svXD86EMvch1pXjbu++Pu7Lsl5hzX3mARLfCe8puQ/1za/mPsaJ8Z1y
Xye+MzNfFWeZ8+ierY01rJnpM/PV88ncJ1/YE6rlPvrJ7ZwwM/sS5qu572+T
c55aYZn7MvPFcno4ZWEPqlHNvsvcV9d/KcdurRofG7e5R+4b9aw0jwFHDnxO
OlZdv3t+l/ky9ylsh+8e/zHeD3Ff85y16fWeWSxzX+Y0bdDcFzBzV819xC5a
n0H+yrXlZaVcr4F5+J+wixOLyFvzuK/0gG6f1bMO5Mvpi1yG+1yvbCtjpxV/
6GS6qHe6BPdZmxH/jTaUva6a2o2NbSjDYD9mP8Oy3KfN3tTUmcZ5hg9idcuU
4SbTs7zgkTafL9hlwjfwU819stbz4D7+A1/1sZ71WDLPUTMU5f+rPN2b7/5z
mZb9V/diNyaUZbNNxniyvP0XTkZsJ+K7TqzpraZH/E/JfcVnHP3f1spxxV8l
09b97d12OB8bvPHvbZz7Dl68FcKWiBiidpzry69rZcJTaBH3wVacRxFP3c6D
dWG9cu2YZbhvXkzoMtzHs6Cc11zXIx3iPrhHZoKRPmrPWTTEfdR7QfzOduor
ZB5yn+wH9+mng3nIj9MPN8R9LMveDXAfY6uP++wBQ0yC7ArD9XGf9wm2J/zY
k7Fecx/1QqM2U7t91qrx2Mt90+eNs744uY/fOC6wn1yXuY/vL1w6OfP/DuM9
mipzn+z3/hfni4qNk7iv+NMyB7bs93R21AZZbzPLWJl9Xowy96EjB97p5T58
fiev7ln/9v5aaIb7sn9vtP82MQZudtmv4zdda9ivqgMztI/7egaOGvW8NDLg
T6Qen1/+LX5vr8HUeMk9GjL3Zf/eg4droXnc1+GxDXAf73OtFew8mS9zX+4n
x3c5TtMaIkPcZ91N7UW4K/tFFnGfcWLaz/4v15FZlvtyTqS9r3MfbPx7ct48
7suxndiU9x/eDsFXNe+xn5i/OTIwBfY992w0j/vkkHnch4zLDK5sv5P38IHp
B2Me1gG1Lkjmv5rN8vdKRqGXH5K1XgbuI5/NHERkjZboudvG/GH/csz049p7
Xd43H5D/5mnYV/pGGPPMh//Z5zF6NqSaspvlvodpDNpD05hS80sZi64bOYz4
SvSLLst9mZWYb8Nyjb/Qukeci/rU5nFfYb/Hl8r5mK8xdT2oZXL7sriueE7N
4z6/Zx3MdaRmEexubGTmPmRuH9/dmTD0nbb/RcR/D3AfdTCxtz22TYz9nUHu
Iy8X/9rtyTUFsTwYTM7M3EfcJuxErwOvGR3ua9mP+dBjAuGPrNlM7mvGaeOz
NCZ5iPvI50P2oxjivlyjJnMfitjTCRPL3EPclzmv5j57K+6e7A/8lX3cF2pZ
b4b77K23idqez5vzZpaXY0PT99tO31o/tP+tEPxXc1+O9ZT76ty+zH0v3DZ6
RVXqvmAv5/5/iQcL96V4Xfd5J28w/f+1q6E66oVr5MDnJLkv14mi/8vJUyG5
D+arua/Xt9dy3/x4z9szsZc5t6Yvh2ce9/Eqb/idsV5D3Me0eTnZ9sP2ncd9
xW5sbZLI35tM5zNyJKdljs3cZz3SaVzrl2HXMN+83E4P6IXc1/hX7qdeheQM
ZY7B3onYtYgr7XKfPr5luC8vFxub/cl/PS4rK7uC6/R5wHe51wHvN8J9+gye
Jffl/72z/d343vhLavTAFq4vrFYzHfPKMY/MJ/o9tMxAz3amY9vwWyL5zGP1
IrgPsX4w2oNUy5PtjXHU1u1EeR85fsi1dN+ynCHuk/2GuM98kT7/WZ1jV2se
93H+2S+hvobAO/rQPX/zs5g8femr0pMTvAz3IeI78UdN/YjT7cpMW3Mfx9Lz
DQYkBtJ5Zu6T/bwmwXdyvYzEvOQ+2S9zX/R5nHAbuX7WY+njPsYPPj1EPjev
MF8f932x9mH0wXN62HMe93H84EqUuU/243hb7+bw1ffbej13CvvBffqZ+npX
yH1+Zh8OcR/n8qenVkJ97Mfrra+uhBhrMl/mvh27/iW098Lx7v1W7uvYNre6
3LeA/X5qzutdhwHuk/3gPvXoftceuHBrdf3gpQuhGe4b+eLZHaOW+zqfsy+w
jgetv5P5evpFjBr1U2uMCX3G+zPV9HT/yn1vHbkYtT3N84Nt5tU3436LXakd
IifO5N2lnLysIe6bF1sl92UWhPm0QZgWe9CYIPvRzeO+bq/56XppI8p9TlNz
Hyx05+7Jad2Zdr5Ob130HP+5iPtqBmZa7KUHP5wrtfk3wn1R42+y32A+vmcf
IfsLWkcE7sP21LYPu7m19fWtbIT79LPp87OmDPlxfA8LIfig4YdpTdImNvFG
4TEYLbOJfrnsn+Iz+yB/zr493st0xsFhHz8t97HuUaPz/IGyX9hPda9yppHH
+O7KncYPaE8GecnP9mLws7wmD6LoJTJZFz9HnaIJQzxr7uP7pkbMtF9D1JZt
GUPWYT31cern2wj38V304mv7o9h/09/5nOukZO7LMQOZ+3ifn8tYBypfE/rm
YX7c0LUJ/57jfh73GeNpvK3PlqzpK/vV3Hdg9Z3Ic7OmD9v7l+/OlP52fdxX
X6f189Xch/CtlfOg7aEAu+l/zNwHT/2l9cWV+U2Ou9wn+9nDD8XzgKove+Y+
Yjxz/5EHC7gPfXv3/Az3DfWrl/tkP3IfyeVDHLN53EePOv18mfuoBcP/c73k
Xu6bdx8e4L6fInZzQ/ZC3Tug/Z46IOjBw8slfqbmPsYG3Cf7dey5kS9+muNn
DG06hnVN0Pg9c1/2+70E2zBq1MiBT7n/emp6UsPz9LnjHe4zBmiI+7zXyn3d
GK1pTZfcp28Z9fVJnseE2k/RO3gO9xmXWbNdH3fW3Kcd6jY7rbVd5nGfXMA+
yn5EpiNHqfZlso71tsttNfdFDNaEEfRtWb/TmivYT/obiQtFG+E+bebIQ7t7
pdiG5qrJcPi4os6mcZ5tf4VcexN/XuG3l5D7MmuxPvCW7Hvh9vn4z9EL+zvL
Yp87j8x9st+L5r6SEzk5phzzHNdqzVTr1zMucnywfnCZj+k3wn2yn7HUtQ+t
fgaTrxOeb7LfEPc5hoeuC2X6J5cWcp++wDyPps/6mbl1XrwGsA/xk/F+3rWq
j/u8znCszedEcIbcJ/vJfeTg2dMv+8tufttlpOLnu3MupE8Ovxca4j7rtVgL
xjqXfdyHv/qjyfULsY6sR819sl/4OifriPBf9nGffkfmw3fGr2bu45X1++TD
f59bj4XlOablPtlPVkd/uLA2Ey8K92195+9C5AIyPcyXuQ9xrJj/+8f/EFrq
PjzQJ/1Fc97QemY2o44NytzHdYfnBNve/YeQ3EceIJqx4ebVGhj17I8jtnHi
vvLbsf4aOoUNqx4Ro0a9DBo5cINqYz3zd3Kf7PfexydL7U7qeA7FeIae/Hli
110vMVhD3NfnT+vjuZr76unqfg2Z+8y1x2bNveGJZYT/htahXo9sky7iPn1g
2HysWzfOc7oOsN+y3Cfn4SMNX01rA9/+9kqwmzYSduIQ95lvVXOfdTZlOrgq
4gNb7rPOKfOXQWA+OG8p7ms5bx73IY4Ty4cPjE+kf13Yvu3nk9dO9dZo0Q+3
eu1obDf8kvPuVq9dLfGk/J5rdfr/3GeAbco1cXgPS9lTj3UJm/v8zvV3tv73
UB9/5txJtpf40cxntajhyH6+8tXJkPs8erS333Hco4Zru++xi1k/fbzRt7Fl
E2NB6R2X8/Selvuw5/T3YeNOe0OcadbJWMrJWGWdD/xpd4jtkftK3uoC7uMz
xyDn5eW8YGWdp2W4r+SoDlxzoofBEtzHNsh5+BhR9vXJfTX7Bb9O5hV9Yv56
cfos4N7ptmd5P/dFD7x7ZwonWbPT2itD3CejNXWq7oQPBmXuk/3ssxE9P9pr
jcczcx/iO3yMuQ4Wy4f7ZD+5j/VkHXK/vz7uww9nXwcZbxH3KblP9huq7yL7
/eIX/6XEe8Jt1l7N3EedFraVfbNyYn8ocx/z/O6vN9cv3rqyfvHuakjui2vA
gU879Ttn2K2u7/KScd6MfTXQE4AYz/M3p/Hbch967/1/Wz99dmX94z+dC2Xu
i1ojVc+GF72Nr4MG7eEFvtaR+0a9Cho5cI583tMTW/HOyuX1LQe73AfzyX3Z
79QwyZ+L5L5vH14M/VjZTzLW0Oc6xqqu7+JnYyT1C5RahY/OlRy4edxnPAq1
B+b5IPvjQbs9wBrmvV5yC5nvIu6zf4N2FeuFbyjXmrFOzbLcR13A3KcPPw+/
ud74kxC1aBC2yxD35f4WfdyX2YvYvfyZHD2YUhaU+fz8yednS5+D6N938Xzw
12a5D+bbKPfl//9cuc+4zNxzIsduynzIHE/qFjHOokdHm/cU/R0mXKMtl7lP
9lvEfdbHdd1z75LMgEznGF+W+zzvOH+cnz1OWDd8fLnW0jzu4xzgurEo3nwe
97GP+v5T/JaJ+wr7TbjPvD7GAnL/w0Fyn+wn98FDcB9xkvCQ45j9NsR98NvK
od9GLU5jEPDB9XGf/jM4jlePbx/3EYfp9Yi4S+M9M/fJftZ7QWwL55QxmHKf
eYzGeOo77uM+JJOy7Jr7cn/ZlaM7g/tkP7nv8y+b/9Bz3b4MmfvgPfyD2adY
uG8i8wnf3fHb0Az35Xqe9tHLv71om2CRPTXQP13uk/2OXjm2vuvgr0NyH5qZ
n9w38t6oUaOek0YO7NknbRx3/k7uQ8dWdgfv3XtwPjTIfcVO6voA+7iv6aM1
7d+X/XZD3JdtP2wH/Qxzue/xWsfG05fA9zJfH/eZC+Q8ZNOc37OI+7Dr8nLD
zrt7rqwn9vWy3Cd/YY+Z5wT3ySTaetguG+W+iHuldsPqlk5PBqeB8/p4i7w3
c9+eFffhJ9D21f49deN4qK/vXt3L3ZjOXG+zZlTiSVnWqZuXQ/BSjqUMe3ny
XY43Yz38nXor0WsP32zLQRynmv04DvW65VozslP2q0UdnbamC3Z+U7NnWrfn
2t3z8dkxIz/5OfrhTf7nMp4l9+Xcvpw3iug1AWcacxz2/cNznXXbCPc5rd/r
u2T898UH9HGf7Cf3hR5P+xSWa1fFdstwn3VbUI4P1Fc6j/uibk9bK8nx1Tfu
a+7jeYPTy3369TL3yX685j7sEcPZcmbmPtnP8Y3sx+4+ytwn+9VcRc0W2Ez2
k/uIt2d51F8xB/PUtf0z3Mc+c/vo1Y5q7kPUkqlz/Gr2Y7ksE7F9Ml/mPv2c
Ud9zy7+GMvehrXu2xfUk9/bL3Pf9hP3lQ/eH+xzum6mjUXFfp5/fS+jf67UX
Yn2Ha/xTrwXuk/3mzmf0840aNeon1uvOgTl/t/PbsevRnx3my9xnjBYsF/zV
suDUZ9dfx7OOmXrY1pQobFjFa5ZcuJbtrHvis2m5T4bSj/b1wzMh7Ah7VWXu
y3U5cy9luc3l+/x6HvfVsWH8Dp+Ra4TM7ZvHfYhcQET+ZJ+v0XqlmftgviHu
w6bfsftfQ8dO7Vzfsv1XhStqnxSCYYgF3Az3lZ7jbR1O/Wr4t2I+bY6ffRwK
B7Y5ffzXOprwGT0SXL+R+zbHfTXT4Y+EmWQJGQNWQ/zOuHKcWnuW8yZ6H0x4
ifjJzXJf1A6Z7E9jo/Wj1ufREGO5XkPcx7p6HtvDwWcjXAt8RZn7So3cgeXm
+lT2YzA+dR73sa/6rhGuc+Y+2Y/vPD7wXRyn8ztDUde27Vk+xH3UUuHZjVxl
PGQf98F7OUdPDXEf+xw+op+fvON/au5zHTnmfp+5T/aLXvJtPVDjQD2Xau5j
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
TMgs90WtzskYvHPrXMfX18d7Mhr+PbhP9vM6gPStTms2d7mv6+tM3Mf968du
rsMM98FDr4JdsFH7J3NfHc/5ise1jho1atQivWo+wfzcro/7mljPJn/i7u3P
W5vqTof7hmp5+r7mPn1k+uO8l2N3dOpvPpm14XId95KH8+RSh/u0D+W+Kaet
hY2mPw7JfPO4z+WxjsxDnyK26SLuu3/vfJke+5fXumZhZss6f6nmPvOVrOWC
jVJzXq0h7tNOr7mvL6+OGih9vIfkBOZpLOTz4j7t9cxB5gzKfXJg1AqtOJV1
gXn0hUXPiG+6+UkcI+1PfJJwAfOV81D2kWK7R0xeWxsHPxrzyrl3zFP7kOVF
PY+J3V9vr/0XV64daHT1VGj30TciDtdj9qy5T/bTn5i5j/pDufcmNS8dw/EM
5dHN8hneyGNrWe4zp/ZOew7zndNzbjW96Zpj5vHTl5+5T/bzPDK+sa69A6ex
rstyH/saf17NkvZwyNwn+2XmYxu41njdYRq+97nTEPc5PWyUa7voP815dHIf
7LL7yBvrH516r1wngjlb7pP95D72OVzG9+7ziH1uuU/2g/uM5eV95N5N1hn1
cZ/86bKZvuY+hN+PZd2ZrOedNu5a7puy31ove9Xcd/Lojk486qNHs9N24jv3
vR37oOa+xpdc96ntLjtz3t+4L1XcN3OvlYdeMhvgae2dGXtC9htZb9SoUa+h
XnYOLNyX12XCft7f5T6YL3Nfnes3ZbxZ7svS1pSv+rgv+/zq2ilD3IfgMGxC
+8YzTxhpHvdhV2gH894eDnUt+Xnch48IWcOzjtWU+TL3zasnwf/cR7BfU9dx
tWhZ7tP2xo5r/tvY1fa5o44Kgpn06aE+thviPmvO1NxnPwlqyyBrZrrerAff
6z+RE3nvPIxbzLmK+PFyvOPrwn2ML/MPm/232qll1NT6PFN4zx5uUdOk9eUx
dq3RiYyvzLV0+nIMN8J9LAdeyfNE7m/rk7J/ZIyNcl/08UvnP7wGZ7ldXCv4
7P5exH1NzOmdmecvTLMs9/lZ/yPPe4gpsFfMPO7zGmcOonmIsOAQ98FJ+D3N
u9MfqC+vj/v4XMdlus9r7oveLjvfKL4+7gXEiA5x34HVd8q0Ufe2jeGsuQ82
dFvMUe3jvqjZ3HK8z8CiRlfFXsSfGuOJFnGf+0v2k/vyby43/+/+wzvRn868
vQMXb81wX56eZ1y999oxp23UqFGjXju9bCw4j/tgvtWV99evXDwS4jP5fDX3
5fc/Zr9Xqpfe4T58aw+aXDrsPO3X8Gm19mTmvpr1tI+0Y60dL/fJknKf9oy1
VfQVMI3Ml7mvtu9ynqG2lNwl8w1xH+vp9CxvqHb8styHnQZHuM9mfBNb/3vY
k9jDaDPcZyzjIlljhXVgvm63sX8/BffhK0TUV2Gd8F0iaoz2rXPzXL9hCPZN
tqdZt+iV3nIfvBdxnpN5+R97OxifR987ei9oT1uX3201nw0+Ck3GHfujjqe0
5yKqe7w9b+5zf7oeiPPJMe46yG2Zmxt/XvOsZSPcJ/vlsS8D5tg7tiPXBF6W
+1w2zyDY117T+s45uc9zXe5D+CyNp0Yc76FzuI/78jy9buHz7vBjD/fluqv4
yKzpgoa4z/1Kntqe3b8qn3kP92X2i754bT0VWMy6mSxL7pP95D77R5iDp/q4
z3ot/M5/zEOU+2Q/7inU+IzeeJNt81mA7DftnzPLbzX3NfefRn2+wcyEcB/5
kNZ+yUx45evjcYxgO1Rz3+r1W5Nz43aIXuX1cmbusfrBRu4bNWrUqFGfvlgW
lPv8vOV4wykPHq6F5D7jPeG+7EObjbuZ5T45zHqJpQfZAPflPu11f79B7mt9
BLwaq0msJ8uYx30Rc9ZyH8vnu41wX64bmvuLlVjPyfyX5T5/m/o+r5X6f3Lb
RrmP6ZscqsavCTtlHxP/X4bxNsN9uV84fjHjPq1fUfeWgF/srWfuXO2vM3/P
eMfVa/tDTiPzvarcx+fIo0qcx/GW92T4qJlpHSLG+w/nOjVv8yuCue4/mvaQ
ZLzSQyRz9LLcJ/vJfcY6I+xlz09iU7MPmu3KvjyWMcR9sp/c5/nOK743GQt/
E8eAfC/kft0I983TIu6D8RbNI8ee1twH07Av6uuKzwAy98l+UQO0veZFv4XJ
dcXfM/fJfrzKYbAX/JfraNbcF3VXWl9eji3t4z58hfoZ+S++760T9keZ+5D1
Oo03pWZLH/fJiPzH8VbfZ8jjg/U8rjLdPO7Lvjy5j15+fL717TQOQO6T/a5P
rktrX90OkbdXc9+7JxvVOX3lHtvWzX7R8T2jRo0aNerl1DIc+CzuIX051zX3
0cPhwpn962dX94Ts2TfEfXWeH/dZmS9zX2ZBmQjlOpw19xW2ajkrnnP/0Pj1
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
4j5eczzqkIa4j2NHH0FY1uXTMwPuc/8McR91XBD7hv95bYmaswPcl2Mo0cEL
Wzu+wD7uY/3gJsQ5mJ/N9XGfeXox7lIf9j7ui353906Evn98tcwvcx8ihtI6
mX9rYyr6uI/njDBfxGkmrqu57+tbnxcfYOa4zH3TeV8t/rya+/qUua9zHyU/
YuS+UaNG/cxUuK5mu+TTkyFqhiu5fBX7xfclx2xtzPn7qY9pj58V5jt140xI
W+HSV0dCxPP0cl8bu9j0r2t8gPwm82Xu0+6Q+4ybs+7EEPdlGzvHlkXdlwHu
KzUlJ3xHjBO1NxCxWbnevTah9lj4Htr4Jm0/GUBf3yLu8/dv7l/pxHY6f/15
y3Jf/j1vv/6YzETsx41ynzl/i/q0G4Mps2Hfsk593CezyH1lHy7BfblPHGMw
Yi8Tj/EdeYVIvnFsMS38Ascgcgqp82JNzoh9m3CZ9rN1WzzmHBP7eGyUGRT1
JBlrecxG3Ym2ngc+V9bp+OnjobOfHw4m/c2Bk6H/+O2vS21KxPkR59O90yHG
GNupH5ffwkfWxqpm7nN/PQ336Sts6iA233nMnV6GKed4W49Tf95GuM/zADbW
l9zUNJr6B+P3H6a+8WfFfWoZ7mO+1mTRT2rM5hD3OT3HJeflZUbP3Cf7xZhv
YyV37fjXOKf8PMR9jmmYq9vv5Xqsn+wn90Udqcm19MvUH4b3H02Yqp/7jkQv
PNmVZ4TZx5i5T9bie889uU/2Y3kwHuIche/8XHNfzWV3bpwK7pP9oq/Qo7UQ
/811XlwXxPTMf5m+fxFLerq6j6YaaS/6nj5q1KhRT6MO12V/nsrsV/uOzGn+
tIf7mI7pa+7L8678UKOe8bGV4Ve6x+jYhV0zz4gz9128dnjCTZ+FrL/d3ENn
uQ/bVJ8ftkT26Q1xn+I/pf9A218h89FsH+lzHT+I9cPncV+282t7j3nm3nqZ
K+wV4f/5LfcGtB8FzJe5L3Ol84Zz2Ha50H4L7oemP1eTu7QR7pO3S05gqumY
OQ72iDjL/TuWYr7Mfdq3rpP2ODYcPC3HceyDt1oOYx1Yb7c5alImtrU3o59H
7luO+3L9VWJps+/SPoj2Aq/ZDz9VrtXR9NdcLbGiT8N92ZfO/KgVk3Vk7f2Q
/83+sGW4r46ltLYnzzOIG+2L2VxG+fgPjYEyRhP3McZgTs6rzILU6rTu5xD3
+dlcSP3snE/zuC/HchqX4DWmj/vYj56/1OH0GVdM38N9uz74Rejq9SNxnPTl
9XHfof1vFZZnmpq1XM84/9r4TUTcJX67mvvQgweXYj4sC+V5ZibLcaJyXuY+
fIf+13nJfcuwXy/3rVwfuW/UqFGvrML+z1xXsViJ6Wx/H5xXy33vHD6zvuvI
yvr2Q4dD8Vvivs6ya+7riQ0d9YyOc1Vbp+a+w1d3hLg/32x7OTT1Oe/0cl+5
Lz75c7EXsBNlvsx9nV7qrbBV7qS8vpr7zLkr/aEfrxV7KHNfyRFruc84O3pH
5ZiwqP+5gPumzPll2yewUdTV+2plIfcVn2HJAZzmwsBDJZ6t5b7cZ0/my9yX
68sQy5djt1gv2Y7P+NtyH/LM1Zn5MvdRr6Xo/KlSYxMxHXlJCG7BXvz61plQ
Ext347lxXx1f2PSROxe9ApE1TbKwOVevHQ198PEnwWD4W1Csy+5/KwwUdVL+
erHXvt8s99WC///0x8/Wd+7eEnrn4Gfrb65cXX/7yMUQn+mjmfXG73/fqbeT
Y0/jWE/OA+1r/HjPhfva/+s3LrVy27q7+pXZRnuNyDC5zmbmvpr9au4zzrHJ
IZvm7TY1fK+Xc3coh072k/tkv77+GpvhvtyTI//Gcn22MI/7Spz5ZHvdn/Yr
mcd97ocz5/fFMmS+nDPZx33sr/zZZ2U198mHxOnLRFzzed7Xx318z3mT4zj/
8t354D7ZT+5jmv/9pHuvgLf6uM88QPbV2uUjoZr7rv3paC+TyX5+/uTDtzp1
XjL3yX7Uc5Ev63zDrLWvbgfz1dwX988xxnPUqFGvkDq+vMx9Fdv9ew+r1aKP
Kdp5bHV99fSBDvfxij5aPbC+Zf/R0Mw8jl2fmxM46hkd85SXyed3Pvvj+t6T
O0Irp3atX7y9Osh9Wc3z9vncJ3/ciDoOJ+M1c5+sVueulR7R3zS1SYa4T5so
x5HiEzGnKnNftoX6bPxp7cxzC7mv2OAPG1bLfdNc16W4r/1/9mHmWi7Oyx7Q
y3KfsZ3WW5GT5L5jt+6EjPe0ZuLTcp/70rwvPmPDUbsFsS0Rl9fuX/YR37k/
7AM3ZIuP3DflvtxXMff/Qzz3ILdRkcvoGJSL8jHh2Om34XwLf/JTcF+9T/k9
8wlsJ/vBOrCfnzP3yX593Jd7oZd6vxPBemwfPIuG+ioOsV79ffP/O0XzuC+2
9e7FiCsw7tZzC2Xuk/3kPrbbfeG1ramJM8x9nIvBYC275Rj1zH2yX1yX2mdx
xITyah73EPdRLwUdPvxuyeHO3Cf7wX32SLh87XBM5+8197Fd9sbbif/y1AeF
+eQ+RN4ezGbeHn0X+rjP2p1MC++pzH3mBKJ7d86uf/fNpeA+2a/mvhwbOsR9
Jb+v7YP0ou/to0aNGjWkwnh1DKexf8vGLrS+vd99fGr9wIFtHe47eeaDEO9v
3f20w307Ju8Rdk9hvMR9nbovVa+BUU957NteiqqP+6zRfamNr0K1f6/mvvIc
tWUAuS9YL3NfWy9Dm18bk99nuW9aBx57XcFz2AXYmEPch42FtAmz3Zhj1vq4
z9i20KMmpy/70HJvvCHuk/3sTYj4X7Bxqne/LPfpC4Rrcl8v5m+dk9vfXgke
uvfg9qa4D8YjDnHl4vkQ0zKvvK/CZ9cygdyZ4/OeF/flY5W5Odc7CR8utR0n
LIXgPqbPPtlcF+hpmU49/v5O9JRHjx7djNwp9iPiGpd7ZBYlzvvNR+em74n3
3DLta4cPzx4TiDhbjtXz4j77hng+MG59xuFzF7a51Ptp/+e5G+f2Jrgvx3Hn
85lpfabg8XecLMN97DviBmExVNfUWZb75k3b2daW+2Q/zy2eM1ADhmcn+rs5
f90fQ9zHtaf4SiesZp0k+jHIfTX7RVzjhLuMyUSwGcsa4r5cm4tpL5//qPj6
au778tanTV3ilo3YP8ZZZu6T/Tr1NH+43st91NmMnLzv/7j+p88PhPq4L9dy
gfVkucx9D+5e6vR4gPFq7mP7rMV07263b6Dc53t6G6GZeynncU+NtFGjRo16
2VS4r6cmS2faY9dnOKGjyX9hPrnv2NFG2A1fTWyAzH3mHZFTc+7ivlnuy+tX
cV+tF73/Xkmlfhr5+20rp9bfPrTaaHI8Dn62d/3TL3d3uC/HdWa/3g9tL4c+
7uN7fp/Wdri6/uOTq2FLZu6bxn6eLDYK9slX352d/H4uNI/7FM/OzduC+6j7
l3v/1dznM3GZpeMPfHJ9Iffl3nrm/emzNJ4xc592sdyXbUZrU0T+X6p3aq/4
UndhA9yH7N8wT7nGy5btv3om3NdhokdXSq9p6rzkeD6OG9O4b8x3yvmV8/Q6
cZ9xnHxHfGb+DL/JgX6Xf+fVGi6llkt7rmD7s184TuhpuY/3TOf4jPNgsgyP
OazX1LC0Pu503CzLffYCzfJZCf5d9pfbuQz3mY/rOaj0E87z9fWN+Tw9fKd/
eRnuk4fZ542fc8p+NfeRcy27wFjB2y3r9HGfjMhv7JOv730e4rc+7qNeCrp8
+aPCW2fPf1i4T/ZjW+2NB3fBVTmvL/dq4HjTEw/BiMzT/8p9st977/6/Jf/O
Puo19yHZTvVxn+tAfRj+z/bJfn3clzXIfSvXR+4bNWrUS6+6DufgNav15dmX
L97XsZ6T/24/cCC09+Cewnxy392/Nnr4/aUZ7ju4siVUcv/yOppLmGu/9Kli
mM7/xuvxzPH02OfvI96sZb7Mfdpd2ADX750MDXFfzYXZJ9jHfYj5wn/mhzA/
mS9z3769vw5tfffvir/w7Lm964f2/Cbqi87jPpcVfoHUQ8H+gPKK3Fc4MfWH
txaNrMB/w8Z8cm0h9yHzsLSL9eNN+9df7+W+Ugfn+2kPNO1httXYzuzHQ2e+
vhP8c/7WldBGuc95IO1W7dlsp+vHqW1ops91TZ4n97m8bIfff3i79J5/Z/u7
M/Z5X/5g/K/dn7UveJg5G2EPwncwJoq4zaNXOrFfvBLbieI3GI/Xdro3Pz4X
9VyQnGb+He/x4T1v7iv+8nYc514a4SNqzyXzavUbWdcl5+pthPs8P3LObK5v
aexo7n3iudPHfnIfIiYy+0Ht+577z7PMRdxnXPP9e+eXGhs191Gfh2VzLFy2
dYuyD7SP++Ttw5/9dv3YhPeMu+eaCffJfnIfMmZTX571NYe4j/kZ34ngLnxr
qI/74DBiN1H2i2XuQ3+brD/X/fLMrY2vrLkPEWvJ8qzLyW993Nfnj6u5b8hv
l7nP+V6/dmyQ9+plzNgp9mwfYzxHjRr1EmsZP9+bR9fWdx87uH728yMhmS+4
b/K/4h/68JPCfOjs+b1Te2By35T5EPcW+YH3He5LPr/Cbpn7auW+ErUy9zmd
OYOvcd5gzt/0O1lv1/5tcewQPlr8fDX3aW8gGA++06c3xH21L9DvZL2a+5q+
e8dCfMf42bn9X0JyH8yXuc/fYcMd7/5TCHsvev1N1mkZ7quf2WOPYvPmGqQy
X+Y+bVfeG9v44PGl4rMw32wR90UNFOO0Hp4rtfSN8+Q4aIs+K+6zJqYcYOwn
Pfw4fzNXZf+O3Of6DnGf9SupaYGNqS2ubWsdCxiAV7nAnuGb9b3JfTBf5r66
H8bLzn1Z7Ddr4xifiY8CcTzYZ3l/4g+yTyU2P5+L/2v3v4bvyfEpVzwt9/n/
dz/4+05dFdZNltM36GePd2a/uldj7kkh9+Xfm/4h02cujj+0DPfVPe7qscH+
XZb7+uJErcs6xH3Hru8MWTPFZ6W8z3Wx5D7Zj//qwyYGU5+e6uM+5gX3Re3N
1k9IXt4Q98FH/BbH+cGlEP41mWmG+yb7inWhJzqS+2Q/uE8fHYrrQcuXcp/s
B/e5jsxrqJbLMnU4I6fw/lrUdrEn4CLuq+ffy31j775Ro0a9xMq9F+rvtf+J
+Tty5vQM9x04fS6+/+jI7in3TZgPfbBne6nZKfdpo/7l/u1y3ZT7ZAfeG7Ny
5MSh6frk3g/y5gD/ld8z9yXWK+w31orp5T6ON5L7zMmE+07f3J96MU3jrvq4
T57z8/9Kv/dxn/4cdPevZ0osUmN/Hiu2S+Y+hA9QG4/xdf1yE4eauc+6enJf
Xi7rRj8qBDeGr3IO9+W8PGxe2U72kf3kvgcV9+nzsAeE/f/gC6flc7Doktzn
b9bx72M62E/O3Cz3GYtW18EhTm5RbXz7l2f9VNyHiAG2rg918xdNz/Y5rqJO
Tsq37Jv+yle313efuxWC9eC2urZDieesOc/P1fSyij67n4L7rC3CeHT7OQb+
F0X92pb5ePbBGDaXFfbid8d25j7Zbx734QvO9Zw47syDHo+IPhz2fUQb4T5y
e1kHamqaYwd/8Vr6e7Zjby73tXVC8VefmrAJfTrQstx37uy+0K9/9V9j+bJN
Uy+kWY/MfbIfrzLhxa+OND1Hbn0aMlevj/vwx+kPNH7z0tdHCkP2cZ8+wrjm
TubntJn7ZD/GXI6vrHO+WRfZDx9drtnJdtfch3gP9/l99FqZ/KfmvkeT40Cs
qL3Y57FeXjfzA+U+xLyQfst5vj5E/9OZe2pb1+VF39tHjRo1qk+5Xkrn+8nn
3Uc+7HDfpYtHQ9rLmfvQxYsH1k+eeH/9m7sXCvfduXkqxP2IOEEk92UGsJ+q
3AfzoT98emL9vT27QzX3zWxLxX0zv2fuq2vFzMtX/JmrL7fv6J9WQ1e+6tZe
wD6ouc+8Lj7r48sMuAz3qSHuw/bQ5t7z/i/X9+z+1fQ5dst9MpDchyIHcM8b
zX8mYh0ePD6/kPuMQYpYytvHS41zlgs/LuI+ZM+CzGY5dq7u+S73+Tn312p6
1X9ZbFu2K+rMtP4o7Fp8LhvhPnjOfDP7N2ibR3zntn8u/8W+qXvyPS33RX2G
Ng4Q5rOXuGIfy70sz34cKOd2bUTajK8K95lDZK+8XAMWNpMR2H/7LlwOvX3i
5voHn99cP3XzcsgeAPIVyoxtbqjndeY+2W+j3GfNUWSdmZybyPfWZwwb/+T7
pX/5RrjP+kPUpZEXmDcslc8z5mdNJ7lP9pP7ZL9lxtFi7pte0/BrOY45jl5b
MvfJfnKfx8HnXIhnX4fWtg5yH9fKHH8BF8lXQ9ynLw8/oMeWmirUYMnxoXIf
/EXMJr633CfB5w019/ne+i25jkrmPn2LrLMxnn3cZ01O62zKaXKf7Hf93tXi
U3z0uJ/7yOPDt3f67OQcunws5Pxkv0U+RK6LDx/dWX/zs+r8Hrlv1KhRL6nq
fL7s/4H7rt05EeIaV3Nfvv7BfJn7EHl91FPQnoD5vp7cf1Ed8yfzZR8Skvt2
fPiH0PZ9u0r/h5ltaZkvuG9O3dHSo67ivk6fwNfIDzjDfSfWon7nEPfh80Mc
T/q3R4+oAe6LY8z7H6Y+wGUUvBU1QqbxnUPc18SYnSzMaMxoPMdO3Od6wH3a
XvAav+3f+Ubo4K43YvpF3Hfx6pGQ66lt1s1znM995LVmHx82dI49tO5MzX3a
+nKfPjj2AzVcMuvJdR+8//b6zr3vRT8GdPDgtrB/N8t99prPjGRNRXPrcm4k
07D/rMEjM2LXvwjuw+fHa47pXaScr9ZXXxTeeuv9nSHrtsyca7l+S/W7/Efc
Z/4+c5/sJ/fJfs+C+3LPBf7jsYQtzCfMOYXWBTU2Uy4zf3Az3Jeny73uyAF1
fvwGJzndEPdl9ov+dJNt9T/ZL7rRMfT1zc+Lfw52wGckq1w6e2jmWiZ/ZO7j
XK9zK/dM9mW+1vZxn3ELH+z/n+v7D/wmjk3kxrcxm0Pcx1i3nwL7+k/XVsKn
h/q4j3571jhhHeylkLlP9vtbG6OO2AdD/jG5T7lerq/cJ/vZcwF9cXxn7O+a
+/Iy3M/3H85ynz0EyV0lH9Btk/tkP6bP27aI+2C+zH2htgb5i76vjxo1alSt
vhouMJH9FPC7yXxeVwdjKIjTa3122PzW8IT75IBF/0eZ+7yn7d/3m+CNzH0H
T51qtLqyvufk6VDx9eW4z5R/mLdxZl/Yk/51iv3MNXrS93JfjnPS9oDzZL7M
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
3JXjLJfhPn1T2XeVr12OpyHus85ZuY9O7keIa8y7W/8xNMR9sB7auvXvgxXl
QOq75NxGuQ+VuioT5kL375/vxny23Cf7wX2um/44/XtD3JdrX3472f+Ic3qI
+/4W/Q+n+6aP+7zmsE6wq70n5D7ZD2bTR0dfP1RzHyq2SHt9N+ZT9otnzNYs
mtg8quY+xoW/RT/Clvsy+8X5O9rDo14xdWxcew3x/CLVS4zv2vHt840Xvd6j
NnGsYZvMP+21i54N1OjMzOe1GMa63sYX1ffh6H/2w6wvJ9dIlPvy7/4m95lP
wP3DOjFyX2YI/Uosu+Y+1hO5Xpn77Ctv3Cea2Te5V4TnROoj+KKP3VMf+yOz
Pk+ZT+6zp6+cJwf62To9mfviv5NprNMzxH2D7NcyX+a+XMMl+wODmSZ2b+Y+
GUju83k+jGY+DPMkP4/xMo/78jo53+g/2fZlWMR9iHVlOdYn5Tu2Q5ajBuJG
uO/w2o4yr+i/lZZ17faJ9YPHj67vP3pgw9zHet/85vTM8aiP27SmZf38eznu
q5mvj/uUHEbPv5vXTpS+BnAHx5A+gAjmg/20u+FE4jVzfqH+JFQzInZpxJS3
+Ycsr2998rbBNNSeRIw/jpX5f/QKpJ5nqKrT0hfLGd/PqfkCz+We5+zna3fP
h/DV9cV3yn3E/hLr6e9w4Ga4T/aT+2Q//E3wFSLnzF5+zbV4rTOGGL+sL6yC
zAHdCPf5nIexzzXIZwHE63EMOXcRtXmX5T5+cx2+m4wNxDzPXzoUil6i1O9M
cYl93PfjZBp0dnVvrI/+PT6T+4cy98l+cB/nLmIfkusn58GvrGPNfbIf+1Hm
cVr7JgxxH7LPnqr77uU4TLgveq63vjj9azX3yX78p+9638d9zCfXc+njPhRx
7TdOFR+dfR1q7uN+My83T45zW5rlNc/0MvcxD7hw63t/H4IVa+7zt98cOj21
h0fuG/WKqNxzVqY5qY0/KLFd6fXWHd/+9qK3YdQmjnvNfZ82/dnlviuXDoeO
Hv5t1OuUpa4nrtKnk7lPe0ibOXOf7Jf7vOV7O9d6OVLum9YQvFRkPqDTstw8
Xc19ud4I02bus5bN7z4+VfIBO73ejYmsYkAH96s9J16CY9y7fvoxq2N/6sLB
Uq/TXn2yXOY+67nom5VR+rivqfU+Pf4Le7hPjo15F7BXxFQl/5bMl7kvs5Fc
GHz2fdPrLnOfz/PlPuQYMtYNP3M8205952W+zH3GZxKreZj4tFaxLq0/dBnu
i7Gf6t+Yi8j/Ln19NPXKOLE096E9B/d0JPP96c7tEDZ7jjVDm+e+OxMmuFps
qKEcTtkanwz2tX4WxP+9DljjfeS+Z8N921avFuFzy3VhL5q32/bTkwl5zxjx
2QDMkc8Dah9tlvvuT/7/Y+zjO517w9D1oeSFL8l9nIfEbMN3is/+n3nm5x55
jPZxH890HKcsK8e2MD/uWzX3yX58znEwebtcl5r7ZL+ITdz630NyLP3aEddg
pq+5T/bLjGUcpozVx311Pkf4tCbif33c9+P3XYZD1riprxv+bxnuk/X+d6qT
JffJftgG/i/iWh9Me+D09RDsuxZl7qt9u33cJzPbe7TmvjgHW5/fi77Hjxo1
pLi/6J+W+4xPVtFnSNv38pT38n9H7nvlVHxXPT3bd356NiTzyX3a8mGDt8yX
uQ9x/ZzHfd5b+nyA5hkwH3qGo+ynyczX3G+7HJi5L8eowXk19+kr5HkrcX+Z
+4Z8ejO5fwMc2Ok1KDtWuXQv9Ni7zu02vvPptVAf9+nzO/nl3uIDGOK+8nvb
D8zn+qWH35y+7Yrn9DJfzX3YjPYiRrxn/nw/j/uQPfZku6iNn+LF5D5zSuU+
ZC2Y+61gPexb/rOI+1jH6LnwcMqKuRdc9HZv/Y1d7jvT4T45D1uc71Dw7r1p
nwnOlZWju8LPh2C8Zbgvx7txnlmzcOiZ+Tw9a+7bzDpge1pLAml/G5tL/VaW
98XxXaFcfwLFc4Kdb5Tv8dMQQyhXElNIDpMxhRzzbK9Tg8P32w6tdHv4Laj1
NxQ/s/3M+RBjranl8lkIjsvTwYgHLk4/bzlxNWpPLOI+2W9Z7rvR9tPAT+z1
+dDRLSHPg0Mrv1u/vHaocw+IcT/5f+a+zH5DfBT1kG4fL/9l/uTseYzYL9Tj
Ne92iPtkv8x98JLnn896GEPW9YRHluG+zA7ffH0pxHzyNW6I+7gO1HHb1nOZ
x33mrMEfMEypcTLZl33ch6IO6eO1DvfFOgxwH+er9W7ovYfvEOYb4j579DGv
7Ffr4z5/s36nzCf3yX5so3wLg5FnWnMfcix5ne97dqVy/uO8euNsE3mGNff5
+0wfB31+L/Gz39dRcV3ty1N7zXIxO88Yq7hN7z3T2tNXO/ejUrPo2EAe4KiX
WrlXX2aczH1vH1pd37V/W6nvKfOh3AeWZ9CZ+7jey1n189zc343fvddwn5MX
mQfzz9x36dyhEDZlrhuSOVB/YdO3p8t9mTP7uM/ctdVzp0qe28J9uIAD9all
7uub5oUc98S2cl9mNgTryXyZ+3LdxdyXwP/X3MdzflhmWe4zTgthV+ffh7gP
6Q+s80xzb/Wa+3LNzcgVLbl4Z2Je/neI+5wHyzdfMDj03vEiuW/qH5zlPntW
RN3P786Wz1NubJbNZ5lvGe7rk9zH/sHHsHJyewgGxM5/Gu6rj+vCaVpbG3uU
bdDvwTnP50UcOXLffO5DeRrie1k/BNvlHnGMacautYNkDn3CxDTrZ3sa7osx
/7iJy/b8irjxh2c6+bqsm78vy32I5zb8LgPyOfrnTbjgfusXMr5zGe4j5nxe
bwe2YxH3ZTltuQe22zjEfaeu7Q85puz5wPk/xH0R897yk9uTz4c+7mOd6O/A
a2alIe5j3t/en7Id8/num0u93JeXZd+/Pu7r27+ck25n5j55Np4XpO1w3eW+
Icl92AH0BBzq1dd3DLPgvsx+I/e9PKr9WJ08zNe0Bs9MzGaPf3pon3TuZa/Z
fvu5qPhxK98WrEJdzJr74l7Txk/KfZ06j+37mvuyzSaDec/L7Mg8vSfy/szp
PSFstYhRSdyX+wJqy8t92e7PPJi5729PLhebkvnxmrnPGFD4Fz9g+ALr/Zf6
RPxHXx/4qi5M7p0wUy801QR7bsd7wMe748TF6MfXx30cG+M3zfVzmpr7+KxP
mDEityziPmVeH8/mh7gPn1CuHYntI18OcV9mjBgfVa31edwnb0WPiYfJNzh5
735axH3469iP+fkH83bshw02WZ9luY/586wCcW5gM1kDhf8P8d6y3Jf31yLG
kmX7nqc/a+6rtSwHYn/DsS6L/QS/WWeDOhF8n2NYMwcwDdxor7a+beB7czyp
Ebv9yB9CJR8+PWOdd47HNNgiFR/it0Onbze1gvTd1f+///D2+u6z3e/ytE/L
ffic/D8xx4ztC1cOhuAyzwXEueszCdjLGOmNch+vxEqeO7uvzI/xYe4u7+VQ
tCz3WZM05xwSu1qPrUXc979SjsEy47PmPsdZxG238Qq5f3uoh/sYq9YqZXus
VcL6DnEfdU4yJyHXZ4j7srjWyGp93Jd7s8OLNe/V3Id+fHR9pud7FkxLDRXk
+pZ933Jf7/VnIM+vzutbxH2LtO30rVDnPO6J1x71E6muraq0d3v8XBuyo17B
41riNXMc50p/rCa9g1D+jmeJb312O+R39Mp80ds1arNjYTb+UO5D9F8P9ju1
q3Cftv5X352bclvLfbe/XQsZM+/9LduCYUO3rJbZseGvaU63zCf3GX/IsplH
5j55Azbxnln7AFnfHBtac5/fW5Myc99vDp0J1X3hM/f1xhCkfNlyPZK/Ut2Y
Ti3oVD/mWdaRqXs2KrkPuY+N75T1au4zhy//7jGouU/2g9nm3T8z99W8V2yE
Ae7zs+NNO0wfwzzuy8uwZ7tj3B4RQ9zn+Oc7+v3Jq9jDxmNGDt4S3Od4DOZs
+ztn/6Y+Thhts9y39pc/ln2j31N/jbUZPWbLct+Q3ZU19HveTuxX2RnbHjuV
453lPmL/jdw3y33cn4nrzH3F9p2/HGJ6uA9eQ+FLSnHDnq9+Zhr6BshHsF8f
98l+cp/sV3Mf56rXffvymJvK+RM+++THZn0c93Kf7DfEfZ6jzAsfLGLZjCX9
kPiNrO+yiPs28uxiiPvy5zqW1XE9xH25h0uObWAbHa993IffLcc62jdhiPuM
f4HlqGGDvn88G8cp99XfE49J7l0f9y3iMbkvs591O4mp7OM+1nMRo9W/55jT
zH1Ouxnmy+wX51v2J419/F6c5L5cpzJzn9fjKr5x8Lqc2fFVOqaOx8x9bc1O
c/uY7p3j19bfPXm73Dvgvi/+3Ih7ioL7PFdG7nt1Vft+7G+3a8+W9bc//KTD
fUg7P5gvcZ+2L/ezzH3a43JazX2Ie7b3HZkP5dwfppP55D5Z5diFXeuHzr/X
4T5jkXLdz5r7Is7z/moox43mHnSIe+iZE3u63Nf666iBk3ltcF9Pzjum7fCc
8+qL/6y5b5llLDrWA5x/cLWp1ZJz+zL3WcMz1/rMnJ2571KqEZFtyEXcR+yc
NRl4Rj/EfdpZxT6Y2Fr4KRxrQ9ynH4HvtLUaO2za90Huc4wV7mtjy5yncZn4
RLShh7hPrnFdwzb9Dh/Z+RT/tlbYJ3NfqQWTmE/u06blPb5U/W7O12V99e3t
YIWa+3K86xD3DdVv6RyLJf1vz4P7OvVA2tzIHGcwNGYWbctm7D78bO99uD/0
u49OrL/18dlQnHfZvliiF2gn92JltgYM/Df03+fFfeQzwX3GRr75u/8WPig5
hP/KJ4j55noxxH9uhvs4jzie1mJCjJOow9OeA6E9b5SxNMR9sh/cJ8syP8aN
44v/hp8x9QJdNK69Xw36nSruy/Vr8vkj26Hi55soc5/sx3o6L85T9o85umwf
9yzZL3OfPSZyzt2tb0+H+riP7fJ3ph3qYyH3mRPYx4Z9PBY25OM/z+W+er/q
x9wop7lOOf60sx5LMOrM9evB7VBfjt+Ltu1eV5X6k7lGZY9fy+tyvO/xz07t
s8pn6LX5VejrXOpMrHV9Fi33vXPw02C+zH2O7cx99Xmiz/6Fb9+oTSm4L8UX
1tz39t5DIfofZP9P5qKot9X6QeQ7+/KVWJb0fdxfJvd9Xmvuy8xFTT6ZDxF3
ePjqjiKZT+6zFvnRC++v7z+1pcN9uf9azX0uL28X86m57+Rne0N7D+5Z37Ll
Vx3uy3zmPnzn8JlmP7f+QGulhiY2oczdy311zZhnwX3VsUYwn9ynsDOs62Ls
Z819mfWwzazD08d91krh+S/P7RF2GjUWau4zNksm643xa8eWbCP3aatZA147
q+TSJe6b/p56P/xQ1Z1t49GifmfiPm3bzH0IG02fD/Zmts2wR2W+edyncp9C
c5v0V8BF2L3GZ26E+2L5ETN6O0QeoPX40ZmLf+gwIct+FtxXy9ha/UHYrSwT
XxliLPC9cYBNfuT5zj7hu/xcaeS+WxHjaRxvbcfAffBfHrPN+X201A/K28R5
xH62P9xmuS/yESfn/6WLhzp9WJD3jeC/EjtyvFPHdlnuo38l0kcfuZD3zqwf
W91ZxLRsxyLuk/0YY321RjfCfY6tofMmc598x/7L/Wvyc5+oh5rWS+6T/ThW
1kChriffm3OXewtm7uvLwYOP3Laa+/Bv5x4OMKX93hdxX81VEWPZst/9v1xc
//rW5yG2gz6Dy8QTLFpG/tzHfd4Lcn/5eTxYsx/c1/EhLcjjHfUMbdjcY85a
egv6aeR4xcY26vfPFu7LtS1zvcs2VvRF74PBfVPuI2uF/fLvwX0TLfsMpYmr
bs79kfteTdU9GUOTsRy8hw6tdrivid073st92V9Xc59jJupqfn+tw31TJrve
mRfMh2AJ+qeimvt4Fr1z1y+Kau5Td9o+c5n7ZJw8v5r7Tl7bs/7ZpYuNvrw8
w31q74kDhZ/kPpgP7TqyUvoFvrNzV/THgPky9/Wfr4trxmz4ePdw38Vrh0Oy
nKyXuY/30cuh9BM4WTi55j7sr+jL1vJP9Eef8F3mPmN3ra9nPQbu+8Z6eh/u
s48cU9qQLL+x9S51uC/bRUo+yDktxQ6bw32K8el+wDbTb6LvZB73WT/Rvg6s
q3Yv9S/0bS/LfW6/OYGeZ6yj24sd3IntXJL7/H/Tn6OxR/ts3qF4tvwdvIYy
8z0P7sv9WpZlvQ3Zj1V8cM19aOvh1dnzbslYos5/Khty2f89S+7L0tekbxj2
I88s19HiuMgmzM/c1HncJ/v1cZ8x15yD5Hw6/j1/zAVt/F/NtMtwn7VcENvv
OkbOwHcXO8+J5nFfzo007nLo2cFc7mtjRN03zCfHgct9uZZVzmmPGjCr20ND
3Ie4Lvcd26HaK1F3O9UH1Q/IdbqP+/TZ4fdb9pzSfkRD3PfU522yafET5vjX
/JvcZ03T+h6RxflkHlRmiM2cs6M2oWPdWMVsy5ZY+iqe/ujaxZKjNnPMcp+C
Yi9d6vr5cm3LVLc1f9d7LW/zeGa4cgO1HHKM5lLTLtlPEp8+Nkff8438mfNi
ei1ozn1eX/g4GLVh5ZjF8r3cB/NNBKto02fuyzGe3Htybt7Q9Vfu8373JOU0
1fGY2BH0j5D7tDdybnvNfVn8XnPf9WvHQtyjqeGSuc+YUZjR+dfcF+vQ1nLm
XHn0YK3DfZ+e/Th089pn6/funQvJfexHue+Dd/8p9N6e3Y0vcNnj1VcrdGV5
H2AfZ9bcZ/wmjM0r98Ah7vvLw9Mhnulv/d3fhThWfdynmj7Ax0PW86+5b/D+
XdlOMl/mvqZO55lO7wTsppx7M8h9rXLuDNsmayzivqiFcXRL8VlamwTBatgx
i7hP27axhxtbluXKe4ieYti62opD3Kf/I3Mf07GN/vbutn8LO/j02ZUQ62LP
DMU+6DseG+U+ttE6jAhfJYyn35Jtc985fjzvse+b2qhNb8OolRPxgc0+stdF
J2fnZ8Z9fbXn+nr9qc58JoL74EJiPa3vkvtB9vlJn5b7Sm3PyX/MSfWcMi6A
+d75erXzrGMZ7pP9GKPGi/JMQ/+/PricZ0gsdq7jOcR9jCH8f9GXr/UFGjeu
X3kZ7pvnQ16G+9jGXBs58uon3w9x3y//5/8ROXyIfDjy/WTcIe4betbfxHne
mOE+7cR6HtZ1qbmvz7fWx30wXu7DPlTf0xgz4z0X+RZzrbg+7sOmtZ9h7mWR
7xGr15o4OJSZQe7baL7YqE3Yq1WthL593mGdHNd06UJwn+w3c63t62kwr+5L
7n/Xs7w6NrSvjmid+z1rr832WMhxp0P3mJl+e9V81766Hbl5nt/zuM/zgXNE
9iv5uyP3vbLKvedyvce3j1wMZe5D3HdgNyTz1bkK/XbRrVCe7knlX4l7aZs3
KPcheOLAuXdDMpl8B9d9tLYtlJkvppkwCGyI9u/7zQz3HVzZEnL6zH3Oa/v2
N4p2r2yb4b7cg5B7SeY+t+XkiWkNCaaT+Qr3VbU853FcJzdQ9uubPufzDvSa
f+/45dgPsl7UZe/hPpVzIFHNffpl//D7ic3+/i9DuQZe5r66j9t395bLJcuf
4aZc96DJ+Vob5L7i86tsd+z1PC77uE87E7azv1n2mag+7pPX4D7f8/yduugy
kL4+/yv36e8a4j5rWWCb5O2N3hOtHdnYp9P98ay4r+blYK7JMTXHMRhh8irz
s13UhPypuC/X9mU/zeW5OfGdUUcijR+Oc/6dWFrrrHzw0eHuM2NjjjZZ42HG
rnkO3Cf7zfOTsn/ymKC+C3GSHrvIQ6POUBt3mfs5bJT7XIZ1QjmHnE/kbrex
n7IXPr1F3Cf7EddpHty7W/8xek34/LLJH71expDcJ/tl7quZQu6VjTZSGyZq
b6Zzuc7prbmv9AKlb+pkv3mu/OqX/7WX+2S/tctHehlqiPvclnraPjvR/us5
Jx/+k9FqNuP6l32M5FIMcR+/c28tftc0z41yX+7jm+3Z3Mfe43nxzpEQvR7g
Ptmv5oa+c/VF23U/F83UZDFfb6D33JBvC+7znKprVXaYLM9z4Jr9zomroXLM
83/6cgJrHut73y6n+BbradwHeVlD+6CN6ax9jNZmkfsQ54ex27mPJ3V9tXn4
XOyfyTkq92FLv+jxMWqT51XKH8s9/WA+4xO3H94fcZ4193l9XOb+lrkvX4tr
7pOPolcutbxaPxLMJ9/hn8MHlbnPHnPEZ2qD19xHfoNjlvc19xVuPPpW5Av2
cR/bnzmo5j5thibfrOEjuc//sZ3aQKunDwQr1tyHIl702OUSM5p/G6wHI9sd
S9fK1FPC406t0j7uy7XdeG/Mbh/3GV+HuE/b40num1f7PGuI+Zx3HWtjft4Q
97n/rd9p7p+2+xD3lVqd313s+OWwxXJOX2a+mvsiXq61Z4lro96g9iuxrdiz
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
rHtCPh+S+2S/zH31OmDb2TO9j/vw1aGT+PHPHix92jss13Jfh6dSPcCfgvvY
/uLjeZxq7LTcJ/vlY8g1P9eLkftWr57vnks93Pei7bhXSTM1Lau6dkOa5tg1
3Cf7HTv/QSj3hpH7Mrdl7nNskMPmfOG+m3fWQjAW3Cf79Y1B/v/B57dC9fjg
1Zj6zH387/Y3t0OZ+97qYVzrB8F8mft4hR9LfdmJvc5YRaxv5r5cO8P3+Pvh
O5S5L+8/uA8x7dXrjeQ+7Xg+v+ixNGpz+s2hMzPcx+d39h2K/Bm5T5sXRpCZ
MvdZ0zr35Mu8Jwdxzs1w34O1ELU7sR0z93nfzLkSMh/i/u971yNzn/No/BfH
Z7jP/u1e+2vuI440+wBr7kNxr5ws4/a3a6Ga+2A8+r4jYk6PHd3W4T7qoCC2
2xqZrGfNfeVZ8OS4nDyzJ4QfNsd+yn2InMDfbHtn/Vdbfhnq4z75PD+7zteK
zH25V1q5b391rjBf5r5sX8/7vGk2TDZoHh8b4T64zN5w9oKTZ4a4L+cx5Wfx
UUslxW7JfPO4D2Ef1UxRYrlabsPGnsd9jnls7NzfrjkvmnqX4YuZHO+cc5X9
CpvlPpbFOtp3D/bK+2jHu/9U+pd37ovp+WTn2jOxBX5K7su/v27ch7RN8P3h
yzX35fSfz3Sec8CBjh3H+9atfx9izPRxn+w3j/s45+A+mSrvZ45LzmH1+Z3P
FIa4T/aD+3KMZ/YF8pn1ylqG++xpmZ/x5HhY+xHW3Cf7cS455nIfJMfgPO7L
97aI627PR9b33Nl9M9wn++n7RjBafmbfx31Dv5HLV3MfWorDWu7b7PV+Xo+R
Ie6T/TL3aeujXAdU7nPfMp3MUHNfZr4Xbb+9KprpL7BEvEKH8y5dCPmZ43fp
6yONTypx38mre0LwitcCuY/7bo71cizwqr8LyX2OoVzrtX4mkbmv7gvo9bVv
fMJ9XmvfObYW3Ify93le+b9yH+L81o8g91nzttN7s83VM85b9vMah080M3OO
CZf7zH2V+9CLHlejNqfgvpR/iq8vcx+KXLir+zvcV3Ks7p2L72rue1LZSTJf
7jukau5T+NdyfKE1QZmX9125r+4B71ivuY/YUOND6VlXcx+5Xrl/ec198iAi
/hIGrLmPfn8f7NkefIfu3z83w33mxfGb09Xcl+2L5jn4aof7jL899MWnpU7L
/8/em3bHcV1puv/7+vb94l5Vd63bVd1VXSVX2SW1qYGWSFk2R4ujRAKgRIKk
xQkSQYIuThI1UGUNdqvrC26+O+M5+cbOE5GRCYAgJXx4FxKZkZExnDixn9jT
+YtnIlaWWjDOfeK9O6N5gmNCrolzH8fOa5XO4j75aGFXxazuFPd12fC93Nds
NzFonNde7jOfXxm/369N4gdV520G97XGePM9YtW0Lo5tF/exvXCfpNqoGgte
B0WfYwdTs3Me7sOuPLr8cvHfyI5/6aX/q+QNKX+L9yS9Vl0Z5fJJuudsJ/ch
fe+dE8dKTxBdH9pfuE81O8gjVG6Y7HKPA9X2UENHn/XZjtTslP46so+xbyXZ
3NSR7Ottjo6dPta2C1OP3+2MBSv1XlLNl9pvDOE+2G8o9+n8M24knZfof1J6
fV5szR16dnH8wr4Smwn3wX5DuI+YUbdPCu81vyu+1HnP3Af7Ze7TOMcnpvGt
ffMegV5bpY/7vM8dOQ5+PdS4D/bTPnNt69jAqHByH/dx/FVPd5xjMOaskm+f
uK+P/Z5Hzct92LxeMzRz34QH2v5T5z7lACp+sHXN7XHffKJWSk+fBRTP9x7d
DNbO3Cc2kb+O8wf36RnEuXP7Ny/fORmC+yRy8OnxU3JZRudW68LvB/ep3p/b
PnCfllXfA39+ETVSRuNDy+Bfg9XEZPp/lq8a7tM9VNckvkC9T68F/d/1fXz6
0c+k2TbnPm07+w/36a9y+nTMJLhP69Bn3kOG9cSc0nCw/mcO2fWxtaeF1KoZ
+8GY+8Qzkliv1EAZvYZPFPvx6r6/aXGfRH0Waph02fuZ+9xvqM+c+8Q6kvxe
4cNr/Gjj++5qo6vlfbiv9Hf68/WW3zBzH2NcrBX1RBP30bPc/SOZ+yTdfxVT
KnatcR82AYxS4z7ts/dH13Zm7uM44QuU4D4xH9zHOnWeZMf84qWfVbkv153J
3Od1Xfy1q4/7tsJ6Y9/Y5J48K2+wloPYxX2lxov5+KjhqXvFLO7T+fBcPde4
r9z1QdwnH6n6Gfr26rvul8CHMpT72EbPNaWXA+Nd70Wcm8XywXyLcJ/74cRc
qm8iKXbTcyYKn9T6Ey1Pc+AQ7qMmyB739XOf5L39JPpP5Bxa4j8ljk+p19kw
IOd/Ue7j3OALpGaKXzeeJ6Bt9L7us7iPnFjy87huuGbw7zHWM/fBfnAfv9eq
9Ws1johH6eM+Zzcdw5xDOoT7vF+8zosf/8x9NR7abYbbCeGHiPzkbyc9GrBT
sQvcBq5xH1w4yXXu4L6Onth7qoj5r6M+pThPXFXiOhru07nAJoRNiNUU04n7
JOc+YhbPLh8IOfdRozzm+ob7EDVO4D4J3kNwmMYEY8O5Lzjs00fFFwf3dY1Z
9czzGvP5WYxzH6yb10GurXMf41ty7vP34T7NF6wL7pPo58B1hD3hfsQ97nsx
lZlPkq/ZuW/fKz8PvTK6p+gveQHwhKTPmG/hvmyjew3seI5rNTwz94klyfVb
3zhf+CZzGywE97V7DIzn8sx9Wj/LaT2Z+0o/iSb3q8Z9+i3WqZqhPHeF+yRq
tcCmmfv8mZLyJiPHvsJ9UqlT/ni51LbhmHD/12vmx1sb5wrzOfehsGuavEI/
J3Cf+/W8p0PmRP+echLfeu0fQx9dOFI99/7/EBbM3DdLmfu894L325Owubq4
TyJXh3uFVPpDW22TzHxwH2NL2+DrEeup5iX10IdyH7FtbjtG7ZjGVozr4PvJ
2IT7JrZiP/d5bJn8f6+Mxo5EDhfXu17LXvZ+67LnFZO53dyn9+T3kxT7qfg7
+rzptXiQ7cAfJREDih9S+Un6C2PIxyNmId728aNrpa+gfJY6L9RZ1Xu6R1PD
bNY4FK+oj5+UbZypfr3b6DOY1eNdytwnLcJ9zDv456ivo7Eidvri8+uh8Rx8
rcwpWpb81Xm5T89ivEaT5wHid6fHieKivR7SLO5jbGsfNJbw78Xc+rT9DLzV
29O5Lz3rjPyiZtvpUdLHfb6vuga5D3h+YI37NH55RqP7SLn3VXIIt7NGyiwO
+89tiumf5zeDtZv4zHuf37D8rmnuKzFLXz9q9Stz7tOyR69vhMp1tsd9s+ei
3Ffcue+DcW4axxXuk8Qb2Ds17kPOfRHn2fCeS9wHu2gMuC3DmIk4buM+1bHk
eZ9zn57j0M8D7mN84AeD+6Qh4xXuk9x+6Voe7mMZ4rrFfRwX2Yg+xpkvdJwK
/41sVnq1O/dpXsjcR9xnidMbLaP/tYzqvez2ONvTAtdm4j5ijOW/EsvBev4a
lhAzZO6r+YM0nrxXKrYq3Fd62n23UVgmc5/nmXkNz7gvWr0XGATuK88rkq/R
uS9qxjT3V93LM/cR++hMmLmPmpzK+VOfQ9kcmfs8jyNsdbvvwH2SmFFxtPgU
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
c+vcp3oIpf6ncZ/Gij8Lh/k8vhPuk8SafBfuk7Qd/BbcJ2nfsKHgPkl9Gdgf
uC/sTauFCKtxXKgVIO67d3sllMc47ObjW8dcfcgkcR/sN+T63+O+F0/F1wf3
rdwPLa1OagvWYiXJt4j67o2/CB+Sc58krvn66dpUrgMih1a9BZz76JOnOXvS
h2zMfd5bGbaB+7y+ZJ63+2IHs92u68qPAcwH9/l3J78xYT5JdUD5XeID4Cox
mz6Xbt45U2JCVdcJ5nPuk6JH4NNJ3GTmPmqwKtbTc/66uM/9fhLc53XimGNy
L8Ea91HbhmPhsVnMmzXuq52b7ea+Pp9fFw+6Hde3PdqP1euXOz+H+6QvP70e
yt/H7+FjcRb3OZcT+0lc5/pnH0/8y03dUdh9Xu5z2/H1/b/cPHLsQOitP5zc
fPX4ueJr+3Xjj2vZAhbbudPch04unWpd90PGTPihmvxG7wHONaT/xRDEgfoz
5pp0b/e4Qc5/xPeO2Of9s4emGDnm4FSXZUvHzef6LXCfXrv/T+NZ/MH4yvuu
5xccQ31OrRfnPr/G+7jPe+R5rICk65PPNf5VE1cayn3qAaJtfPv4P5U5MPcv
GcJ9UW/r0+VWz3h9HnWfmmcvQ7jPxbMg8vO6uE/ryf3/4v71+fUq98F+qlv4
rOp61kSu0078vuxk8r1kF8uuzdzXxX7um9H/33z7OHxU6sm278OHoXI9Ney3
23bcrtqQHkuQ+hmql/nNB3cL+zj3qU+ezgXxtc59urY5f3Bfzv3zfD24j/Hs
3Bexmk3s49PPbrXG/JnTB0LR66+phSfu+/OXayGtl7GS46ILc424j+2THURs
acSJNj3glXcn7oP96JmnZ6b+3btr50LiRXry6X/PH4Qv5c9k27yHulhP/Tkl
uC98kT9Mng/BfcSVctxlX7qvu8zTFp9au2Z2ewzuac5rVpx37uPW/2I+KWK8
mmssn2fGqu6bmfu8vqf+d+5DZfw13Cfmk/S8VnU8JZgP7vPa1fQ0h/u491Mb
Rqpx3yy7j++Q963XxH76M58+H4//Ltzn+cBut3N84T7q+aouJvGiyr3TM2ye
xzj3yc7QOZDoJS/my9x3r8nDmfQ6XJ3iPl7rvMGgWq98kF7TAJHnR1yVuE/v
dXGf5w8GizTP6Tk3Q+zzWTkpbhvR11k2lv725fkR24nd5s/PhwjuO3jhZujA
udXNu4oXWT0ZUn4qrwdx31/+1PJJOZO1/XvXy7UB97FsF/d5H0OYdpy3OebL
qDeh7398MaQcupcPHYr6Klvlvi3PWfR5z/XBE8O8eVY+vA9DzzP3wX7zcN9W
8/88p9DPlz6jxkvu8dDFfbBf3vfMfRrHHDcdC17LJ+3PMvL50FicxX2wn8Yx
PjwdY9UTVs1cSZxHTqeuSx1/5s0u7oP96PNC33N/RsIY6eM+5P1CnZl5vjPF
RYn7mCc9v9GPT437PI/nl//6/xTpfkPN+hp3xT1uF5mwJvUwG7psjfvCh9rE
qvGssvZd/DnjOMI298F+XIehHh/Xj11TfXjsWIj5nPs0X565rZpyr4XgPunb
p+vFFvI61V5fh3Pp3Ffmi8QoMJxELCXcp7iD4LKG+eA+cgBZP9zXdR3wvj97
1Ziivspt/bZxn1hO0n4493FPEBM697Hdzn1+D3Hu09zEd+E+XeOwL9znvead
+8hzxO8C92X/6h73/TiUuU86eOFWCO6rnWeYT8qsl7nP5dwHW7Cs5Nyn/L6o
Xfb0eshz+MV93O+oBercV9vmWfaf14Gp8W6OIe1bj9suHifLdjj3MWfc3Zj4
O+E+aq7AVdKZG2+1Yj1hPrjvg38/Grrf5HJpG2rcJ78ePkXlvqgmj1TjPvyc
3iuwi/ukErdIXcvvu7nP8//kW+o7T30s5vFQcB81HeA+Sb4/2WTE9tGrgd5a
Q7nvwePbwUWwHrbzLO6T/+TC7clzEPiN9dIrbR7ui9oUTe1C79HgtWjdbl6U
+6K2phhOcYjejw92yExWySfbkhbgPrjXeYFjpGOiMefn24+FxxhqXGgcqTaM
pNr/8mORyyqWp+eDzrdqwOB/Ut8HXSNc316nVZ/LP1nyFTmmZlduZ8+HRbgP
0ffv8r3ZPODHlLE8lPu4nv0ZDT77Vn3OEl8//u483Od+MI/HdanuT437YD+v
favrDX979Jr4elLLZhb3DeWZwn3GfhO//Fq7XrTFwWXuk46c/lWo1t+v3OsW
5L6d4MV5uE+2NecF5nPug/26vu/cd3B1o/ta2uO+3md63oe9cF/DfpoH6ZGX
uQ8ejPhr474uP62P9fLcpeE+apVI5BjDfcuXDwWXec1PbYM+F3vxrJ3xvH57
pVWrBe5TDKlqfhK7BvfRExDbDe7jeGgZCe7T9mp59kXcR9yl7imtZ4fGaMxP
4j6OnXNf7XhxzLy+TbDfaN+JF4X7dH6850lZz/d/is92exzuad7rdr3UdOE9
MZ/X8+iaG1lGPi1nN3HC028ehhSb6NznPQD1f+Y+BDs692me9vr43mfPa4J6
D9zMY4vGDm5FcF9+z/2Czn3MEa4a9xHbqdqdynWUdC5gPuc+cg/1OxP/RZ37
FAPK+YHpM/fBd9outkPzzPj99Sr35VxL93HBfJn7auzVxd35PY2RyTPzSb5M
F/fNe167uC+uq9HreP/McujoxaubRy/dGP8daRD3VWKPvaYy/kv8ml3cV2we
4z78g16nS++rl52kbS71V7wuiHhBvRlS/tks7tuRucvza9L2iJ/o0afjRjwe
7PaicN/UfnMurN/qwsdvuVlXis3q07zc568lsYmOHf0dFIcoTvNxznERG9W4
D/bL3KdYSnrYqQ5nmQdGc4/Oj3pLSrDnEO7z3pzadp+36As6i/t0DXot3rj2
NJ/ST77j2WqXGJfUL83cV9jPYrOIKZFefeW/zuS+ofKeefn9Z3mP1T4658EJ
zn3z1JtR/Cm9t3u5L/U+/iko5t3l9j2B+4T8oasbqmN5P+TcJzYqvrrRfMhc
GH0EGl+Yrm353iS4jzo7+l7mPp1T/YbHe3Jf9PwXuE/fibp5TWwp3Cd5nRW4
T9L3VS9FgvskxWUR0wn3SfLjkU/oveCdcz2nXPtFHCzcJ2nMfjW6p0hwn+ac
xw+vFxaE+9hWxdFKuU+Dj21iQFXniWMm5uR95z5JXOfcJz+o90vZ474XTzXu
U46H8ryGcB/5aWtmN2fuU11/aj3CfHBF8fNdfn3z2NLLU9zHMvoL93ktGPed
Ze7LtsRucZ/bMjBN5j6e4cjfSd8KZz64j9ov4mX1TnTu41xE34VvJ/m/3jfR
uU8cp/OWVeM+nYMnIxvjScPaqi8jwX3YFHBf1OYb/RY10iVxhh8Pr+PntU14
ng0HTtkaFR4ar7Nd/6HGfb6O8rrC5X0Ss8F62V/if3u57+7l+M27t86F5Ae8
cetSSP5A6ilKQ7iv9HcwezLi8FSPpvELaD2c+/FyFxbmPrd3pjgvHZMdm7u2
wH352VDLN2XHmx7jkmx8fRf/asQZ3j3f6nt7+sjLod/v/4eoc8M9k3HGePee
26xfdV8k+Yo7j91OcF/Dfn5cZx13/dXzCZ5RzNIs7oP9mBtYlj7n1GTyHub5
eiaPbhb3Kc/P4zlfTnEp2i7yAmdxn9fa9dxcfPPEXfdxn2w/lh1yLJ37vM9m
sGeJ67jais1y7tN9BJ+ffA19fq9yfBs/GfcV5ssu7tut+yuc57GA1OlclPt6
rwWuw+2IYX9BlLnP7xNwH+yH70k5erAQ3CfWEm/IP5a5z/21zn16n5hHCe6T
qO0pOff5uNW5de7T/A7TOfdp/sAmc+4TB7GMc5/2g9fOfbouuAc492lbGKPO
ffIzP/7zlRDcB+cyh8J98kNq+zh2cB9xss59Wv6jq+/HdyW4T77PjU+WSu6h
3ue1zgvsp2WoE+Pcp2U+unB418fknua8htPzKjEf3JdrFfbNk3BfrWde5j5x
hSRmyNyHz0mvf3Pk71vcJ+lamvR1Xy/MR+092M/9XH5f2C324/fZvswomfvI
7Yu+fk0PdvnlMvddvnk6FPl2Nrd5zSc/H/pdzlHMkxXuk2QfaL7jvMlGytz3
9tsvhz5cu9WqsxP1GBp7KHMfdpvqtfuz8j7uox6lJNso+mJVerrnY4r92LJf
yJtjXP/lT53cxzlTXFgw20jvXrg4iPvK/THVHuG12G8o9+E3LX35LGaReNlS
22UA95GXpXOCr1BxcAePH9vcf+JsyP1OUsR4pn7qu8l9JW+Q2Mf0W9p+4tCn
z6tqoF4K6XjUzjuvd5r7qjb2aLmlC6ciVlVS3qT7Alv5f1v1MzjXD4zJHcp9
S+sPp/ms6YV3Y+1MyH1u8p1qrnFGJKZzFvfh55MU1+nPOOgTz3kbwn2SXl+7
frz1nJHfU36j/g7hPsVSeG9A1TbluqOeYRf3se185nHKbhfXuM99I/7ccV7u
8x53mfvmkedjbbfwW3jtRee+edb16MtHm+9//CBELl/ntbCducsviKZizo37
8HnB2M597j/DxwZfqIe6eEk5qZJzH3l9UuY++ZsYk859sqV4zuHjVusrfQM/
v1HsCriPeEt6d+p/fMdiKDhI3CfekcRVsJK4j23VuOPa0T2gPBu37XUfJrl2
sF+JlTL/praf5xhwH/sK53l+pNgb3yDcpz4Vn/zxVIl5FdMRn4o4L3EPHG27
loH9Ht+/HPLv7faY3NOc13DiPup5fnxndep5KmNpVt5Trf6nC+aTcl3MzH3S
qwf/36gbI9aB+7wuDH0dMvflOCPvzTfvfWXWPg1dh8dc+mdx7TbPgli2xn1x
3JoawRF3PlqXcx/ry/dlai/Afe4PxD7SOpZuvhO/VeM+j8d1X22N+4iF0HZg
b1HvnP7M2XYJLmzsFq9BAvdh/zj3wZj4M+mVzHjt4r4h5ytzn5hPen3pk/Z1
lPvMNfXdZnHfhWtXNpdXz4bk49F6l5eOhOT3IX5Qnw/lvnHvPeX83AjpOiCH
b1zLczIudP+S/2Nh7nsGsZy989YOch/PIDQWeV/jUMcKFnnyzdXSh43cL8V+
Sqrpcvjtfyp2Ased7/b1QNgN7ov1Nr7ccm5nnNP3PnkQUpzq55/eDYmHPvrT
w2C+Pu6D/Wrcx//ELtILQVxVcuJG6ynPTEY2zRDuk84sv9liPPVr0LmStH7P
+xvCfV4PiN/TWNC44XtwH+zn3KexQk8Qan9yfPARdnEfOb2Svsc8CuN2cZ/2
DXuNZ5ARM9vjsxvHSq4XGzhiSTv8fDm3zn02eVli3ebxxX33fb3WBty31fu0
c5/Y4Oajm6E3LlXmoZ9IH4epPjAV7ju4cnOK+/TXY8bgPiny0ho7IXOfPqtx
H33TJdXuEffBfj5/Ow95DUvWCfdpDNE/QYL78niG+6hBK7+Ycx/r1Tqc+3hf
NUyd+/A3Rk9P475JDYR7Le5jnaxP6yZ29ZON5bJubaM//yfeVtvMuYH7JB07
OI45IV8PcJ9e//XbeyG4j2V2e3zuaY5ruRKbDvNJbT/R5L7htvRWfWe5Bso4
H2nS603M59wneUync5+kOYb7bRf3LbKNte/Nu+/Ofbovw62S9itzX9So+Xo9
4gmYx2rcV4t7rHGf1wNRP0IJ7uN9uE9SXR16P+h1F/dJbx95c3N1435IdSRX
H3/a4r4yh1utxJt3To97PjY5OzXuw1cVMccNL0pj2+hqN/c1fIfP8GnT34v5
dNa5+vMXa5unVy+Hil3c5QupcJ/XYyz1ORL76XtDuU9/iQkhXpf98uPCsZmH
+5Rb5vllUrWnXKrXVuaMZ8h9rePa8Zv7Vz/efPXcrc2DR94KqX93rh0yyWVf
nxoPPJeR5BMt+ZE//Kl1DcnWdp/U2dE1SR9DcbQ45tg7/xpSHwFqW8ItfTX8
vZ6r6pMceufXocLjVt9m245thfv6zmsX9+XllA8oFpRq15pYC97y+qdDuY88
On8WwnMQnWPqNUVvl4Hcp/Mrnx/PuzTvOvf586U+7tP8Fj1S/2Uir50M98F+
mftaNVF/mDAz/UNhv8x9SLal5gBsxNf2/U3h2sx9Xf2dJbgP9sv1NvBByNfS
xX2q5xH1NhqbF19njfv6/InOfV5/sW8+H+Kf1Db89bv7Jb5TfQ37uM/7OPyk
uK82LzTcJ5ZQPGPpdWfcJ35RPRfvpQf3qfYINS6V2+ac430asPsit9ZqfOZz
DZPJn+Xcx/e1XsYQ3KfvxjXR5NR1jRO4L+Zp1f5pfI9sK35F3wdxn64/xr5z
Hzw74b/xXEZ9UH9uQkzrbatXI+7zPhfOfb7NsF85Tt/cKdwsjqN3Rd81Iuar
vb/b43NPc1zLHTnJp65cLzGRXEfYPc5As+paLqLMffQA1L1Sfem47+l68B7o
Xodm8nx2tm9yK5pn370GHH0nMvdFLLr1w6Jnn3MfMaDUqXuw8WFnvlve1sx9
nFf1SlS/RUn2TdQ+Nu7TX8lzMxVrKtbr4z79lcJ+tvgsmC9zX/TDariPeESe
i3dxnwQLSeS8THJy6twHA0U8UPOsXf8TuyZ/XGG+Du5rsR7XEvfH5XuDuG/K
J0idzMamp7+bfEfzcB/+rKdWs5MehNQaUQ7fvia3VxrCfbs+Z83gPjHfHvdt
4fjW+rszhrO9x3P+1bubR689DNXWSS2YWdznvjYdO79Wvb4O8xxxSkO575UR
8+g+In+bBPeph4MUffGsL8JM7rM8P73HMypq4kpd3Of567yv+FNdo16ruY/7
Sv/60VypOM8Sv231ZTL3/esvflbqN1CjHru6i/u0DvVScl5zX0zmPmo20jMd
wX2wn69Htmy23TOrEc9AnB529aLcV/MXZu7zOMWlOxdD1WvFeq7s9hy57XPu
8vpYHfEV732yEbVW8SE593mvRLgP9vNYH+pOivu8biT1eHLcqOIga9yncwob
wX2yn8SS3muB36WPHWOhy+fVaVdZfiuC+1g/OQDOfZ7vCPfRh13+Zsn7uXue
Ktyn2p1wpgT31cZ29ZoYcR/xm+pvkblvnlju3R6je5rjep7Bffm8Z+57FoL5
4D7vuyN7wLmP/DPvbbko9/X5+NwXP6SuJH0rnPuktU/PT9Wd6uqDzHs17hs0
P/3wp6lap/cUrz1SjfuwfVRHlb4Psidgvsx92DD7D/5bSLZbF/eJ99zuwQ5T
HNR96zno3If9A9sExzR2DizE/23uW2v5GaOGiXFeH/e17uGysdUrHPk9sIv7
ch1+lrPPMvv1cR89p582NTo5Rzw353/8o/Ny3+Q+f2+Stz/Dt/ZM5yuv48L2
WG5Ja/nR/6+fXA6pfuPXn0/4LPeCk83s14WOkWI4EeMxYmxVZ7wZgzAbzzAO
7P+74D1J61F+yJMHfwzJ/lCNGWJPTxz/VZlHlLs2K/ZYdRAkjYXWs4c563EO
OsZDua85znBf1DJqXvM58Z6SclbFf/SFVx6rxi3Hfl7uYxyv3TpTGJp4W+ZR
+raI+YZyH7nIGhcen8m2vXHg/2txVxf3EXPtfY40TlhPF/c5+3mfFVeN+2A/
fY+as6rdOfm9n1W5z21E7HO3ybu4j7qLbCu+uxr3kXvFMhLfy9yXfX9sY437
ht7Puf9iO9TiRLW+0ovRbHLnPv3u/kttn3at1+bzMF9ui+K+1+Y+PtNxkOA+
KeIcm7lK/OTcd2z55ZLXJwbyMSZ/mKRj3o57vFd8WF6rR9y3cuNQfAd28fMa
y4/GOP2Q4T58xJxf5z7FM9a47/6dD2bWLnLuU6xleQZl3Odxmpn7nGHhPo01
6r3AfeQR0qsPJs79Nv045PphUf9oZFezDrgv79Me9/04NbZJ11vc99aF2yHx
QM7vG+rfy7y0FU68euXYOL7w1z8PeQ667vE8w6Eedua+RX8X7svbjo9gXu7z
PF5xKvVTnPtk09OHT/dy31dnwb+O7Jp76yutXi59++HnrcZ9yiEU6zGvwtPO
fdi+2ubSs/jTW5sfP3kcqnEfttbYdvqfrc8y92Ffyabaf+AfQjceX24xX437
yvPi/7g69byb+Ksa97Wem9vxUe/1Kkv0cN/sa6yf+4rvJtkKqq9EP/TXjxzb
fPv8u8F8Q7kv+oSpl/VTe/6/dnLCtMmPWfx6e9z3k+W+fAxjXNZq93T4sBfh
Pr3WMdD1CZNpjlAMJ/svlsr2yzzcp3hmzTU67ppXpPuPLgTv0edR2+I1qPq4
T/Vg2FZ6bHqfzcm8dL1VF9m5T9ci40XcR79AyWNTa9znfUayjxDVuI9Yur6x
5twXddNGTOaxaVGjo2G+zH3iQ+Rs5zU3nPv4HZ7num/HbWpqF3sft3nu55n7
WtdWw3Y17tN+iGH1F97M3FeuRebPH1Pcp9V8yvOsjgM5ld4PjrlKtU/wM4v1
xH2wH74rZz7nPo+TdO5TDptslWC+CveV+aLhPom6Wowl7w3otTOpweV1LMVY
4j7Yr/ZbEjVVxJe81jrpVaG8Ro/79G3wmjVeX5vxJu7jOMJ9kmIuPffKua/M
E+b70LnhfXFf6PbKwjaya9fH6Z4GaeKLaNdvyNwnEWMyhPtqrLSd3Kd7MPln
+Lad+zwmazvGc4375lk39oc/rxL3qb86itw+9dhsuA87M+pmNvl16tPwQ2Nf
1LgP/59y/vq4j9dffHo9fIfyF9a4bzx3jO1S7slSjfvcNip9Gke8p7+F5yrc
x2eyew4c+PsQ3Idt5twHw1EL3Wvzd3Gf5PVj4pl4Y9NJvdzX3Pda9Q5T3e6h
cXYTP+Cddqyi1YMbwn3ELh45cbCV36R9KfVPvxv3SxTfLsR9z2nMUrVHchf3
SY3vVOwnX5KPAX+OEnF0TQ80xe/hF63lzOr7fn3FOps8TPXt43V+VqpzovcV
7ymJRZmriHFmrqj5+5HyML13oscTb/sxn4P7uiQGVP1b6cqj9fClq/efpM9h
wC7ug/0y9z1+cLnMeWIp/GI803E/Gf0burhvwn4nyrzgvjZJLOZ+ulncpzqv
kvOiNJ7/x/NZH/cpxhSfnX6/1Qu1yXWscd/KvcPle/w2tTv1egj3ubq4T3+j
tqLFtOn/Lu4Lv24Tf6f1cq+pcR92MPzHMoty35A+E/o9j0eF9Zz7eA23/u6j
dl+/1vy5/OL2NGvdC+yaZz5QnuPqvbHgPtiv2D2jexL9DuA+nhOIYzL3qf+A
2Mj9zYyD6MvR1NeE+yImSbVIGh7KeWn0wBPDeU1l71Oeue/p0xsh+eac+/CL
6f0a92mdzn3UX4i+DsZ9HhM9hPvwPfL79B+UtL/UWPF7jZ+DfA/yZyp6Diot
wn3KE/z2+8fFx6v3dnvM7mngtd3BffuW1jfPr5wMiRlKPsqAGE/1g4NT8me6
PyyaD6jcMvnDFIcI93ktXLarFQdT+Z0hfYqyvOfBLPb1fMgy/zXH79M/T/oJ
ZvaD+yT13yMOVIL5nPvITSt1BEeC+TL3Td0DG+Zz7pM0T8m3h92iPnw17iM+
le3Dx+Tch5/PbR5nQZ5917gPu8q/x2dwX2F9477oU/7F5H9/DfeVWCjjPo8f
k85d/ah9rXjvugr3zXUv7eG+SR+1O63v0VfljZXb49dLn7S4T8zXx32SbEDV
JZTEDe+cONbmPotHbfHsLnNfNV4216/c475t574pH7X7fTMDzvAz1rgP9vPl
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
3+A+2I/39dpz3qj12cV9uTb4pIfKvRZvOnPqHlM4/K8PB7Gfco3mYUQk7iMH
0gX3wX7+mY4r9VHhPmk7r8ddm4NTbKdznz+7cjuo2BEjG+XI6V+FPLaX8YD9
kLkP2yRy4iq1PVvPsRvu0ziO+q6NTw/uQzAi3EefEsYI3OfsV1OJO/5hUg9F
3Me+iXNjuxv261pPrW+DuI+aneIwz0WcR/OOeWrvLMp9H2+slVjaPe57MdQV
4ykdXL4cutfkrsJ9845Dl5iDcf6go69kn2AU+fjG9R9/3uK+rMHr/b4de8r7
mfu61tnFfRLMB/fBSA/smq9xH1ynuFbd46Ua912/djKkWnb0r6hxH/dl1Ys5
tvRqqMZ9HDuP3aT3g/e9QeNlVouC7Rv+ytyHPaXn5pq/ea5d4z5sMtk/2BnU
X5fd18d9cJ7X7iw1GWdwnyQfWdQ88WtlN2IfVyy2kbi6XBO06RkxD/e57T7V
d+o5mJdiuyqxrpN5607LJgl+7crtS3peuI9xt+3cx7Hbgn9h2+NFK9zntWuR
zg39/yRxIN+RralnjfithnKf/hdrwUyai6hzJOmeRj5s8N8A7tM40fhgTlFd
Xfl11QteoldfH/cp1kL1ZJQrpLlbkg/32urx0Czu0//UonG/prazj/u6Yjyd
qTL36TX+vKU7K8E++P5q3AcThp3d3OM97mUeu9W5byu2R03rt89vHv7tP4fc
t1pjP9guf853VFdjaf3W5r4PH4bK9fgccd+sa7rVQ7Yjr0+9Nzkfzn46557b
59x3avX1Mn78WYBzn3gH5oP7xD2R09eMWbgv56449/EZdodzn3itNuaZL/rG
pvsVtR7q6CkP0Lmvy6ZleyKv3LjPl3HuU87iImN63ucd3mtjaL9CjfXlpaMh
uC+OyWhe2O0xvqcBWhnOfbMkVqBOSO0zmMm5z5eRj67remMugPngPmqRcF9e
lPvKNfNDd97iVvoVeiwhrAT3MR/Qt0FauXmkyn3Hll6OvnrMLToeNe6LWMzR
caFnjWKgatx3p5InzHGE+7wueqm19sPtXu6jXsJXX62X1+N+ypM+xs59qq2n
zzkWrXp4HdwH+3n8lNc1r3GfsznL1eb6zH27mfM2xX0eO2TcN/U96x8Y293U
Nin19n+M3DdgveJeaqrkHCnqqiA9f/Aasn3XuGwAarm8ffVG8WXX+rFTZ0e/
Ids/+rqPpN+nZkzkfj3tz7GiFtv+E2enj90Oc1/f+tWrIdiuMh5b9XcW4L5a
rSj1xhBH+XwLu3VxH+w34b61qeeamh/gKXoyME76uM9jPJWTrFw/Sc8aiL93
7oP9nPuih0BTWybqG4/mO+/5zryXuc/HsLZX4wr21L1kSG9z2eHENGp9Ne6T
8AOSv+fPTeA+2G8eu7Vmx/bZsrP8NL5e/CjKZRL3wX5wn+IC/Xta1tlPyxx4
6+9DX3x2s9RphPtgv9b8XamJ8kzmUI+RqFzTU/Ekmfv4zK51uC+O6YilYCG4
T1JtFnLxTl85GNwH+2k5HWONMV2LmfvEIPRccO6bdW6RM2HU6RzxkxQ97kZs
ktnPx048v+8Ya9gJYZs0nAf34ZvEB9g13uE+2U34HLPUJ4JtXsTWXESq5TmL
+/y4UD9U3Fdq5exx34uhknv8cfXzI+eXNz/64HCoi/3EFvpcr4dyX5cy94lx
uN7gPo/zE/94r3Lnvq7fcI6ZdS34tTsv89XiPZ371p4sjzW6NxMXmblPdsTV
uydD6qcu1bhP9gJ+BsUWRD/uCvfpvGCzyKeo+NEu7oO/Hjc9EFHmvpKv2NT2
lMSW+t+5D8ai77IkO0t2z+kjL4e6uI9tzjXuJLgP+y9zH3UT6OkAg8b57eO+
SzdCtfvnrl+3dv1O9YCwz2dxX1mH8eOu79MHKcbQ5in3X+r/VxRLZZ/NPDfN
/v2YuI85Rf7FVm1Ps9kWOgcDxvsQ7nP2c+4Tz8l+zKK/H9/R93lPPf5+89v9
c3Ef//t9Q744fH3UdCEedAj3RQ5S4x8kn1jxoV6nahb3nTj0y5DiOmFAzeuq
EcFv93HfOOds0uO91C1terVn7oP9xC613tZ5XDn3UeOS+M2VjVPlGaLHf8J9
+E1qveBn3jcry+4k97nfjrGUuc8lPmc5uA/20z7DfVPz2S70xJnKw4Xtct5h
12f+PV23o89Vu1MxkVIc08aPJu7T+PCanM595H7pf3Lu4L4vPr8VDCH2kOA+
aciYiRz9jjEiBnTu6xo7sKtsmtp6vJ4s3KfnbardQlwn3Ne1nVqGeEi4T1Ks
Ahyl5egR2BXjOW8c5xDpuGtO0Fjuu3747Suj+UpSrZtcI3W37Yc9zZgXVu6P
1cF9a3dvVrlPuV5iMHxt+hyft17XWGIRiXHI4YsakM1fmE/ScjDZLO7T/AD3
Dfn97K+fp+9EXjZvU437FMMp5oOf5DfL3CfJn9daV4X7JLGex5jXuE+qbX+N
+/Iy9PDr4j5sW9Yj6dk4zJe5jxgriZgrz13J3Of/e/077Ls+7pMtJbsIuyqz
nzNfXCsvCPfV+qq1YkVn+A13fZ8+mM19/L8Q942kWihPP78Rkq0stmN8aizA
eRov+p8cUY1dj1WOOYJY4dH1pl4a4g8pf9b63/K5Iv5z9Ln6PkjqR6D/PW+L
6yjmlb/Unyc9C+7byhhxPx893Wvs573d9T3nPv2v65K+lcdOHyt9XXTtq6aR
npVJmjv8OM3ivjJHjo5zLY6s2EcDuS9iEpoanH/+wuqsWw3lLu6D/VTjivuc
5njqBMEeQ7jP+9SI/WCcWdwX8XEN29W571T8r+Xw6Yn7sJ+3g/t2wr6l3ob3
MnTuExv05WVx7GufcU1n7pu6nmp9czqeoczy2fd9vzBfnvtt3i/XZK1OU3Pt
w3yZ+67cPFFqqIjtGCPefx32k+A+sZH3cXfuq9XMnKU+XyDXsViSmpW1MUcP
d+oN5WVgGn1eYk4b7pPkJ9N+SK35YrRP9FZ37nNOde7TdQmn9nHfdl8bPAuC
+/76Xb1vCrEJEtynOUD3wz3uezEE89W4T8wnXVp+pzCdzjs9GsR93JN0HWfu
k2p1Xzxekhp2U2Or4RFYz7lPurtxvvQKYJ1DekEMiW+R4L3ch6LEO363Ubho
Vjw425W5T59hX0Tf89Fv1bhP/dAlsVX0VBhtV+Y+rRsfvXowqJanmC9zn/dt
17Yr5ufqlWHx3J89fRTy9+A+SXax5ygqR6+L+2Rr0YNKdRN59i2bF+bL3Kf6
d7JvpMidf+W/VnvElz7wjc2l5amTqtfUY5D6uE81MVt12GCN05efGz6aup7x
7xn3te7rXdz3DGvVzNyH5Yr/sbE5ZOtHzzqvkW7Po2faSM2y6uF34NxqSAyo
9Wbug/WeF+4Tm7rPPD+H0dwbuZ0+Fjp6bs01nrKvYKvct8XxgR++i/tgP80d
1ATW8WE5+sJ4rhn1e+MeMYP7eCZAfqGkPvAaG97L3dkvcx/92fWcTtur/E4p
+xq7uM9jVqVYtnmORr9B2M+5T8vCOLLr+mxH7m9xf/r6esvWhO26uG+ePurZ
nu37H+U4vXnk3Id9Hc9KR79FH7ZZfW+H6NAfH4am5rZcpypxW+lPY89IanPY
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
fX7+H1dDVe5rbGqWj++M1k38lNblzDfFfaPvEo+q/SQXTL3edI049+1oncQf
mVpxfzbv6D3xniT71XuZ0+scqa4gvdh07undHeva476pebKX+/BVd/T3WuTc
lnrxXmOnkvvayX0N+y28DXNwXy3OOGI9n07yLzX+3r9zKjSE+xi3XXOj1lnj
PthPY8L5y7kv12bJ3CfJPlPdGGq/aMxiV2tZxmjmPvUswAb12MfaPsAbQ21N
uM8Zzn1Cfd+rvZ+5D7b7NvUI9s/gPv0V6+TlatynPDLPOe8Tz6m6uE/8KN8T
/zv35WWp7+vsp/epBSM7IXOf6sZI8u3BfHBfrXYPeW9wH+/rnDDHOfdp39SH
XNK2O/epdqckTiBuFO6TnN3gPtgPps7nuss/WMtVgftgP/8sc18W3Kfv+jMT
uA+fqXPerOcrfVK/yVDDfdKlu8fKWFiE+zgGi3wvfxcW9jjWvDzcpzEt5oP7
pJz/uds2x56aeyP31hzb2Ui1XLp62Pq1HnbKHNwHLyk2sY/7dK+C+xhfHq8J
83mtExjG62LW6rgsyoE+19S4T9eubw/Ml7kv9s/qcmbuY3+V96hYfClzXxer
Ze4jxsF7s4td8zFb5HiwDRHT+ufZz291Dp5+8ygU56Fhvsx92iZ8bWIzP6Zd
3Kf3ZStxLhTvOckFnOY+WFL3S68Jwz0q6uiPfr+P+1rX0zbYzD8VtWo9VrgP
23Vh7rPzsV0xjIVPRpIfsjVXPVkt/ddky3uPB5+D/DX5WcRYabzCjuIIsZ3H
HDN+tazmRmoXifdWH3/a0sOv7oTy9Sdf08Ezy6Ffp+O+I9zn/rcZ8c87nhuL
j9AZ0P2dA7jvyp+uhtRbgt4uksZi7fliH/dlvdzULpM0d1PPpYv7qNOp+fLp
yG6WiCWOmL2G+2A/5z7tD/1ySgx8EzPRxX3qu51tRGr4z2Nrer4X99M+7vPl
8mfivlL789t+7ivr+/5PZZ9q3Ccp7+/MyQmbOfd5rLaOCf4kloX7umoywn3O
fl3yepEu5z58bxqr9z6/EYL7JOXa9flWnQ39/VrtVNkh7J+4j/otx5Zf3jxy
+lch5z5tn/p3wDXOcBprzG/vX/xNi/vI/+w6JovYKuQBdn1OXU/nPr3GJnHu
W+T3axL3wezB1CPug/12o66nGE+C+YbkK+qZAcdWcwfX4F5dl+dP43vdx9Wc
Pnq0z+I+Xns/ha6xoc+4xmE+SflpXd/hOaXub+o7kLlPy9TqdDr3ea0U7+W3
Fe7jtfcQ0P/c451RNM95X7/MfddvnQipvhj3gqsXD1e5707z/LAW85CPteqm
SrIDNJ879+GzXDQvL/9WF/fV6rrCffyvuYJcKNn5vA/3wWaZ7cvx/a6JV/3+
1kzu07KeV0nslRgvcx8+v+g30cSi6jvqxSYprw8/Sbmm9rhv+PzjuWV6r7HJ
VUNzeXVSH6JWi3cS83upVVMi5/jtcV8/92kf6GNYjfvsyY1ryWMuu3r1Pcfc
F7VhrJd8/p7qvEg6fvNyX5zvgc/UMveRu6eao547qPPv/RmwSZ375NvVnPrh
ewdDyiX1no593Me1J55TvBk5cTXug/1W794ocYez9lPfefpN+71F+rRLcBHc
N+Q7YiRy/ZTLWFsG7mOfsYd1n65xn2pdkO8lwd01u91rqHRto9fFcM5RDzj1
0lv/9FEo5sfEfcwnG48vheC+GvvxG13slyU7hJhY9ebL3Ie/kPss3CflHFB4
B+67fONo65nAdnFfjNHmGpnFfRL5hdSKmdUvcJGx69eYcx/PZXhu8Cy4j3hX
xjjcN/T74j7xuuYecR/sl5fbbZvjJy3uz3BfpWeDmI+6GkPPfY378HfxOTbM
2fWDRX3cp7hE7m/iPnxYYp7McO7T47PMfdlXuMg14nkM+p3Mffy292jwXu7R
Y77hOM3N1JTO3IcuXRzdT66fiWVr3Oe/6dwL88F9t26dCvl+D+W+eY5V7iXh
48K3FX+ObJIa983aHpjPuU+Ke5/FxDw1DuzjPsV6ci5lC+FrVNyn8nOc+6jn
UuLjGl8JNQZbsYHPoE7+i6gpG3+3uG8G01BLlFow5HfK5ws/HTm/tHnk6Gul
xseXqaeUtjX/z3v4uSXV9KBXm/p9R43gJgaUOi+SYvPEfaxH7914fDkk5rtw
93KJR9RnmUG5/mrcF8dtG7ivrCvV8ewdE88wTtprxlAjtIv7JHHfe588KMfv
1t3VVo2VM6vddlLt+GfpPHp9GfqwO/fBfroX8Hyg2xbr5r7olWvb5HNp2NuJ
+2A/7Sdc48/yVUtE3Af79e0nvoAa93l84iL35qHCzoX7YD/dkz3mVkxX4z58
QtT3lDL39f0+XKa6ncR/33jQ9m/BffpMy8F5cB/sp/lR+aiPvrxT9muK+5r4
ytqzYnyp4rillVOhru3W/bT0aG+4T30fnF1q3Od103x9yueTYD7nvu0833Cf
4ib71l3jviHrz9zX5aOV3H/KNSZFjtyld0Jw305eA5JYDf8C3Kex3FVHteuY
4aed1f9zt22On6xK36Z2v4bMffp/4077+Ybb70M4wOMcyUNz3pNm9XQV9/3i
pZ+Frt04Xmphwn2ZsTL3ed2SnM8299zRfC9znx+bvt58vBa/Zu4jbv6b79bK
MRGniPmc+xD37tu33+uMXfV70tpHJ6vc59ude1zkfR/a88Ljf/03PF5P7zv3
/bUnJmeIcixtF/d5DRh9T6zHPWkW99FXTXXX6f3WipNruK/GfHscOK0+7lN/
BmpXem0k2cb0tuOZC35a8fvp1cvt39jjvsJ9XdcOc0nELXvu3Yr1Xre6m1O1
VLJ/b7mSuzeQ+2L5Z8x9/rrVU77CgLO4D/Yb2vcvjwl8hzl/T/5jX5Zx1sd9
qoFEj/ecf1TjPtjPbXD6ckuKhyQ2MnNfsMWDT0Lq294VIySJ+VTXUvY+jCW/
mu5Tz5L7tB+KYf3q8+sh+d64L3tdG+pX4FMTB2buY73Yv329q+W/gSdr3Kcx
p94MYjkJ7oP98jhmOec+MeikV/j6VG4dv8k2Ze7T+aavoJ/nuKfeHvOvYjnp
9+fc57UVlLeHPUCf9oh/erpeYkjhPqnPxugbU33yfD+4bxb7sY9b4c9Z3Ke/
MJ9z37z9JNjmRXIMGa/aV2rOwn1D2Y/f9tjQrmV32+b4KSr8ehbXWfPzleUq
3Oc5YEPYiWtf9lqN+6hF0sd9mlcz95Xx9v16i/v4veiXavltxFiK+3xfura/
K15Vy7tvTzGNxDX29annc5hP8voqwX16tlThPudZ7YNzn5hP8to4MCbHzrlP
8aLsN8dxCPdxTBeZc/03su2pXBP8kdvJfXAA3KbPOG993Kd4Oe6PyhXU/rJO
xdH1cd/Q+LQ97rNjkY4Zx0V1R54J9zWMU+p/dgjuE496nOev87lumFVSf8Hi
P0nXlcbkxY2lEHMXn8lHgz1OjSL23ec4PbvOtrtfr/ChxvWsPgTbyX1945x4
ytJvr+G7UKrd+czHYqVPYJ/vT3a2jh3PrsRpS2vnQzpP8/R8RxrD+97821Du
xVDjPnFd7fk6Y6KP+7IfgzGmuOIu7vN4z5wTNw/3iYm6uE89JMZ5iz+baUPO
Y+fSn8LjaGvcB+uJO4m38/qOcJ/urbXfGcp9sN+vm/pCWc59M8fuaHnv6370
/MoU99GzHY7M3CeO53hrec65uK/MOaOxAOfBfZL7AGVXZO4jd59tce7T7+r1
EBtjO7ivb8zAgzq3zn1wzbwM2Ofzk5z7dAypLbsI93E90PthaP9570MB983z
m1+NfpO+fRyzvuV32+b4KanwXvO3Vk/N9daFESt9txFqXRcDaj66rQzzSc57
qoEypA88jEMdT2pclnH+/cTnp1w19VOQnPtqMY1d+YBD6pvAfnoN92l5z9/L
unT1WGjp3G/Kax3bKe4biePH/Ogxblo/8TdR76aJ+6lx39WLx0LeM6LGfZJ+
j9oYVx6cnNp/5uTcb2Krcu5T3YGtrk/7Re++Pu6jjoskPx6SX6+P+1RHXVK/
dtVzbF1jVmt+t6/3F0U17hPzSYrzxKbW+cSW1TgU33m8J3mYOs8Xbqdefc4m
FpM7z3bCfM8j98F++XoV8+m7jHW2hedJPPfI1+Pbp86EtM9TvRb8WAaz3Ql1
3UsW5b5nOgZrPd69rwR9DdM+wn2Sc5/mkaG5fFmZ+zx/Ly9LH/Yu7pMfULwn
v3P2PSves4v74llL03NbMXyqLcE9to/7kNiJ2Ow+G33cg+JnhWu1TtgM7oP9
YDHVGdXv0te6y4aXv466pPId8luZ+/Rcm1qZ4lYxIDVsnPt83artgl0y7/lV
XOZ7nzwqvrs3Tn9Q+ofOMy/VONG579dLI847fyt0YHl189Xl9bEa7is9Dppz
FPU2jfucR1pzTsN9eh5we+NcqfuTuY9nBupJzzHk9/Q78ivyPtw3i+GH9H2v
SeulBo1+b9ZvwX2q+wnfS3Cf8mWG1HOVZnGfhM/TuW/evn3sn7bTuW9o7Vmd
g1n5i10S98F+Q5bfbZvjp6SWn2958iy3a/ku7pPm4T63dTL3DRkj9HHr4j5J
/EONEjEffkV6KEhazmuBPf3mYahc64n7yMeTcp1RmKn0Xjfuq+3D/QcfxD7U
uE/fx2en+xjzsHNfzF3NuYi8wC8utbjPr21/vjfODWxzn8fAeq91uE/Ml7nP
fYF9dWTyMRqynO4FXX3ZFpFzn+xazqH8Q2I52LaP+yKuzniR5xOyAxTXN4v7
nkXv6x+NVu5N2fpw0/KVDzdvr59pcR/X8LPmvlzvf9ZzM0kxoe+fPRRifMJe
GoO8p232HoT6vPj4/zLpT8M19dVX6yHZIdyrTxz/VVw/Po45JjvKfQ37eb64
vtd5jHNtT1/P0t1W3OUiGhpfPSveOnMf+5zPOedJ/RB0j+L4z+I+WIPnh+jm
ndOtHux93Hd3xCyh0TmDATUmJvEd3dyn+ZY+Ivpfn5MDWOM+2O/Quy8VBuvy
J8B91C91O112NzVAnMXgPvqMi0lrvSvgPkk1V/Se/kpe+6LGfZJ+Q/M4NUky
93kMa6edOzpWxFIOuScpdvP9jx+EZnHfwmN9+V5Lmfvk+5Pky/H+Boxf+ezg
MLEbLAL36R6q77IM3Af7eS9zvdfivua3YbzMfYPv7dvEfbOW13wq5nPuk22m
v9S8Gcp9Q6VjzfFzduv7jq4RlpPgPp1XbR/vD9lW8vuGcF8+/sQFD40z3XWb
4yeiwnsD76tnPvogtGhMX2uM/NDu8T5knfebvraSeOmV0Tws6bViICVfXvxz
evn1UPSzWnp5ivs8z07fydzH9lGTlLkOH5rbZVpv5j7JeyrATWI+uI/nqe6j
zNzHesM2Gx0HjgXMB/dh/2rfeeav5aa573Cwpv7eW18JOQd6TZeoxWnxpfnY
zKofWjvvLvKQvI4n3Ifdsug4m6x7rZwzuI/YTOc+SfVAqAmi5+z0bVesZx/3
KRZO8vs0Pgxpt6/3F0oDuE/S+RLDwCsatzB9trHPXf2oPf+57V7LRRuiF4D7
zl55q3CHfNP0oYw6C6Pf8LqfSOO+65oSb+N7HXSfWZT7OA8d8W47pcH3z9x3
0D7L3KfnQcrvm1ULrY/7YD+x0NHll0MeA6/zXuoMdnCfeK5WA5A6MDXug/00
5vDdiPuQ7HtxH+w3NI7MbXW4DwbDHleMZamN0nBfF/vRlwDug/2IneQ9fHc1
7pPEKsQynl9/J2pR1rhP244fDAaQatxX4xLnvs5xNq+/L3Feln5T+u77+6VO
HNwnaf/EBDB05j7qjErMs859njuvOFDvZS7u03lYv32+/B7cF71Dvp88e97u
2i01wZ1D67NoPr1y4VDrPbgvaijfv1zWud3bCvfJv1HjP73WseX6cO5TfCXx
tHCftnvItupa1twxJMazds7gvlufXJn67KOr729e/ODdwoW7bnP8BNTK5RsQ
f6YanhuPL24b97nm4b7fHv7n0L5Xfl7lPnGSeEZSnAvMB/fht4IRc8yJMx/b
5tznnEqcg3Of+zRhvMx9qrsJk6lHAz3jnPvEc2y3am+qN1xhr9Fx8FhVZ8Ia
9+k4eK02Pa/iGDn3UWfH40K1/XCf9yD0/vRD1VU3x7lPtgVz1zzPzmp18Nvr
Xiv9rqN/bcRrjs8TdVsk+Y+8DmTmPnwlv93fsN7x0yHi+rq4b7ev9xdN1Ppo
/U9+y4gfli6cConbxeG7xn0dsX6z9g1ukt+F3m+SYjDP310J/faj1bjWyMfL
143GMzyn8Y2trGuc188F97mPbCh/Ncc2auAq9nOHGW6hMep1Xzp6vms+EPMN
5b7aPUniGRPcB/tl7iNnz78rbtM9AJ7rqv2udelz6sKIF3NvB9jPuU9s4Hlx
Q3wvYgo4K/Nbjfuox4W/UDly+fv8r/WTI+D9BV1wX23batwnqZc7PjHs3Mx9
ffUu/JgsrQ+8ZjSWGr/f1HK8b8qcd/T6xubpm2PpNzP3Hdz/P+Iv7AL3wX68
L1bz2E/kvBs5XIn7eK1zCH/DfX5cQs8x9w1hOvI3tUzXNZB7OQ6RzomOL3Ft
zn0ujq9+P3Nfzq0byn3MK4vk9ymO9cTyiZBzn1hPzOfcp+3YbZvjx655eE9x
oPTrE/fNiuXcCYmbXvn1z0Oq4SLmg/vUt126dPGd4Bm4j3n/yYipuFdoHsvc
N3VdJu7LeX7OfbUeBLI3M/dJXz9d21y7dSZU4z5f17dfrxfuo8+euM97rXdx
H7WRI4d6tI9ffn6zyn3EJcR2fXQyVOM+Xsc+NK9lf2yV+9zPqj5iVx6th4Zy
X2bI2mti/fDr6Zy4Ly9zH3Ggvn1iCdnOkmoyKs5NzNfFfeWe3eUT2tOwOWpO
7iv+7BE7wfnULHnw+HZINVp8PVFflTzCHBuVebCL+0af0Z8DRiFHLXxYFf7Y
Du4T3/JsQjy38ehimfNU56Orj7Xeg5GZP4pvasSCcN+sei/E/r31h5Ob+5bX
u23TD7bGffF9fH4D7le7MlZncJ/PA68vfRK6e6c7birHoEiao/Qd+Q6PX9gX
0nk6+/EfQnrOJ2br475ZtZHhPtjPuS/nWGPXyibt4j6JGpwS/YjwJdW4T5yF
TxFu4L6Wua/cc0fbjT+D7cvcp1qIup+Qc9T3nFnrh7NVh6aL+xC92qWhdQ6n
uM96nZTXmfuW1i1ec5r58rOnNy49DO6D/fSbOlfiaeJZM/dp27j/ui8L7lON
HcXI6q+UuQ/bw/kP7uuLkaUPIb0Wt8t29Ljiqd8cnSvZQENic2G6Ib8Zvkvj
Pl6Lb4Zyn7Mb3MdzhRrzkXco+Xe71s/nQ7ZFzzXmiV8u84lx38rlldDy0tFg
PemLz25OemPscd/O3qPOr080kPuOXzwVepL4ZJbcLzbv9eq/0cV9GuuZ+6RW
LYTEffL/UcdDPRDyb+aapF31XfJ2Ovc528RzrhFbwX2q1SnpPs12PfpqfZr7
RtJ8jO/CWY/X/jtenzRzn6Tf91w+mA/uu7T8Tkjbhc1I/Z0a9+U4pKHiOImv
a9wX9QNWT46l52Y9vSO8po24WOJz9qGL+9RvL2rhNHGbUWeoqbMnG7uP+0rt
/uVJbELco50h9rhv63NV0+Oe46fjLamvnNer1BjgPFLX83nmvlBjq4mbVJ8U
/4auK7Zf14X+4p/zmlTPI/cpbvW1M5fLeWr1gi3H9k6jiX2rZRW/q+9KuZ/D
C1EXyXu+Z//xAO5b/+zj6jzJ/+Ts9XGfVKvB4Dl689RGfvr5jZDGZRf3ucRw
8tX5MjXuk+BEMYS+Ry3IGvfpOMjm9HoirXtu4j63uVlvH/f5a+9PCPdJl+4e
i31j+51NWtyXjknVjv7iUTBZHjtT3DfFd+uF/VrPWDriy/Ubbx97KaTjTI1N
577Dy5c2T64sh+QHZBvhPh1vxRjyXbgP9sOXhK8wc59y+Tx/rzXGqeXZnDfn
Ps7TIjaGz3Vd3EcvArhPfrRaL3FpHt+YpP2NmrT2PbhvaN0fZzety32ivA+L
wX2w3yxG9dqes7hPv41Pe17uY5u//+5Ri/vIERX3Ffb7drp3wJ62rlK/pWG+
Id/BzwfzSZmDaufbe7Fnv9gQ1ZbXPYKeDTBfzDUjllrfOB/yOMm8zkujcStl
7iPPjlyZzH2Rv2a5g109Hvw9t6V0T3j3d78MyX/39On1UOY+vhvxnon7uo4f
25y5z2tsUgcG7mP7tf++X+Tv1rjP7Uf2azu477Onj0Je01zbBvPVuI/tj3jT
xtaH+/KxCZZreE/Kdm4f950d3Q+kd06Me1e7P6OX++y5/25f8y+6tsp9Oqey
c9+8cDvUWvdO1Id0zumy/XN9n2ZcwTxiwJzTSg2Pw2//U9lPvY9/mp6SV2+9
GxITHDv1q9DJU69sPn6yWo5JXD/NcVO8sl8zsnOJB42at8lm8hhyfAI6voot
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
5PNl3eQdUnMG7pMfsK8vyVZUi0PVb+z2XP1jVC3G87Xztzb3La2HYs5o+FDc
t377QijuI42tIebDP0XeGdw3qXO53tnXfZa6eijoNeMR5huSG1u7FmEY77+w
cvNIq9Zljfs8niRzH9e46oSq77pzn5hP0rLUwNQ+kWMI80nZh1bjvhprsh8w
qbT2ZLnULlX8Vo379JpzpWeU0QNwfaXKff77E79anfs4d7N8p+I+r6H57jv/
WnJKurjPczi/+GY8j9Z8D61cfe1XwwjUZzl45K1QL/f5/dZi9QoL7nHfzs5Z
O8V9OxHjOc9+zaj7wxg8Nroe4DFJ+8NzHmL/JK6J2pykGE/5K2AHzXHkrh45
/NLmycuvhbSep1+vlT5uZ4690rp+mHP1PGonuG/50tsh+QHLNZifSSb/74sg
nzNUV0iCnaUh3Bdz7YjV6NMu0YdZmqq5krhv1n2xj/v4jLqzedtq3KfzCWOJ
u7Ivruve3FWLqEsaS153E7bM3Kce5QdXbhbhX8vc98bKekjMpO+RH1fjPtnL
8unh35PgGuc+5b4pZ0w92aUyBxn3KS4T3usb37P6Kx+88nC0vofRD1DMl7lv
6HElHy9zXxczwm1370369emcwBNwX9gIyV/LmMs+LQT3hc9wYK3UecVzEbhP
cZ/aZvLqhnIf4/fmo5st7hNnSb6suE/r077Bf3CfpHjXK9eWQ135iYvKuU/b
wHn6ajQvSfqcGFAdBzhtCP/N8qMTN6r1kRvK8d3tufrHqFpeX+Y++fek9Y8v
trjv6t2TIfW/O3TyFy3uw77fCvfBe13+Osm5T36/XItziLz+SR/3oehz+/Rq
y4dHvKH2k9qcMB/c5/m75Npn7mOb1EeePuyZ+/Q9al7r+ss5i+wT0r7Ad5n7
YD291m9yr4L5nPukqxeP1a/rhvv4TsTMJHtTfzP3Zf7jf5gvc1/cE5pjTS+2
/9PUMYX5MvdJ+Az1PPzIsQMh9VmA+TL3iR8OnFsNwXutWvI93LenHValdzs+
Ez2bOnrxaujWreXCeeIJ5bphT5z8w9vtngCqKfIT5D7Yb1Huy3Xy83UsiRF4
tp1jFPw6lT9S/nbqlMrH91PkPrGU99c5funVOAaXrx8NyT9bnrE13Af7Off5
MRZve/+9IfdF7/uXa8J0cZ/iOonxlBTT51yfua/GfmIAj82vcV/mAd1zeJ25
Dx1YXg3ekTR3i/uc/cR8MbasVibM59wXzPjGP5QYz8t3TrZ8ks59qouiGinS
g8fr5RqA+2A/77PHGMncN+bXU6H3PtmYjCX7zh9uXIzPpFO3xszn3CctygXe
p93t+Mx9OjdiB/x7mftq687cR85mF/dFTVFiRXeQ+/RXMerk++HrEvfNsy64
T2NTeZDk6WXugyPhvsjrGS1HjiS5juK+RferVk+F653aLtoG8Z04zLmPZZzT
WFbqvB8k7su9K7QuHVP5bp379Ixht+fqH6PC37cyXTNH77195lyoMN9Iuo/j
W4f54D4Ywm1779nQx29ITMNrYjQ9Py8vH30cmhjPeZkvxxl6jCfbrLmb1zAf
3CeGkuTvfPj5B1PcJ3uKYyUfX437vJ802yH+gvtq261tydxHHwe21V879+FP
5H/9LvdI5z79tucIwn6Z+7T9Nc6vcR/bwutarGeJuf1+rdRt0fM28n+07Zn7
WjGtjQ2pY09OHtwn5oP76K+nPlrKC5O8j5iuAZivyn3Eac141rqnHZq35uA+
OOh5577WGEv5ovG51XpR/tuFW4dC8ndzDYiXuJ7/TxM/UPOtT9WbsloCyv1a
WT0cevv4P0V9EGI741lVc43p2O4U92n7T586OInr7HmmUvP/Ps9qxaeO9uvo
pRshcR8sNYv74GE9t6IGptgP2zwf4+3kPv3WvhHv4GOUv0vPCqQa98F+vm7d
Hzxv3eV1WmT3l/off7nXyQO6T8l3pZy2g1duhpz5MvdVzwcxt4n7Wn1cmnm/
xn1sr+xq6fLdq6UmpnOf+paJIVs1XBL3xbOASxNuW1q/VfyWcJ/eVw2W3589
F1q6c3GK+2p5YF3q88dQ/5QeDl25fBLcB/txzrzP4pDtySzo0naQ61frUbKd
olZV2G1z9OvL4vkHNXDUI7HW9zFswCa+FO6D/ehpsZX96eM+bRf+Dbivthy5
rN67Hekz+mH0zS1iPvnJOQZwH5+L+fa4bwfuP/Rpn8F9XrfSuU+9D+5srITU
4825T7GQknqLqw5ljfs++uBwyN+TXYHfTveUWl0Wqfj5jPu0zLx9BP3//Iwx
c1/U5mriojTfZO6TdJ/WZ9SHgfngPvr8XLsxzleD++a5bsOv9cX1kK7PLz69
3uI+7yEPH+lz7Usf9ynvD18g3OdMqb73ktuMXdzn7E+8L35U90H48t7bXjmG
mfvYdo+tzX7NGvdJsh0Lw1n+VI37qtdKpQfzHvft4tzV0bNb9V2iNshI0ctl
xHrEDGrsLC8dCb1+5Fg7zvM56QH+vHNf15xUi9nGHotaLh0xnl36KXEf7Ofc
52zm9VTlg1Vd1nm5T3brvOcg7rlNjU/Znwf2/10I7oP9+riv1p9N6uM+F9zi
3Kd7jnxHpR71149KzGKN+964eHfMeh1jqC+Ocqp/Z3MfkH+wa3ud+zi/8rd9
vLEWgvuc/fZ9+DC2M1iz8f9m7qPHgmpy8n7mPpjMWa+P+3If8bhuv5p+3uzc
R4znf+Y5pVmXeiLCfTCfc988469LPH9/FtyHyjP7hoWefLZYfXpswCHc5+cH
//B2x3fGuWs4zblvyPfw/+k1vspZ3PeV1QF27qutV885dnu+/rGpj/skPTuv
9SsQq3319HYI5pN0TfCMEuaD+/z7eo/13Bmdb0nnX9Jr5z5y2aRX9/3NFPfp
Xnf1yrGQ+HDenoAuWA/u83XJ1wX34euX6Ims65h9d+6LGpRNjID6oGfui/42
o/efju6t0tBthfngPu/jzv2wxn1RU2z0GTGk4laYD+5Tft+9prYLdR/U56/G
fV29OeA+r+0Dq+VYz8x9Yj4p6rU0x/Tch78p9nsX98kGOnj8WOE4ajzSA6zG
fVP399Sbu3xe4b7dvn5/yvL+6v7+i859rX30MUccsdUTovb/40fdtjO2dfSB
+XajN6+2ZQc0z0/uP7pQnnX1Lr/N3Kf5V31bvJZ953HSeXsOfLWD5f0nmteq
cUqNzVncx/ua8/SZ59KpP4eUj+d2cZ9q6xw48PeldoziJ8hxEwd2cZ/Xf4z1
NiwwtHamBAPCfbAf3FfrbSeWanHfnLH4VRZsuC+zn5hz7C+0PuoV7vPeC+I7
MZ9zX/H9VVjUuS/sgMfXCiOIqzL3nV67ubl698bm3cc3Q1PX7ej46zgq9la9
CKUa90mKXxXTSV3sp/PMMnDfIrbYvCJPcKvy8Zi5hZ7xx04fDeZz7ps1jnOc
o2xA/Ij5d7jmcm3Nrv7x27LfDafB64vWyhH3YZt39XkgblSfd/mjJ77tPe7b
bsF8s7jPe5brr3Mf70vOfVqGnLB8/uFBLSNehPtgQH2HGJLMfeiVuM/8vHCf
x4R21fB01qBHQv7c/8/cJ+l6EANJmftu334v5DndmfuuXjxcrncdA70H9817
jfFd+RIVS5W5D94ir9I5DOaTxHhsL7GgNe4jfnWebeQY4jetcZ+OAzFM4k7V
ILwV9WUudnKff1/H+LXf/T7UxX2tvreje6r3WeD+XuO+Vp+1F8Sf8FMQ3Bfn
z1gtejk0Mbyr1y+H74M6L7pG6B8gP2/pAzdSWc8e943nwob7vnyytnn6yMuh
69dOjGz4M6Xn26z6TMSyR2/w5lnO0HljUe5zfn9un810cB/3hey70PGlP6Pn
ucF9zn5iPjHYR3+a3P+cJ+flPkn+Xq2TPupd3Kft9N5fsle//not1MV9EvXA
tXxfHGDNPpTvAz+Y98mE+9SHQNrOudvr7tIvAZVrtOE+9UD4988ebh7641h+
/uE+9uXRl48KA2buYz9yvUZqjGTu4djCfbBfPFv9+npI8wH8nLmv1hMR7tP9
Vr/Z1TcRdpDtX51b5mD9odL+L+r3C9/St/dDfdwnwX2S/LbLq6dD/r2LH7zb
yl3z/eZZv+J9h3Cfnus/C19mnLuo57s17pOc+2p5kNRj1fHpi0Omzu+uz9c/
MkVNl45nYKeuXA+1xu0Pk1g/Hxd+33dfG8xX4z5iPPEVOvc494nviJO8fu3k
FPdJ7nNy7vMYQrbTuU/SPRP/Vp89pOuT+FYx0ONH10NxnTY+SOJCs5gPpS7u
oyaeNPT6gvngvjJvqEfDp7dCmfu8Fg33Wylzn6T16Fxzju5U4hFi3uyp1ZO5
z3182IVRV6KD+6i5IhtD7/mYq3Ff1/0d7uN+3eqv5xq932I97629x33PlTzu
ijkM7hPzvejcF/uY4j7LeDSmEfuRf52vP/q6UONl3nv4bnGfS75bna/IwRxp
6jjBURyb55z7PM6z2Paj7R3Cfa376NMrZT5X/uov/uX/LgzWx33Ko5SGjge4
L9iuEktDfkSN+2o2vpiDGMwu7vPXxHfWtg3uw7fGnKD6JXDJlriv8szB4z5K
nzxjzejJcWXS79y5T9tCDc+l9faxEffBfku3rodOX75S+uhl7pN/cPnyoVC2
sZyr3/vkegjug/2o0aqaBI//fCXkPkOOuWrv6H94Ee6D/fAV6bxj08N9Nfab
p0fiUBF/tTD3NeyH71SCgcpy0Vvi8eb7N++EnPv0+szpA6Eu7iMOEu7r26Yr
VkuQfdrOY1bjLbhPcaxbOUfkCTJG/FrlNdzXu56GxXd7vv4x6X+NbJ7CffY+
ec/OfdzbNQfXuM+VYyw/+ePpkL8n3oEl9H8txlG5g9Qpg/mkSxffKa/DD2V9
4n0b3N/VtZ08K703wB7R/Rg7Jn/m3Od1VahvGddUT38c5z7u/YrdnBWz6nVi
fDnnPu9PyLmscZ+OAXVFxX7qI1XjPs+BLNfnjBqt/L6ORRf3Ma60L8F57/xr
CObL3CedPPxySLxH7+7a/b1lZ5lPwH0JU9xn9fZaOR5Ju30d/5Q1xX02l/GZ
OFC1WSXdy0u+WOq3GOf9OcwRe1bclz/D9lH9TpdsEHLINF/xXOb2+oQHNX/p
M69RQk2Xv1b6wM3SIO7z85599clf+jxct5n71LtPfRdy74U+1bjv3Pn94+el
+/4muEJSHVaefdDHcRb3iSN4pqj1kc/XxX1T467HZoQf6LGw9uR8CM7r4j5J
PQhgINUtafn4Ktyn7959fG/4uTdfXNd3WuPL4kQ8vlTcV7b5ysRf18d9E3t3
Y4r7OKZINUWJYYX7dN1N2SaZ+5q6Vu5Tde7TuYT7qLeauU/9KLy2S+a+vK3z
Xu+LKOotjFhjkZorzE30lcjcR291uC/HW5KzCfvx/F41KX05MZ/e1+/M2iZ6
OHi/vu04lloHPA73ad3U8XTuW/Q34D7J1wP36R7Cs6H/n703fbLqyrI8/++q
rjZry+xqs7bqMqvsjMiKyBSZSEBIOEIBjiPhAxI+gHxC4OAu8CnEJAEBKiFF
Ryryi/db2+86vu5++9zhDf7AeR+W+fP37njuueee391T5XY6zId1Rj1WnyQZ
9wXzZHIf7FK0yZH5IPj54TeoSR8A86mPpLfz5dZT7sNzh3ZDz33Rusp94J7c
Mmls7PANGbB0j4h9bH5pOuXhjLaluVT4uU3NIevnP24bW/XKfZpL07bX4TFy
n56THjdZL+I+CEy292zZhLmj577oGP18QrkPdR0hjH/0f0Wbkvk898GnCPns
IM/3nvuy8yt9Tme4r3aO1qNGfZ+fGNFWq/58kg9P38HbNTsh3Bf2R6nzwD7G
80Jdd9o0kc/Uc5Z/BwTxnZUu9zZxH8e6hZszJpwjY3X99Ur9oSH3jfIe5bGx
Zntb7vMC8yn3kf2U+7Z/+DbFCkKIf4XwG/3LsK2I+6J9Ru9drW9pzna55rAn
aY5NxvB47gNfIO89hJyaZKqI+xL3C6tprbRW3Oe2g3Vt/+pjHXCfXcOiNt7e
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
lftoS2Y/IPdBuVg8vmfgtUfdyKp8L/QdpZ0W++U1J/eRy3mufNfAfET+WEY9
HzkpOpwrd9v8lPvIV6vrMwfPnm4k7mPeSdyb8G0k9zEusJ97K8d94AUINeXg
80nuC/tpH7lcyHv6F2I+XYrvlDSfHfZL2xSZj9yny/TjO1EnshJUZU8l9+Ez
jw1j8L//+rBUu542PCxHex1Yj8yf4z6cN3kSdj1wYsR9Tc6lxH1+XqZz3TH3
nRhF3Me8HD4vOz+fWXhgtcqgx8/K7z58vl8KuUXOnvl/TWeuzlqey7T9Mfc1
5j7q8Z/XTcp9Oy+WSvyg4zR9FpknmuPn4TzryJ7EuURb7lP2i64/fmfOTMSx
pVynkgO0Cfe15j/hCfzflvswPmvd9brlYethLQbkdEF+F8ZLVnGfb0MI8zhc
A64fcR9yu2K+CLsXpHUVyH1kP/8spE2wlHciw306Fly5+ySt25T7ov6eajjc
3DOVnjUB93Ec0joOEfdZf5NzOmS8bu7TZTAXjrivbf4NP3dX3z/WvMP8W4/t
MG/3svEd/W6VHa3uYGADzAncxnkTuQ8Mg3kD60F47gv7csF99N8k37Xx2exH
3+5tGfMp9+FY+O6h7fYwj2IMH7kPbcR6COQ+CDbayUu/NSn35bbNuE5wIr8j
9+HaPnx4vcR9Efvh3OhzDear4z5eI9ZrZ+16XHPOG9UeCzZU7otqkIx6PnKS
xLwuJZufiMxH7oN4HZT7IMSl8Zr2c0955iM7IJekch8ElgjHOLFhMcdn0/3n
WMRz3/bevOnW0mU7d899lrvk5YqJeSo991mtguLd5qD8QbFNjKd18ZO4ZmRs
Mh+5j6yHbfEcMN7nuI9j0v720mFsj3Af677jWpE1m7yrxFyDdhj1vys9p908
d9T301iDHJtcXsXOX+YZgTBHHiT3gfmU+7hfneuPuk0q22vhqJahHjfuHbJM
r+eAtmVcrbZdrqbYoLiP8+aunIFSq05tg38r4s1zea7acN/Uxd8d5v0p/k/1
28h5OgYttPcFLtUVLfrb2t507bswimMolo98LbueXwH3QXYdC8aD+D9kub8q
uA+1IzCuM35Q63lUcZ/yFfKiRL6fyn3wpYRPJeufa/tH3PfZneb2viobXxf3
4T0KfM8L/z7mnIq4L/tcE/sVxiSrBb4yWYpn02UwF07vjIs8KJ4Nm8gvr7k7
lft4z209n0+flfvwP/kR/qJtuY/+iXfvfZ58AJX7WMs7yt/p90PuI/sNYv4U
CT6pWk8O3AeByfQ4++E+5r+kTU+5D8vws3KfMnSpXQoWxDX13Ad203cS4D7o
+uL5gx9/3DKl8b3T57gcuY9xp7XjTcGQ4D7aldm/D/PPH1571o8g++W2N+rn
60lS4j5Xw4+aWjmyByM2N3qGom44GJDcN+h7TrkPvi0QmA85RXPcx/V4jFo3
oWpfPueo9n/PZWQ+ch/vQRwTahxAZD5yH+1/6lNJ5hsE99FHMzfHVSn3PXq1
Yu0LwTbJ2oWe+9iGWBfXHL4J5D4wH7mPfAj/BeYkhW9Rjvs0JyDeXUOXLv5b
F/fl7Hyjvo/GGsbYdFQXyxRwH3Rl5V76HL2rJG+8flM9n2aN6jH3BdsW7mMO
HAiczPzic9tH+Y05L+ScYWn/sv0OIdcnfUFfv7iX5jlgPp8buor7yH5V3Kc5
ELkOxtm//pofH8mg5D6yXyX3eb+DBmNSFfc1ZT+I3FfHfvAX01gJ1mfX5xu5
j9911UUSBmS9xIj7/LPM6p67fKgR9x36SXbnSiH3kf34/ZcP9krbwmcwX1Pu
K/mIOOZb3dszWe5QWd5zH5c/t/LUuBPK5dpEu7z84b4J7Mw5g3IfbNr8HrF2
4COI3Ef2a8Jb9MU0P5wgJouxfhD2sdLpDxC5D8I6vKa0EZH9sF5Tn1PaeMwv
s+A+CPk+aeMBp9Af0Nd3y50v/T3b5A5pK3Lf3stDpqM9Urmv11p3Vuu94CLl
vmhZsh9tgDnuszYruA9ts/dsJV1P5T5cP34G90Fqs1fuw2deA+YbanJ+bB9y
X2pT4b4m2xn18/WkKeQ++M0vzSbuA/NBqPEA7Xy/2cV90CDvNbIT/0fdPs99
UNNt9cN9vAf0f/DatzurJthDUefAcx9qzvNzxH2Q+Uv0WGPCS22HyMsSzWui
+obkPsYh4lhY0x3Hy3eMZD7lPgh5PtEPINTjA+9VcR+k18NzH5gPQl7zUl91
9XLH3HdyRX8qzhPBL/R30jwUnIe+99yHdpKaA6XfnT+c3jPMeZqt71Csx5oH
x8V9pblDxfsr5LjkvPHrLycO5qZOJfXCfWmf0r+wXeYImrg6ddhe2u59cJ9e
K9ipp77+xDTIZykUcR++zzEmuU/9ZfR+Q30HaHNzMfmJ5dqT3JeriZj6Yob7
dBxALB9q+kHkPm/3a3PP8LPl4y/e0cKnNOK+0rqL+6X7DdxH9stdA899WqOQ
8+OI+7j+v/+6b9I5OH8Dm/j9ee5j7Ty11yn3aX1B5lvx3EebUC7W0PtFUeQU
tgPqQ0Ce+yI+ravdR+7rt/Zcnch9Nu50uE99LPvhPqiuzjyl3If/Mb5F/plk
PuU+XE9eb1xjfsYYTT9T5T7+rrkeaCPOXQ98x7w9/J+2TL8sfXOb+OeO+vn6
LquUuzM9f7bLdfyK8RjcB11dnjm4MHfDROaD8L0+V0vXvnhe0FbU631G7mO9
dvAec9rm1vFsR+4Cawzi3icbIrbQcx8ExiHTee7juri31Ad0kNzH+xPcRw7U
uorKr8pbFpNY1FtnTXfPfRjTeawYC5jfJeI+sp/y3frj6RL3RX0G8yrWU8ty
X07j2L4To7bcl79fD+endfcO7ReTNx33Ley+E7X8hsF9xnvwff3sjyZwX6m+
eWcZxt3id9p94OPHGF7YsMB4jEUD+/EzruONr/9gYg336HrWcR/Zj9yH7zF/
pu3Ocpmzv/x61G++/6mIdcr4fzbhPu2jbd5HVXHf7Opabb9u9Dwo/C1hF2Wt
9qXVy6U5WCX3CSvTpggfEL23Iu5D/UCLDytqm2WZLPM9eAv8FLWxch/2Bbse
VLLdNb1fpM8r983e30v+qdn1hfv+tfOc4nHkuI/cBaF23v2dORO5j+yny5PP
dDvgPs3LzWdzxH1Hfrfflmqmc7tWU331QpLnPvAAlue65vMp3Mc8d2ob5LHp
caC/kWX1uHxtwDRfCXKe1nHfIGqONxFZD+dSF1vXZFtsl6bc50Xuw7XRdwH0
3YWPJ64/pNyHz+RF+oKC+zQXj3If/Vzf/PzMVMd9Nj4UOUJzNdzJfagnX3ee
o36+vstKdfu8hPvOLO+aPuyMZWA7ch/+h87euG1qyn3kHubmCvt/xbvXUxKL
0Av3kTsGyX3MI6q5OjfuXE+2LYyFrK2y8t3VVHseNjWO02gbshXWb1PPsKki
7sP3P7x+amIcXsR9ms9G83p67qNvKdqDuXfIfOQ+Hg+47/r2hAmf9bpH3Ffq
u2rnkzmuMt+Y+06GonrtVodv9boJ+Tmb+ka/L9xnx0rbpN4ri9V2kKP7Z6f8
PWMmj4n7aPeDwBovfzry7SzlZhH/fb1+YDu9zv1yX1U/OXftuinlHOrR/5x9
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
09+k9xIrty8NtM6B+maC1eC/QO4z5usI+33Z6ecvi77OY1Hma+LjOgixFh6E
Y2/CfXV81zZGEvtYWb7UmPvovw/mI/eFfa9hzs5w3QFzX/gOGra9Is9DFfdR
i6vXE/chLhbxe1AYZxTUq8I6s6trJuQRTLUrbg0/j83bpBz3aV24KMfF96+e
mqr6Mu99qyF+94jTS/sZc198XXL115wtsCsvUdF3ESs3NXPaBN7ber5gQg3w
lIdk6lTf3Dfocyb7RdyHdzRnrs6GsX18ZxMqw32lfQtb4zcwNPT88ZHPHbmP
7KeshvGZTM28ncyVk/xoK7hPz5Ns431+mj6bySI57ms7npP1oHMrm0nkvkr2
K9q/H7sfmG/2/l5iLQgcx7oOyn3wJ6U0diHHfZiXMBdnFfel5QvfXz2WRvbX
X4/eWWvduV64L1fXro1oa/TcpyL3We6agi2s7zru07zt2hZtbZHMK6N5SHEP
9XqOpfuqyNuTi48jpzXlPgj9DtwXsZ9yH3mL75nteDrthzoQHCfIfRB+53aV
+5izBn4XzA2L72mfZd8l93146u+NESPuU425b7hCzFU058W4effeVROuQy9c
EzFflejrCfZT7ht0XXPPfRD2tb+9ZPLcR1ug1S5HLqeOcm3Rrx+qipxN5iP3
sX56bj91zNemLXndwX1/+XnHVOXvy7htjLfzu7OmCzemw77XD/cNQp6lqrjv
3uZKNtc5FXFflF8iV9f9fec+tZOUvivOHXPv9buL2eswMO7LvQcYK75emtuw
D+7D9b108d8spwhqxVm9uI2rBxub10xdNquC+3Bd73zzlWlYftAWq1jUhoAP
pM6ZeuE+b78P7c4Z7kOuG94D8JMi98FXMxrrNYcquW/p+icmHP/m7rwp+8yo
4L42AvNhbslYfYuva+KbGSjHfcZ+xfeV21gSf44G9QWjfk/uI2+B48CDpfGm
81sX91ns5na2NgNZDNxHFsJ8PNeu5D7kdnnVmX9Dng/gQwnhe9q9lPswB0et
N6iu9lpO6EvKbm3XX9jcMMHPr2o5zNeU/Yz7Ck5kTKlyH+ZMjGfszofaLCYP
/bUp97VhS3If3t+An3ht8BsYDflc0K70aa9jen3fEOmvvzxKeTt5zeDPxnmw
ct/09KmuHKXgPtr3wHXKfX5f5D7YccB7FNZt0jajfr6dVDG/YsR8nvuGVVsc
OdnZr8h8EHKT8fMgmQ8Cx2xtzplWFi8mxgTzRcuT+ZT7crXlfbwf260Xv0/N
L8PtgAHruA9j1CDajHXWoZXlixZXU8d9qneN+0xL+8lna3FhMr1TRD6DOu6D
6PMJYd4a5XnJcR/3D8G+WMpfKn6uox43hnY9GnLfwMael7fN1xMqHQfZ5T2I
pRz4NazIiWR2M9ZNmPzEGA8CD/I+IfeR/dpy3yByeEby3Dd5bcJ0+cI/Wuxf
qb82iD2u89u+9M3jgwfPnqZ3GdjvB5cumZpynwrbgvQ5RO4j+zW5Z+rGvyqR
+8h+ZKEvHzxtZX8j6128c8vUE/fp9VpsZ3uMljm38jT5fuo5K/ed/rqa+y59
c/iXMV/ggYj7/Hqe+9QPFwILeO7DumQMewdQ2F/IfRCXy9nwMNfHurT1ee6r
rRXc2S65gc9Zcl8V+ymHgItoN8P/YD68d9b64fSRUu5De7XJvefbtErKfVoT
ISf6tytD0b5H7iP7fbX8B5M/HsbG1dWxAPdBvH5W+1O4D6wHTc7+c/pMuwiE
8Ua5D////nf/eylWD8J3zNWi3NfGHjzqZ9lJFXO6+DraH81vmtY2rqTaIKxL
l6vPBjFWr+l1JVOwz8HXU2vOkvuiHJ+RmrKp577XL7ZM/K1qXdgAkeMlx33R
MfG9U5uxA+NUuS7EEfdtfT9vquO+ftkv4j5I/U1zuV0g5n9BTlD2qaO+9xbk
yZf6yZpjIcd94H59VxapivtKcT+aJ1+ZznFfai+JbRz1uDG08UhyqabvcE06
50y7K7iv19xpXePPmPuGcw1bcp+uj9/4/fLKxYPr65+YLlz9x4Mrix+kWEH8
v7hywYRrubY6bRoW97FfQLC5ee4j+zXOvatjT+BTTO4j+5E5YVs8cw75r//e
hOckY2aqmCziPoxPHN/6vZeaSOd8+izMcp9+t7SffOPVxqfcZ/kylyTHS9Pr
ynG5j3hDcp/14a+fplp9C9tPYu4rloMOr/eTLu7j8zUXy+bn0PSHjrjPs4Dn
PrLFf/x6VIOqivs4Biv34Xv6/5EZmsSjkfvApWh7MmqTPsUaB3qsnvui9ch9
/filZp8rBeuBf5X7lE+72kJqIij34RxYQ/364nkTuY/PQM2JguvMGL2quZle
Q44Bet3AfYxr5LGQ+8B0YDiyHv6Hfvvb/1T6jtw3eem3R2NUxXsEr1E/y06q
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
/Wu3f2Tqp53z99wH7iRDQ7Cheu7DMqyTiPW1RoRyH9kwF4sP7mNdP7Q/4//Q
drl7y8f8RdzHMRrzALx/h8h8TeMFyXyJ+7Tf+bx2FXNufZ5WPbtL3CfP5bqa
WSVGq8mj0pj7GpzXWO4aDJj7otwu0FfXL5W5r6Z/jDWE6z0A7qM2NxcPVjfW
TAs3Z8LamT33yYx9L/WZAXNmdB/kuA9j0atXh/r556P6cVV+np77nj/+xgS/
Pfqd6PpNuS/nX+q5D88r+m1SzINJ7iP78TzTNVjsjvtT9tN5LOe5VmOhIm4v
ZDku67iv0bUr+gjOgfNxxN7pcuQ++CxqjSwu77mP9iDM8WmD89xHXoNNjp89
94HtEKOinEC/Rc09yRyPUI77VMp9fm4Ckfvq8rCA+fC3zmcR3DfZ6a+QXtvP
7y2Xx3s5z17fW6Ddc3F7vQg2T/hN0n7K7TZhR43f47lZ/emHR7bYSLQte5t7
6Z7o9PWPP7/WdZ2wD+bqHHPfu6VULzriPrwbE+5jrYI7t47yeJD7vA+zcp/G
1IBBlNFg3yP36bOE3Aep7yCZD1r57qrpEbimMwfw3Gc5P4vP+F65T/OMcj0y
H7mP7KcxjZ77OIYpM2obRPvx3Ad7GUTWw3ee+1gj4vbylAnfR9wHlmX89+La
pOXgibiP+XfUtohjjj4jXpJ+DNg+GDniPrWLNrmPaV+9MDNTiqlqw31q5/PP
bs7fz99YNTaAwGPwF2vKfV33St1zHrY/coM7ni7/r7fg/n+XlMuzg/jKts8Q
76M25r63S97Oyvtu4upUq3lWFff1w4Aj5b7OPpnjE4pikOu4Lxqjn7zaMelz
OMd9fwveCeq9pP8r9yknpro/He7gHCHiPsxnkfcl1bZb2i/xXh33+XHYcx9s
o105k2tseE3yvLAeA5fPcR+Ph3wLRdzH/J5prtH5rNxndbw712hu+kMTeI31
v8l9ENoZtcwh1AKgTU+5DzzIWD089yPuw/q0N0X9gPGI0PPHZT8jHAPe5WP/
OZsUz1Pj85jjJee3RO6bXZ+wNqcdGNxH9uP2EBMYvbdoUv+B7U7uqxqD6rYF
NobIfWS/Ns8z3CM+hpHXr2pbPgcuxxmzaaPfFrZtcB/kz8vX69M6FMPQqJ9L
J0XpGZWJnbm68qkJ83nlPvrRoF/h/6rYVc99EFjM6rAX3FfqT1JjwXMfuIX+
yKgpA+bz3De79blxluc+L89jYEjNP8PjOPShPKxbincO9EHlMSr3wT7JOERu
2+8H2ny6agJbKveB+ch99IHFeeN8yX1kPLQ93/3Bb3XuXsx9EM7t1ndXTPi/
Cffx/4j7oKWFiaMa7h1+GwT3Ic9KaZ4TxLT4flr6XWK+qrgPKvmBNojDqcpB
b3PSm/cT90Xbqj2XseJ219wqQ+I+Cnyg+8iOj2MN95oH/rXKfRevTVXWpiNr
fP9TeX745+dbpkvXb/TEfV01Npkf6hhzyNRy363DdyT6/kJtc7ncRsp9fL7j
OcNnTKn+UFCTSH+jDmthHy1XxX12/+0/ST6eYCLaMSLu037hfTkj7sMy5CoI
jAnmy3Ff5XVoYCeMuI8+c5Darsh9ZD+uh5hGxrWR+8h+Ub+PuO/163td8zHl
PtoAcV/xmtAWSO7DPuF7qrUDuA31L1TOqeI++nCx/jjzyEAap0juw9zrh5/u
lfICdo3pHeaYWvzARO4j+yk7eu7z2+HvOCbUt4e62rnDfLCZNsl325T7tI5f
5MdatY8odw3v2xz3lfLhLEudlIL12AeXb31RWT+EzEfua2K/rRPiOaPvR/1c
OikyO18wr2EuFzKfz+2Id3/KfRCYMMrFCy4gN1gcsHAfhLg82getzwv3cRzC
WIPvPPfR/ob7Ausr90FgnJw/qJfnPtrH8D25znMfj4/xdeQ+ZT3yln6n3KfP
ZNg5oYj7ILQJ2xj/e+6DPr3wDynPDf6nXZTMBx3ud7vQfomz9dqR9X98vZXO
FcuC+Tz3ac5QrVtYd49jGdQLhlAbr/T8rGGlrvg74T7METl/wXNtcn7B5Lks
rd8kxkPeNfvjAPdBXbEd3k90zH3txqhMTs2zSw+TL1o/zxi1XYy57+2Sf89C
lumX+/TzxNxiba2/MBfUiLgvHQ+PKYhRruK+nN8l53YcM3PcR38XPnv9Nj33
kf34G2uLce6uPjS0fZH7fA2CKPcn28PH9EXy3Ge+sQ1sd7n2tzz3xfb870f1
MZ4ldou4jzULaePEuXM75D4wj7JAztb6pDMHYgwfBObz3BcxB7mP7GexKR2B
wcgtyn26Dc0BqpzD98/ITxLte2n1QspfsrYyXeI+cCKEz5ynoA3IftFxKPet
7E5ZThcIbRJxkdpTc8pxH9SU+6oE2x5zmbLunV+myXFCs/f3ki2W9yy5D76c
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
Y37OP1z8OOQ+xgtcmrpgPp6M79PrRO4bdT8aa6z3Xer3p3xXep/choGGzX0V
9lraCf/8/MhvzfJXfb9oevG/bh+8+cvRb+8L93X93jkv8h/44igO75D7yH5t
9tmW+zT/c4779B2jMVHBaeDAHPdFeYkoch/Zj9uz+D7pvyW570t+ncZ7e8Z8
5D6yX7StHA/SpgfVtbMuY8cSXX+prW0+scUc3XMf4iLtGV/4FJrtLMN9eo2U
+6KYPs998AFFzBxrupEVyH0Q1qO/Xy4nZ5qTSD0Gct+Vry92jxnFOEG+0/qG
nvvU31193m0McLZc5T6wNeY7bDfPfebniJwvRT5Qch/zwYD5yH1Q5X1NX8uU
w2W763i7+n6F7bM19zkfDnIf4iSZO8f3A7ZBozl2zXX3oq3w1fcbIx9zxzoe
nf7ybhc/gPu2v1029fwOoahNF+XbjJaPYgf9us9f3+6J+1iHAseEd9aPpHa7
MheZj1Lu07E6lytKuY96/WLLhO+37kyH3EeBs2Hfg8h8VdwXMftYY411/Bo0
9zXy83TL8zO4r1RPz/syDYj7kM/CfDx1bs+5+XuQ68dzn8bnUTd311Idvrrt
sZ67inkk67gv+k3n9Mp9ZD9wHz6D4zgH9zGinvvse/p0LuyaT+ja3qIp4j60
i9p50vuLkPsObXT0NYWNsYsfvS1R2g/b7Jf7dNunpQ5Nyk0j24DPKJjPc19d
3L5ejyYx/piPM/YP3Ef2u78zZwITal6ZNtynNfTAfOQ+tm3Ed/y/dL+7Ma7E
Vhz3Mj6ktKmS+5DLhP6bGGOU+5SnIc0DWnnNXQ6sOr9OO0aOXzXvG1rlso7G
dObZFe7Te57834T7qmpwqOg/irYec9/7p4j7IPgV9sJ7ZD1wVlvuI/tpzJ7n
PghMxti53DGkMfPNZsh9qNXnbY+e+2DzgzQ+EDkNctzH87Xz314KuQ+6MDOT
fGnhoxlxH/4n7yUfTze2jJlvrLFGo665sObX9HXqXQ33phw3aO4L9+HfYXeO
b2LyE5ONxYUP4dL+5eTjif9ZO+x95D6Np0y1NSS/Sy/cR5+0HPf9LRObUKcq
P0MyYMh9tw655siH88i2HHEf7IXaT1nDndyneUCgEpvJ9xH3wYaqcXlNYiWr
xDg/bsNqGwbb1vs3ij0k96V3Iz9umGjH07ZGG9K2ijaPuO+7H+L5OubjEOYT
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
D7I5cwX3lWwui8J6AffRdzSK48pel0z8YLQMzl25j+z3waVJE/o6axp67tN7
m9tgnhpyH2oAwgbI9fDZcx/jKiEsQ/9S5b4nwZyE3Af5ZT33Ye6kuV1C7hOu
Gtb4q7lfbJ9SVzRbW0H7i/jMt33v5GsT6m9sf9pifQxhL7Y+fy72N7B78j70
XEaG89cdfpvgOv6uy5EV8TvZLzc2jHr8HOv4pPFiGjNG7svxnuc+chMEzmKt
O3Kf+lCCqZBrpcqOiNjCiPvoh/R472vLbazMR+6D/LPTc5/fH0SGU+7jdmFL
jBhQa/yt3bxkOVIha8eA+xLHYdwQu13EfeO51FhjDVEnhPsWV693nvNXTRgj
H+3cNM3OTJTywKX8VK+3D87fWDXhWBnzAaYA71HM9zDmvmby3EcbEtr+q50Z
04Xb97rsvuQ+sl+bOrdNuU9zjOS4Dz6CmC/S1rCwNHMU+xdwn8/BovdUjvs8
e3XN47WGYBDvF3FfysmZmYPn+m60HGsxGv8VsVZgP899uf7u2Y99wGxqRe13
z302bnSWvfTNE5PnvisbmyZwI2M3yWxp7nHvitX4/ttf/mSKuA/LMfbGcx/r
tmvNil5q1LUdf7v8PpX7MrHQyQ4ptQIbc5/6J+tcS5ZhDUlyX1dtkBZjc+2Y
4Xw28J1yH+0jqOMIkedwrcly5D4ouveb+oeOevwc6/gV2ZJQy29rc87kuY9z
CDyntp4vdnEfGQk5UsBMEJmP3Ef207g55T74mkLIiXJ26aHJcx80+cVpy6Fi
+vpqq+emcp9+x8913MeaghH3qR+t2usi7htrrLGOUfquuUEeEp2bwEZ28dqU
6Q+fnivNTRAjB+0/XExjxJ2bkweXrt8wffTZHxMbhvu4+bg6x5POK4vtDIP7
YOvbebFkwnFHc/uxb2d3n0osV+T0IfeR/cB9if3E1kF7YFTPoU68rk24L12v
zj5ZKx2xU8wJEnGfcc6Ci/ML+K3UN4rvqnIt5vyjc4xIZtUYL87RS9u/Vbbx
Zbkv6Lcay6XcNzV7xXR29pYpWhfMBq5DbXeIDEnugzQfpEq5D8fKmob8ndxH
9qPtd39vKdVtV+5jjTubrwnnk/tu3fny4N7Wiml3f95E7kttGMXgDUEcW+1z
VAci8OVU7qvdtutbUe4WFfoT8q7iuvmcP7ncL32df1FLkNubXVs38d4l9yFP
K+9N5T6M51TbsWPMfe+3kr2JbNLhEXKf8h6kOVrIfaaCf8hOXdz3esvyg0Ko
V8d3GdgGuQ3fQ7Q9eu47Lc8f+qN67ru9PGXC/p4/+cZUx33KiT5XJ1k18vfU
WvKT0xMl/wRrz4D7xhprrBHrHea+udWFg83NxZRjU8fmN7/kn/0ch5HPhfuC
DZLv0jCWaS6XLPe59htz31GbkP2U6ZjfBbx3ujOvhnx9M899+Iy8nvpONJdX
rAn3WT/809Exeu5jnsSVrY2UR9EY52aG++ruLcd9Z5d3S328Tpanv7A1gkVo
//Lcp/dFxJNZ20wF96l/KewuaBNIuQ8sQOaEryqZTbmPcWE4bsYGdnFfcBw8
duU+nO/q7j2T576Z1TPmo6l5XJX7aLdnbAzq/oH7yH7k2z927nN/PGG9vSGq
5L/J6yh29CYxfP54vV05el/Ba8X6HOQ+xnyWjiXwC+3rnOV8uB/lPnK7ch/y
s9CHc8x9Y/XV/xz3kf0Yt6bMp3UN6Mvpue/Z4zXT5Pyibcdz3/TCtOnq7FSy
7ZH5cnUKIu7zirjPvttYMN3bWjM+5HFG9kGuNz31QZb76Efx6eXfHHz0+Vcx
9xW+m6O+tmONNdaRvI8P5+N4t3SmM0eFMM9Qf04wGwTb2I8vtkx4Bk9M/IsJ
sXOw+UO5emv47VxnWQi5NOn/iX1cmJkzIRaPn8FckzfXDjW/YMw3LO5L++mI
nDoxtxjaeca2vgq5uKUs90X+bMKATbmvqV69FnYTtgG75LgPc2FwXxsbh/pt
Yj9gviru03ajIu4jy+S4L3Gebq/qGjHGKrI3Cvfxs14nz30Wp9j5nXlg8Dni
PvzGuME2702U+47eJ1025vPch/g9LsPvlPsuL66U2Ee5z9jP3efHyX3RNa2d
P2VsyLYNjeETW13U5uQ++HaGOUPVFj3IcxSW5T7W762alPtoyyX3kf36Yb0x
943l7VJgNeW+28uXEw+R+ch9jI3jswnzG899HxU5arm/iPua3FPeP7KL/Tpz
KNY9PzO9YPd5xH3Q/9/eu35XceTn/v93Tk7WOusk+a2VlZmVmZOxY08gAwYG
I0OChPBYSNhCF9ANI2HJIJAmgPDYGHkGjCczr/TbT6mf0tPfXdWXvXvv3pLq
xbMQvftaXd1Vn/7evn6y4nyjIMt9YD6I8yKsC5aEQtwH6fnZ2ohJSUmjoePE
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
56a+srAhPt9f64n7yGq0OaJfsU6DzbeK3JuQxuzxdwi8B9XxJ07cZ8Yajidz
4itXkCfUzqXbHiuTTq4s93X9nvmABm192TPrnxP5XbmP7AfmC/lmesYzy/XZ
0+Na7mu7DSu1b2K8k6fQeJHd8/H5ZZ+nRblP894q9yHfJ+ahYD7lPvh88m/W
dif3XR37pa91qeyHehCtt82ISmuml/loRrfvCHW/EZeHZcp9rMOAOb/lPsz1
NzdvOS0vXffc5+famc0OfyPOK1aPPOTPCDYi49H313IfeaNJliriPtaM6If7
mjyfudnfOjHHC+bL+jt5L7Zv3kflvmevl51y9zGLZwhxX8wXNcZ9mkuEnPS2
IXtbaVtmx2Z+k6a4j8ua5j7a0qY+/cQJzwHtWeAusmyd/ZL7IMTZwv4X8/3U
aySr98p9EJdpXp/YecLH81xnbIC0ViPyrQyL+9AnYufJvo1zYk4c2r3c2Knv
X/E763VcDvqlRewYOTaUvBdVx4TSMSNxX9Ixk+c+ndfqcxThPh9vV2I7ZExe
17GNj7XnyRFok2hbJVve6ZLhPiy7uLDtpNyHWg0QmY/cB3Z7/9/+t6/zwDpj
yG/09t1LJ+Z4Ue6jLyi5j/UAoYnr7yXuK5D36yT3Vdjm4t0dX+f7+cvtHPdB
Guel3GfnPpb7HPvt3z/iBfHvBPdBofmVZQeyjuW+0PHJffa3WI7Pr789FOyQ
Zaxoc32S+6AmOKSULf7y+5zs72XcVyb6fYL5+Gwjv1KI+x4//tyJdhrYmHA/
Q9xH38kYl5AB2+Q+1hhnLFud+uBWZJ9rn006Vcl3Uibdx+rKlLft9ct90Ks/
bTot7U7W5j7aack6PC8wEv1cwVe0DeJc2R/AbuSlfriPuTapZ3uLnvtwbJ4n
+5nGE9ZtK7KsrQtxmrnPjTsa8xc7N8ljmuaKSW0q5J8ctMFxfbGhd3Efn6OA
7b3t66zdLonxTr2srzOWkfs4BwebKfcd1r3c9n6a4D4IPKd5bT37ZXMVMiG5
D8sY/6fchxpjUNttM2rK5WgJzDF03fG7605Pvtl0uVIs92mMk+W+mGjrefZq
2QnswJoDul5Vv87cfDPjHLBb0fwwtm+t/QChvgLrm5P5yH0236juR2MVeR73
l4bHfWXiMwTmW1665lRn+xj3MecOxbYh9zFejyyvyvFihEu4HMzHPItttWGv
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
4LMJjqs7H2i9XQagrloNdw+5z85VyHzkPsixUc18GPTvw1yuibwwOJ+iWvG9
2CeRV8VyH0T/T8bKKfPd/e8bTu/eHjFD1fw0yn207eicncxH7ivibh4TNjPy
K5m937aOSbmv6X2T++x9pD9sjPsK2zvCfeDEqnN0zr9xXMZhgVnKjtsU9yG3
SJW2K+M+SO3iZKeyaxmUyriviHl47rgX9Hft5Rx65T60I31ie+Xlp0+WnTY3
w7l/9t+U13RU7qs1FiTuS0oKKrFdUtKARe6TfJ7gPrIf/TkZu0fuU/5T7qPN
D3Ng5nOhDe+HGrXGW2+XhhWq0Tex9NCJdRFy84mMr8AQ3iZWMa8neYXMR+7r
h/1YUx3nGuO+XgTuC9U/UO47rN216P06Ed8H5lPug8hhVWMWlfm8L6Lkq6ya
78ZyX1NtExK/vWysh+MW+5GL3cxyltrrg9CPbM6LXlWF+/g72IL1GKpyH9Rr
bQKqzL9TFeI+zXGl6ylr0R91kH2mSGxPzbnkcm+VsFxT3IdafezTZesq340C
9+G4lxcfO/U8LkhN9rbHqKSkNpT4LilpuAqNO5PTN5ws94Hr8Le1+03dOONk
uQ9auDPm5z+MCaoyJrfdLo23M3O6yDLlPssYyn1a+7BK29E+CCkD9jo3xPbK
fU3WLH/+ei3IfeQPHHPy1q+7uI/r6dy8LveFVJf76BdaFhvXlMh8TXOfz9mT
tTv+vr806aR+m01xH+brZDmI7KD7DnFfnWMMk/toy8v1JclrPOh+0at65T7e
G2XxXo5fl/v8uNLh5iJmBrPFagfSlslvYv3kpEncl5TUnxLbJSUNV27MQXyf
PHfKfcjDgbwttOdpThfG/Sn30S5IWx+4j+wXisOJqe12aax9M/teiPuY06Us
hk+5r8z30M15vn3o8/kr9zGPZp2YQZvjpN95Jmoo8G8wH2R/hyz3QfefdrMO
5+ZV5+dNCu1Mu+Sg5/Zk2vOd54557wdxnMOYrStR7msidpHff2Lcx7grzf9Z
591BMRawbm6XXkTGdPkkv93yuf/biNvrV2jvqnkx++E+xhB88P7fOm2s558h
th37BtqXsXy4p21z38PN5a482NC5O9tO5z9fL63V7uvnphwvSUlJSUkDlmc9
4b6LiztOYDbmX2SdBtjxQnXcmdtFc7xg+6eS515rHFUZU9tum8baWLjP/kbm
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
ra8H7qNND7/99NN2F/dNz19wIh+GmA9iTkucv+W+XmIgkSsU/yr3IaaSPByq
jajct9/hlv0Kvsx1xJp9Vy7/rDXugz8c85X02g962W5Y3IecLFXr1lUVfCeb
8olFTp1e8gehhjl0/cvnR0zS0aOXe068ZrCO/s3tyXxl3AfxWrE9+yzGAnsv
q/j696Kq3AdpnlDW8ZifmzgYuznpVMl3MzQuaE0++oMkxktKSkpKalEh7rtw
7bITue9//nLke6fcR5vf2KV/8TF+9PGEHyeXhbgPzKfcl5/fTXr2a7t9CtuO
47pyX+Yry/wuyn20/8CmNercByF3CDm8X+7DXJ/cB6EdXr/ZdLLcB/E3rGe5
Lz6vPeI+MhfVK/c937nnpG1juU+/WeD/ONYwuK+NvsE4qCa5z/r3RreT3CyD
vMamuY917Zhrpd/YQXJfFfaDfY/vK/xdxn1sY14/zlXtjCF25TZqB0YfLeM+
2nTrXDvZFedbdRuMRbwHEzc+csLx9VpYjwL5OBP3metINsmkpKSkE6H/mN/O
2fiU+8BzVz7+uWM+5T4sg9TXE9wHYTnnv4zhA/eFxmIwX3SelDEGaki03UbF
7ZfnvtxvGfc92Vk4+Hb/vpNy3yDnrU2ItQKa8u9kjk5cO9uBbGc5j//nevwO
UGt+KMzH7VmPovRcs7qAYDjlPvIw/ZM1VstyXy+cWUX0j4Otr069x6bEPCi9
zNmhEONV5T5oGNwHFmgqdy32xVg58FoT3Kf2q7J1Lffpcgi2r7L275X7rl76
pRP9PrSunta3r8PYw+C+87ObOSkj19HZzzecNG/LcVbb421SUlJSUn/KcV+2
bGzhK89zZDwdQ0PcR79O/ob57/mLv3Ca6MxzJmrmez823Ec7nzAfeW9scfNg
65s7Oe6j7+Io2/rsPYBdq9d94Dphx3NzR+E+xDZC8MWCLPcxJo7MtfVgqq9r
4T7LuI98R+azPpxUiPuGJTIfuW/Y7Kfc18v2dRgvJK1ZPohaiWSBQXEf/Qh7
3R9ZqSr3gZH4bkJcH/6P5XW4j21d5bgPt2acEMNHf49LY//eGPdpP9L/85sM
YxRhs2W+TrA2cxHxvqLWA31WcW8mFledCt/3PXCfzdc5ymp7PE1KSkpKGqx0
TOIycB80M30lON7OTJ13Ul/PjwI5BZX7MOa/efvSqfr8ZvLgr39uv42C7dbh
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
v58+6a3WReK+pKSkpNOnnA+lcp/Ngyk+nFGbm8bSqQ1Q2a+CLfAwPm87x33B
8w/UCdJxFf+HbY8+Lpb7IMTA0z7XBPdxX+S+mcdjB7uvlpx0vaM6WZPHjvu4
jMwHIccI9Pz12rGo0456CZRyX788YWW5r2veGPEXpd00xH1Nnhftj23fjyqy
3NfPvmg7jbXpEafXrz1QVb1yH3N3YM5OX0ny36DvwV8lVpTvMOST7IU7QsK1
0I7G6+zlHoAdtU34N1mnyTbBsVhfMnctWfyect9HM6tOYL2z06tOOgZX4T61
6fXDfdTr19tBO2Lu+2k21i6ur/n7Q02vrObWLfr+mpSUlJTUrjwnWUYT7guy
nrW9mf2B+5zuvujaX477ZIzoOidwX49jx/l7e07KfUVzKHAa7X/9zAHAfKjv
vrx8zUm5j4zH+RK5z+6j7T6Ru5+R2L67D9aceM5kvuPAfcp8rJdHfq3LfWW2
MtpEHtwdd/Xyquyz6drSMZH72r4fte7d0nUn1HPox98zxn20A+O5HDT39SrM
70PcN8xzIPeB+UaN+/hujXFf022Bc63DffTptNwXE2q+F70TcHzagHuxjSbu
S0oarHI5BjEvHlTuw6SkAnX5UBrmy61vuI/LlO38fhFDt/BVfhwQxvsNc6wE
uK+LKWnzi41Fmc7dO5QuI/dVHfvAfWS/Xsd/sl6O+zKWXFj5JMd9Rftpu28c
9ZHdLu6jrW9qfi7HfZDOTUaZ+yja+ZT7qNg21i+yLvdVZb/htcFonldMlvsg
G6dZJOZEXf7vm8HflfugYedPqSIyFub59Iuskrt/EOLcX8+pai0BFeMHHyxO
eNE2hzjpOv62Pl/y8y+d9Dec3yDagLXbQzU/8PuDL79wun57tiuWom3u0/sI
hjvXGXPPaVxHR1dmV5zGZua9nyeuBdLa77lxPHFf0imR95GjyHbqRxfgvtzc
W/IPtn09SSdDeX/O7S7uq7JtLkcXx4ROX720vOdEu5rlPu6DnBhjQhujV3gd
sky5r9exm/M85vjsZR9kvbFL/+KE/Sn3IWalynyo7b7i29r7/Mq4LtwH6XnX
tVO1HVcG5qN9L5Tnpey8q8TGuXytmV2xzjGGc/3jx4772KbQ1U9+6dQk97G+
PXPjjyL3gYVOC/expjm5D1xFHgwJv7v68FIjXo8zCO6DWG8duT1DbdQL94H3
oDrngTZimzFmss72ifuSkqpJ58Uh7iPf5ZYV+b6F5sYpL25SDXnGM2OJ5kLx
3yPMuxl5nzHeXFw+lO3fbj0ZEyBy3/OX2wcP7n/hhG31fKK5XfgcsB5D4Jyw
f5xXaB87r/ac+hm3lfs+OvePB2uL12vvg74+yn2Y/2DsZT6+KnOitvuOvy8+
V2uA++b69w+syn2wvzVtPySzwa+M3Nfk/sEltDso9zV5jH7FmhKIa4Rwjm2f
U9W2JffB7gctL11zKtu2rAaH5b5RFLkPGkRdgl51lCf2pue/qttyG1wL94Nn
84dO/4T43sTf4MOq3GePAy7iPpu8duU+3hPmpcF1qe2R8XnM+WLHaPpcMr6v
znn0y31oY24/vTjntP31kr8WjM3nZzedmJfmk1sz4W+5nGeMwFiWlDQI5XzX
NMeF8l2M+2xejdA2Ae4L5V1MSlLG64rNC9ihNRaOtWL5rRHstry14XR58ZGT
O0627du3z5z+/NNLx3yW+7gftfXFztdyH9elPZHn9p8PXhys7B5q/81Lp365
D0J+TTAfuQ+qUrtBBe6zjEfuq7qPtvuPvy8Z81nuA/NBzH2BOLHVHji5iuh3
WTVmsEptPUi5D+onNyZsZcyPQh9e5b5h5sxEHfnK6wr3kU1j+WdGVRvrU7W4
r06/aPvaYgJTsG+NCvNBvXCfj+HLGK0q9zlJPtOcst9DuUYHxX1kPbz/J699
4ETmGyb34Zjktl5y/cDOGvKPTdyXlHSkXB75Iu6LMFre/y7AfSUsmLgvySro
NxmoaUcp90Fv3naPB8p9yIsJzS3cynEfdPnTzw4uLu44kfnIfTfuLHhfUBzP
n68wqi7Tfg3Gw3lB4D6yX6Njd1ZbAb6azMtZVqvdzl+4Hblv/eGntXMetN1/
DvvQIe+pvY+2vjv315ws90G0l1S91jIeIve9/XGnUe578viO08zNc4U1EfYD
80NeN3N/WO7j77Zm+6AF5qvDfSrau0PMh/NHjXdo1HxVwX1kv/Pn/tGpn/oC
+i2g7WsLiXxB7hv0cXrZVtmvbD+W++qoF+7jsXo5XpX2Uu7D976yvki2Yw6Y
upxnNSjum73/wAljNMd35HiB8Dv9QN04YeasbY9lSUlNq2p+ljLui/4W476Y
LTEx4OkU7WQh/+ECH0uIHMXar5b7Xr1c9z6LkHKfH/cyPgL3kf3Ae+DIi9N3
nSz3wU7nmND4jOKcaNt7+HzPSblvUHMdinF64Leq8yvlPs3rdiK4L/tmizpP
yn2wD3GOjPx+5D4uY62AYHtJ/oyitlDu8zk3v1t00vWU3UIMR99AxvOR+SDm
pQ8xDW1iuC72Bct9kG5ruW/Q/bUJkftsvlnaK0eN+9i2jPFrivu0Ldq+xiLR
h8/Oz+sq5odAjkGtO/YDPSbfdyGuq8N91LA4e1DcR93uvE/g60l/T7ZHbP2m
uQ/Xx/jIqjlecJ/opxrzC+V93Nyc988X60jgnFHHL3Ff0klSV8xewG+uiPsw
t728+NgJz4fPf7HytJD7gtJa1SHuK8mLkXSCRe5D35BYPNvH1P/y80d7Tsp9
+r4H85H7ILCd1pxj3Tly38LqgpPr32t57sPv29/sOdE/k+cxPr98cP3LF06M
KyT3DWM+kBvjsmv58IO/q/VdHTXbbT7vielfO9n6fUVqvR/dzXMfl4H7IDAS
z1W5j7Y+MqByH+fprJGQy5lYsW6i5T6I/p/T8xdy3AdprQzLfbDNMZ8J/k/u
654TTfrr4v5snQdy37D76aCkzKexf3Xi/9Ae99cGx06W+z6+9M++tl+/9+K4
cF/ILlNX4D7mhuHcHxzgY+Q6KuO+0H5pa6rKWMO0rw7SRzbEfcNUXe4jnzfB
fVBuvhHyW0vz0qQRVzRXi/WbM8zH+TO+33BeG+M++3x9/ui5n/cGzytQq9qd
q/qbJu47Vcrl52Q/0BwsRuxf5D6yGBR65z97cvfgaWeuC5GJyH0PFscP9v+w
6YT/K/dh273vnxws3f2dE7cl9+kxLPcNe7zMjXHCfVDVOmHgPgi5YVCzHTrW
3GfiM8h8yn0q5T6t66wxbo65NmacyIVVmM8Kddcs95EB5mZ/60Tmg+jXyWNZ
7iO/Kuf77xvmmpus6z7qIieHuE9rKkBcTpsguA+auXXe3xv83cR5kfEgMF+T
3DeKsXNWOLcvPj3vVPZdivN0+ByQ3SjWAiT3kQOU+5hLk5yJ7chz+ozrMZX7
qrb5sNoO1zyI+0sWZk2HpeVrrebdefTlrS5fT3A+bLjQ2vKEr79YJ+aRvEef
HPw9v3bP6Vyo5q74IZ39fONojsq5SpqrJo2Qgrla5o/80fRv3U65j88K35ll
/l7gPgh/732/54Rni7ktCs/XxBO23X5JQ+qjpi6DXx6Im4PoOwk2U+arwn26
DMyn3Le1Pu2k8XDgPrIf7Trs13oMxiTUyX8yaCn3VWE/5T6y38ydj5zIgVWO
23qf4rcuU68d3Ecfzyo+jDonZOwbGVC5D/Yk1LeDiuws6i8F7oMm1z46mJw7
46TcZ31MLfdZWe6jXY+MF2Pdky6tc2F/U+YLibZvy30QYvImJz50wvLxifdq
nVeI+6rajcv613HkvqPn7MhGpwwX4j76n5NXwAfcJnRMMl+M+47s6ze99Pxi
9slBxypa8bqbqDOvOo3cx78T9yUdZ3XZp8u4r7MN6pfw20fsWVHuq/q+Ue4j
++F4yF0IO43PmaHnrzlfEvudeOXsznP5Ouroy3ObG06PNu85IT5Oua9KP6Sv
J1iPy/C3sh9kuQ/zA/Lc7uOFKPfB/06579vn662MkyGR/aCydcF8qP0+cf09
J7IJua/qMdvuU67vBLiPIvdVuRbyoeU+bo/6cZb7aA8EG3A/tFnQXxMcYrlv
avWCE7eLxRZWkeW+0yqNX7S/gemmPjvrBC5Ge1vuI5Mx9g5/Y3mI+yDaEMvi
8/Q4tEX2w3zax4bJIP3IMloR90HOlzljE7xnaccmy5VxX51zKuI+y0G0J/ZS
968XMS9O09xHcSwj/0GTNz7sKc9Kv9fJc6FwT/z9/jb8vDAfNWpi8O+yYzHH
C7iP+T5z9Xor5iosy5ORlDQI5fpoxZi7QXFfSKxVxrisKPelmNoTrSObTJ77
LOtb7mM8Xh0p97Hv0hdSuY/jNvu45T7614S4j/ZEMN+och/teUXrK/e97ozx
EL67QlWP2Xbf8n0Mvp4B7ptYeuj06lX5HKaMD1k7XNdT7oM054hyH21Hr/cf
O5H5lBeT+hPztVqGRruHuA9iLhyuG+I+iKx35fLPnN2O3FeUl4X3P8R9Ic5H
Lpqq1xrzWRxV1WW0Mu5ztSazWL8mz5PHRH09Mqj+3hb3Deo+J+5L3Jd0DGTz
IFbkPtq4EUNb9s5qivusECd17t4LJ57XsLkv2enbkX9/CutZ7kO+FvAZuUpz
sVQds8Fs5DblPvxLtvnz290u7vOx/+9+75dxvF1dPprP73TmlhC5rxc2HZTg
CwMhT2cV7rvy8c+dLPfVqQPYdr9y/Yh5XTKbn/s7q+Og3FeF/cpkue/d2ydO
YDssV+7b3VnwXIg5K7mPrHHc6s+NusBfodg+Mjd5jveP3Fe2X3IfmI/cR/36
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
3mbs0dSNM05l+yAD63X+/xCi2Qk=
          "], {{0, 867.}, {894., 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> True, 
          MetaInformation -> <|
           "Exif" -> <|
             "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com"|>, 
            "GeoMetaInformation" -> <|
             "GeoModel" -> "ITRF00", 
              "LonLatBox" -> {{-42.14668737480501, 66.25455297480501}, {
               29.614977446267197`, 75.1062777438382}}, 
              "PlotRange" -> {{-0.36177773240114935`, 
               0.3617777324011493}, {-0.33878213965547593`, 
               0.36346392582138437`}}, 
              "Projection" -> {
               "LambertAzimuthal", "Centering" -> 
                GeoPosition[{52.360627595052705`, 12.053932800000002`}], 
                "LongitudeDetermination" -> 12.053932800000002`}, "Software" -> 
              "Created with the Wolfram Language: www.wolfram.com", 
              "TileSources" -> {"Wolfram", "OSM"}|>|>], Selectable -> False], 
        DefaultBaseStyle -> "ImageGraphics", ImageSizeRaw -> {894., 867.}, 
        PlotRange -> {{0, 894.}, {0, 867.}}]], 
      PolygonBox[{{-0.36177773240114935`, -0.33878213965547593`}, \
{-0.36177773240114935`, 0.36346392582138437`}, {0.3617777324011493, 
       0.36346392582138437`}, {
       0.3617777324011493, -0.33878213965547593`}, {-0.36177773240114935`, \
-0.33878213965547593`}},
       VertexTextureCoordinates->{{0., 0.}, {0., 1.}, {1., 1.}, {1., 0.}, {0.,
         0.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], RectangleBox[Scaled[{0.8, 0}], Scaled[{1, 0.2}]]},
       TagBox[
        GridBox[{{
           StyleBox["\"Geo data sources\"", Bold, StripOnInput -> False]}, {
           
           TemplateBox[{
            "\"Wolfram Knowledgebase\"", "\" (\"", 
             "\"https://www.wolfram.com/\"", "\")\""}, "RowDefault"]}, {
           
           TemplateBox[{
            "\"\[Copyright] OpenStreetMap contributors\"", "\" (\"", 
             "\"https://www.openstreetmap.org/copyright\"", "\")\""}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
      Annotation[#, 
       Column[{
         Style["Geo data sources", Bold], 
         Row[{
          "Wolfram Knowledgebase", " (", "https://www.wolfram.com/", ")"}], 
         Row[{
          "\[Copyright] OpenStreetMap contributors", " (", 
           "https://www.openstreetmap.org/copyright", ")"}]}], "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{
      {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[0.3]}], 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{-0.033534580654642446`, -0.023042239839114936`}, {
                   0.05502860407589101, 0.04986436433411842}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.033534580654642446`, -0.023042239839114936`}, {
                    0.0638690935579423, 0.05787520516549762}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{173.39941978752873`, 
              245.7760090051264}, {-15.792512683519895`, 
              56.584076534077745`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3.84641392865371*^12]& ,
           TagBoxNote->"3.84641392865371*^12"],
          StyleBox["3.84641392865371`*^12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.84641392865371*^12, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{-0.12165601887251412`, -0.1026646265225738}, {
                   0.04589419694711022, 0.041587188986956625`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.12165601887251412`, -0.1026646265225738}, {
                    0.05473468642916151, 0.049598029818335825`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{122.96512671902025`, 183.67682969420719`}, {
              40.87990668996782, 101.59160966515478`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2.63031773145526*^12]& ,
           TagBoxNote->"2.63031773145526*^12"],
          StyleBox["2.63031773145526`*^12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.63031773145526*^12, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.010009576975952755`, -0.16603955144942795`}, {
                   0.03923257797121711, 0.03555073937593434}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.010009576975952755`, -0.16603955144942795`}, {
                    0.0480730674532684, 0.04356158020731354}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{211.28893374923328`, 263.4935681814343}, {
              85.59919202065119, 137.80382645285218`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1.88870944368748*^12]& ,
           TagBoxNote->"1.88870944368748*^12"],
          StyleBox["1.88870944368748`*^12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.88870944368748*^12, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{-0.21407206740739698`, -0.19241057155832875`}, {
                   0.03271213770396991, 0.029642219351394605`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.21407206740739698`, -0.19241057155832875`}, {
                    0.0415526271860212, 0.037653060182773805`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{72.37314748106765, 116.25100241947729`}, {
              106.60083658418499`, 150.47869152259463`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1.28148464004358*^12]& ,
           TagBoxNote->"1.28148464004358*^12"],
          StyleBox["1.28148464004358`*^12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.28148464004358*^12, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{-0.06688119474967005, 0.005350330553371363}, {
                   0.027973696122376768`, 0.025348463742499994`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.06688119474967005, 0.005350330553371363}, {
                    0.036814185604428055`, 0.033359304573879194`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{169.3820798892344, 
              207.20881610298846`}, {-16.646628334452004`, 
              21.180107879302035`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 9.13865395789886*^11]& ,
           TagBoxNote->"9.13865395789886*^11"],
          StyleBox["9.13865395789886`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9.13865395789886*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.08518692956986448, -0.0016146673773179965`}, {
                   0.023033816245314004`, 0.02087217410925893}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.08518692956986448, -0.0016146673773179965`}, {
                    0.03187430572736529, 0.02888301494063813}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{269.6338248728036, 
              301.152200182044}, {-9.045202024052593, 22.473173285187876`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5.96624355719671*^11]& ,
           TagBoxNote->"5.96624355719671*^11"],
          StyleBox["5.96624355719671`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5.96624355719671*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.024216853966769064`, 0.1685496041210157}, {
                   0.0220450776051205, 0.01997622509122035}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.024216853966769064`, 0.1685496041210157}, {
                    0.030885567087171786`, 0.02798706592259955}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{231.33492585967485`, 
              261.5906550443526}, {-117.0660794585374, -86.81035027385958}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5.4122005945925*^11]& ,
           TagBoxNote->"5.4122005945925*^11"],
          StyleBox["5.4122005945925`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5.4122005945925*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{-0.08858019799113372, -0.021748615868145527`}, {
                   0.02168775283460926, 0.019652433985819895`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.08858019799113372, -0.021748615868145527`}, {
                    0.03052824231666055, 0.027663274817199095`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{159.54063158982407`, 189.3400473278988}, {
              4.670077565770459, 34.46949330384521}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5.21861292586616*^11]& ,
           TagBoxNote->"5.21861292586616*^11"],
          StyleBox["5.21861292586616`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5.21861292586616*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.015108808311825402`, -0.08764183566110482}, {
                   0.019960571178960995`, 0.01808734221591647}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.015108808311825402`, -0.08764183566110482}, {
                    0.028801060661012283`, 0.02609818304729567}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{226.85030058691166`, 254.44405839348963`}, {
              47.846623095411026`, 75.44038090198904}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4.33258467676515*^11]& ,
           TagBoxNote->"4.33258467676515*^11"],
          StyleBox["4.33258467676515`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4.33258467676515*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{-0.20752765637016937`, 0.04027822960700464}, {
                   0.01980926389499374, 0.017950234585060593`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.20752765637016937`, 0.04027822960700464}, {
                    0.028649753377045027`, 0.025961075416439792`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{84.7905032139845, 
              112.19103750531484`}, {-33.73546571488158, -6.334931423551264}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 4.25888950992003*^11]& ,
           TagBoxNote->"4.25888950992003*^11"],
          StyleBox["4.25888950992003`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4.25888950992003*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{-0.020052805477262264`, 0.06379648938472388}, {
                   0.01830553590077237, 0.016587626141280065`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.020052805477262264`, 0.06379648938472388}, {
                    0.02714602538282366, 0.024598466972659265`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{205.45589473266932`, 
              230.93612749322455`}, {-47.792043515389295`, \
-22.311810754834017`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3.56084867685639*^11]& ,
           TagBoxNote->"3.56084867685639*^11"],
          StyleBox["3.56084867685639`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.56084867685639*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.10641082390580694`, 0.21350769964125604`}, {
                   0.016219673864339645`, 0.01469751487492943}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.10641082390580694`, 0.21350769964125604`}, {
                    0.025060163346390933`, 0.02270835570630863}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{287.5364924544173, 
              310.35302268569865`}, {-142.05283511389027`, \
-119.2363048826089}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2.69594831987549*^11]& ,
           TagBoxNote->"2.69594831987549*^11"],
          StyleBox["2.69594831987549`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.69594831987549*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.15629018744077278`, -0.09721631309504258}, {
                   0.01566764802878476, 0.014197294710376562`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.15629018744077278`, -0.09721631309504258}, {
                    0.024508137510836046`, 0.022208135541755762`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{319.7376201116409, 341.8491983428816}, {
              56.701146876267615`, 78.8127251075083}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2.48715551366635*^11]& ,
           TagBoxNote->"2.48715551366635*^11"],
          StyleBox["2.48715551366635`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.48715551366635*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.03885485834575117, -0.044642685422657924`}, {
                   0.015576237219170556`, 0.014114462481734313`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.03885485834575117, -0.044642685422657924`}, {
                    0.024416726701221844`, 0.022125303313113513`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{244.81193316009382`, 266.8067773022532}, {
              23.190537987113476`, 45.18538212927284}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2.45339322066759*^11]& ,
           TagBoxNote->"2.45339322066759*^11"],
          StyleBox["2.45339322066759`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.45339322066759*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{-0.26821585490699473`, -0.1880738124836127}, {
                   0.015111725492411021`, 0.013693543536586028`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.26821585490699473`, -0.1880738124836127}, {
                    0.02395221497446231, 0.021704384367965228`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{49.03970560362011, 70.44135564193411}, {
              115.06985941285757`, 136.47150945117156`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2.28539245045341*^11]& ,
           TagBoxNote->"2.28539245045341*^11"],
          StyleBox["2.28539245045341`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.28539245045341*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.13539202398253863`, -0.22375161792299764`}, {
                   0.013940837304435662`, 0.012632539061182696`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.13539202398253863`, -0.22375161792299764`}, {
                    0.02278132678648695, 0.020643379892561896`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{307.4964507833504, 327.40284477244796`}, {
              138.59825120033716`, 158.5046451894348}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1.8883520162591*^11]& ,
           TagBoxNote->"1.8883520162591*^11"],
          StyleBox["1.8883520162591`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.8883520162591*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.0944780247534909, -0.08842418150687024}, {
                   0.012868992672253568`, 0.01166128325438466}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.0944780247534909, -0.08842418150687024}, {
                    0.021709482154304856`, 0.01967212408576386}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{282.05669347492983`, 300.59431272827595`}, {
              52.87423082944485, 71.41185008279103}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1.55808436238487*^11]& ,
           TagBoxNote->"1.55808436238487*^11"],
          StyleBox["1.55808436238487`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.55808436238487*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.08570503878770455, -0.0600935542551469}, {
                   0.010973694347261254`, 0.009943851969576423}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.08570503878770455, -0.0600935542551469}, {
                    0.01981418382931254, 0.017954692800955623`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{277.6651964237466, 293.7824681882221}, {
              35.99491395843373, 52.112185722909224`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1.05172564491569*^11]& ,
           TagBoxNote->"1.05172564491569*^11"],
          StyleBox["1.05172564491569`*^11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.05172564491569*^11, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{-0.06632524568379841, -0.04288315679480305}, {
                   0.009534769203507334, 0.008639964858089558}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.06632524568379841, -0.04288315679480305}, {
                    0.018375258685558622`, 0.016650805689468758`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{181.5105664142421, 195.7902916497975}, {
              25.92461449320136, 40.204339728756764`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 7.33531327937076*^10]& ,
           TagBoxNote->"7.33531327937076*^10"],
          StyleBox["7.33531327937076`*^10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7.33531327937076*^10, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.1648678486320248, -0.14884791923721347`}, {
                   0.009360589524403301, 0.00848213132543324}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.1648678486320248, -0.14884791923721347`}, {
                    0.01820107900645459, 0.01649297215681244}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{329.24171597423197`, 343.2990090241137}, {
              93.69577184813629, 107.75306489801804`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 6.98893474334324*^10]& ,
           TagBoxNote->"6.98893474334324*^10"],
          StyleBox["6.98893474334324`*^10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6.98893474334324*^10, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.042471563873847096`, -0.12448808410176972`}, {
                   0.008682569840363509, 0.007867741389173247}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.042471563873847096`, -0.12448808410176972`}, {
                    0.017523059322414797`, 0.015878582220552447`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{251.52294913495888`, 264.7143926148647}, {
              78.57461076128287, 91.76605424118878}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5.72037832030259*^10]& ,
           TagBoxNote->"5.72037832030259*^10"],
          StyleBox["5.72037832030259`*^10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5.72037832030259*^10, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.11602115387664755`, 0.07323882047525374}, {
                   0.008645508123957577, 0.00783415778368754}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.11602115387664755`, 0.07323882047525374}, {
                    0.017485997606008864`, 0.01584499861506674}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{298.5090265651979, 
              311.65314122564905`}, {-47.653041221914656`, \
-34.508926561463475`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5.65469574754912*^10]& ,
           TagBoxNote->"5.65469574754912*^10"],
          StyleBox["5.65469574754912`*^10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5.65469574754912*^10, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.033465776046206236`, -0.10829810394802208`}, {
                   0.008475907876883973, 0.007680473919572578}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.033465776046206236`, -0.10829810394802208`}, {
                    0.01731639735893526, 0.015691314750951778`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{245.9045876588925, 258.83211819287476`}, {
              68.36904482595888, 81.29657535994116}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 5.35896095807099*^10]& ,
           TagBoxNote->"5.35896095807099*^10"],
          StyleBox["5.35896095807099`*^10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5.35896095807099*^10, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.12237696311752697`, 0.0921170485889801}, {
                   0.007186797933440209, 0.006512342382055031}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.12237696311752697`, 0.0921170485889801}, {
                    0.016027287415491497`, 0.014523183213434232`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{303.4987034495978, 
              314.7800055385119}, {-58.775640209846415`, -47.4943381209323}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3.37073208163036*^10]& ,
           TagBoxNote->"3.37073208163036*^10"],
          StyleBox["3.37073208163036`*^10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.37073208163036*^10, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.12462734106996146`, 0.12815467024421667`}, {
                   0.006957408298362382, 0.006304480152400482}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.12462734106996146`, 0.12815467024421667`}, {
                    0.01579789778041367, 0.014315320983779684`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{305.08206876319366`, 
              316.0704340516514}, {-81.63968311750877, -70.65131782905104}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 3.06502854717215*^10]& ,
           TagBoxNote->"3.06502854717215*^10"],
          StyleBox["3.06502854717215`*^10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3.06502854717215*^10, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.2987684139548855, -0.26069447140083213`}, {
                   0.006467909355798662, 0.005860918953219385}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.2987684139548855, -0.26069447140083213`}, {
                    0.015308398837849952`, 0.013871759784598587`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{416.58606273322596`, 426.94932456392394`}, {
              166.95833141151584`, 177.32159324221382`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 2.46126464877213*^10]& ,
           TagBoxNote->"2.46126464877213*^10"],
          StyleBox["2.46126464877213`*^10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2.46126464877213*^10, {}], "Tooltip"]& ]}, 
       {Hue[0.125, 1, 1], Opacity[0.7], EdgeForm[{GrayLevel[0], Opacity[
        0.3]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               DynamicBox[
                Typeset`ToBoxes[{
                  
                  Disk[{0.03349009908048656, -0.28513594369992823`}, {
                   0.005502860407589107, 0.004986436433411845}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.03349009908048656, -0.28513594369992823`}, {
                    0.014343349889640396`, 0.012997277264791047`}]}, {}]}, 
                 StandardForm, Graphics]], {{{1, 0.}, {0, 1.103565738994873}},
                 Center}]},
             
             ImageSizeCache->{{247.81844947048165`, 256.9493175573368}, {
              183.18074059401357`, 192.31160868086872`}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 1.4647384607604*^10]& ,
           TagBoxNote->"1.4647384607604*^10"],
          StyleBox["1.4647384607604`*^10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1.4647384607604*^10, {}], 
          "Tooltip"]& ]}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}, {}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{52.360627595052705`, 12.053932800000002`}], 
       "LongitudeDetermination" -> 12.053932800000002`}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{52.360627595052705`, 12.053932800000002`}], 
       "LongitudeDetermination" -> 12.053932800000002`}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"ChartDefaultStyle" -> {
      Hue[0.125], 
      RGBColor[0.560181, 0.691569, 0.194885], 
      RGBColor[0.922526, 0.385626, 0.209179], 
      RGBColor[0.528488, 0.470624, 0.701351], 
      RGBColor[0.772079, 0.431554, 0.102387], 
      RGBColor[0.647624, 0.37816, 0.614037], 
      RGBColor[0.571589, 0.586483, 0.], 
      RGBColor[0.915, 0.3325, 0.2125], 
      RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
      RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
      RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
    "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> Directive[
      EdgeForm[{
        GrayLevel[0, 0.3]}], 
      Opacity[0.7], 
      Hue[0.125]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "VectorMapRemoveLabels" -> True, "OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoStyling[], {{
          Directive[
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[0.3]]], 
           Opacity[0.7], 
           Hue[0.125, 1, 1]], {{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.033534580654642446`, -0.023042239839114936`}, {
                   0.05502860407589101, 0.04986436433411842}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.033534580654642446`, -0.023042239839114936`}, {
                    0.0638690935579423, 0.05787520516549762}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 3.84641392865371*^12], 
             Style[3.84641392865371*^12, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.12165601887251412`, -0.1026646265225738}, {
                   0.04589419694711022, 0.041587188986956625`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.12165601887251412`, -0.1026646265225738}, {
                    0.05473468642916151, 0.049598029818335825`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.63031773145526*^12], 
             Style[2.63031773145526*^12, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.010009576975952755`, -0.16603955144942795`}, {
                   0.03923257797121711, 0.03555073937593434}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.010009576975952755`, -0.16603955144942795`}, {
                    0.0480730674532684, 0.04356158020731354}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.88870944368748*^12], 
             Style[1.88870944368748*^12, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.21407206740739698`, -0.19241057155832875`}, {
                   0.03271213770396991, 0.029642219351394605`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.21407206740739698`, -0.19241057155832875`}, {
                    0.0415526271860212, 0.037653060182773805`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.28148464004358*^12], 
             Style[1.28148464004358*^12, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.06688119474967005, 0.005350330553371363}, {
                   0.027973696122376768`, 0.025348463742499994`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.06688119474967005, 0.005350330553371363}, {
                    0.036814185604428055`, 0.033359304573879194`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 9.13865395789886*^11], 
             Style[9.13865395789886*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.08518692956986448, -0.0016146673773179965`}, {
                   0.023033816245314004`, 0.02087217410925893}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.08518692956986448, -0.0016146673773179965`}, {
                    0.03187430572736529, 0.02888301494063813}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.96624355719671*^11], 
             Style[5.96624355719671*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.024216853966769064`, 0.1685496041210157}, {
                   0.0220450776051205, 0.01997622509122035}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.024216853966769064`, 0.1685496041210157}, {
                    0.030885567087171786`, 0.02798706592259955}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.4122005945925*^11], 
             Style[5.4122005945925*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.08858019799113372, -0.021748615868145527`}, {
                   0.02168775283460926, 0.019652433985819895`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.08858019799113372, -0.021748615868145527`}, {
                    0.03052824231666055, 0.027663274817199095`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.21861292586616*^11], 
             Style[5.21861292586616*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.015108808311825402`, -0.08764183566110482}, {
                   0.019960571178960995`, 0.01808734221591647}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.015108808311825402`, -0.08764183566110482}, {
                    0.028801060661012283`, 0.02609818304729567}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 4.33258467676515*^11], 
             Style[4.33258467676515*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.20752765637016937`, 0.04027822960700464}, {
                   0.01980926389499374, 0.017950234585060593`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.20752765637016937`, 0.04027822960700464}, {
                    0.028649753377045027`, 0.025961075416439792`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 4.25888950992003*^11], 
             Style[4.25888950992003*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.020052805477262264`, 0.06379648938472388}, {
                   0.01830553590077237, 0.016587626141280065`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.020052805477262264`, 0.06379648938472388}, {
                    0.02714602538282366, 0.024598466972659265`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 3.56084867685639*^11], 
             Style[3.56084867685639*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.10641082390580694`, 0.21350769964125604`}, {
                   0.016219673864339645`, 0.01469751487492943}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.10641082390580694`, 0.21350769964125604`}, {
                    0.025060163346390933`, 0.02270835570630863}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.69594831987549*^11], 
             Style[2.69594831987549*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.15629018744077278`, -0.09721631309504258}, {
                   0.01566764802878476, 0.014197294710376562`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.15629018744077278`, -0.09721631309504258}, {
                    0.024508137510836046`, 0.022208135541755762`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.48715551366635*^11], 
             Style[2.48715551366635*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.03885485834575117, -0.044642685422657924`}, {
                   0.015576237219170556`, 0.014114462481734313`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.03885485834575117, -0.044642685422657924`}, {
                    0.024416726701221844`, 0.022125303313113513`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.45339322066759*^11], 
             Style[2.45339322066759*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.26821585490699473`, -0.1880738124836127}, {
                   0.015111725492411021`, 0.013693543536586028`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.26821585490699473`, -0.1880738124836127}, {
                    0.02395221497446231, 0.021704384367965228`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.28539245045341*^11], 
             Style[2.28539245045341*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.13539202398253863`, -0.22375161792299764`}, {
                   0.013940837304435662`, 0.012632539061182696`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.13539202398253863`, -0.22375161792299764`}, {
                    0.02278132678648695, 0.020643379892561896`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.8883520162591*^11], 
             Style[1.8883520162591*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.0944780247534909, -0.08842418150687024}, {
                   0.012868992672253568`, 0.01166128325438466}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.0944780247534909, -0.08842418150687024}, {
                    0.021709482154304856`, 0.01967212408576386}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.55808436238487*^11], 
             Style[1.55808436238487*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.08570503878770455, -0.0600935542551469}, {
                   0.010973694347261254`, 0.009943851969576423}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.08570503878770455, -0.0600935542551469}, {
                    0.01981418382931254, 0.017954692800955623`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.05172564491569*^11], 
             Style[1.05172564491569*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.06632524568379841, -0.04288315679480305}, {
                   0.009534769203507334, 0.008639964858089558}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.06632524568379841, -0.04288315679480305}, {
                    0.018375258685558622`, 0.016650805689468758`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 7.33531327937076*^10], 
             Style[7.33531327937076*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.1648678486320248, -0.14884791923721347`}, {
                   0.009360589524403301, 0.00848213132543324}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.1648678486320248, -0.14884791923721347`}, {
                    0.01820107900645459, 0.01649297215681244}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 6.98893474334324*^10], 
             Style[6.98893474334324*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.042471563873847096`, -0.12448808410176972`}, {
                   0.008682569840363509, 0.007867741389173247}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.042471563873847096`, -0.12448808410176972`}, {
                    0.017523059322414797`, 0.015878582220552447`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.72037832030259*^10], 
             Style[5.72037832030259*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.11602115387664755`, 0.07323882047525374}, {
                   0.008645508123957577, 0.00783415778368754}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.11602115387664755`, 0.07323882047525374}, {
                    0.017485997606008864`, 0.01584499861506674}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.65469574754912*^10], 
             Style[5.65469574754912*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.033465776046206236`, -0.10829810394802208`}, {
                   0.008475907876883973, 0.007680473919572578}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.033465776046206236`, -0.10829810394802208`}, {
                    0.01731639735893526, 0.015691314750951778`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.35896095807099*^10], 
             Style[5.35896095807099*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.12237696311752697`, 0.0921170485889801}, {
                   0.007186797933440209, 0.006512342382055031}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.12237696311752697`, 0.0921170485889801}, {
                    0.016027287415491497`, 0.014523183213434232`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 3.37073208163036*^10], 
             Style[3.37073208163036*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.12462734106996146`, 0.12815467024421667`}, {
                   0.006957408298362382, 0.006304480152400482}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.12462734106996146`, 0.12815467024421667`}, {
                    0.01579789778041367, 0.014315320983779684`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 3.06502854717215*^10], 
             Style[3.06502854717215*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.2987684139548855, -0.26069447140083213`}, {
                   0.006467909355798662, 0.005860918953219385}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.2987684139548855, -0.26069447140083213`}, {
                    0.015308398837849952`, 0.013871759784598587`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.46126464877213*^10], 
             Style[2.46126464877213*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.03349009908048656, -0.28513594369992823`}, {
                   0.005502860407589107, 0.004986436433411845}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.03349009908048656, -0.28513594369992823`}, {
                    0.014343349889640396`, 0.012997277264791047`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.4647384607604*^10], 
             Style[
             1.4647384607604*^10, {}]]}}}, {{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{}, {}}}, {
       CoordinatesToolOptions -> {
         "DisplayFunction" -> (
           GeoGraphics`GeoGridPositionDisplay[#, {
            "LambertAzimuthal", "Centering" -> 
             GeoPosition[{52.360627595052705`, 12.053932800000002`}], 
             "LongitudeDetermination" -> 12.053932800000002`}, "ITRF00"]& ), 
          "CopiedValueFunction" -> (
           GeoGraphics`GeoGridPositionCopiedValue[#, {
            "LambertAzimuthal", "Centering" -> 
             GeoPosition[{52.360627595052705`, 12.053932800000002`}], 
             "LongitudeDetermination" -> 12.053932800000002`}, "ITRF00"]& )}, 
        GeoBackground -> GeoStyling["GeoPlotMap"], GeoCenter -> 
        GeoPosition[{52.360627595052705`, 12.053932800000002`}], 
        GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
        GeoGridRange -> {{-0.36177773240114935`, 
         0.3617777324011493}, {-0.33878213965547593`, 0.36346392582138437`}}, 
        GeoGridRangePadding -> None, GeoModel -> "ITRF00", 
        GeoProjection -> {
         "LambertAzimuthal", "Centering" -> 
          GeoPosition[{52.360627595052705`, 12.053932800000002`}]}, 
        GeoServer -> {Automatic}, 
        MetaInformation -> <|
         "GeoMetaInformation" -> <|"Software" -> "Wolfram Language"|>|>, 
        Method -> {"ChartDefaultStyle" -> {
            Hue[0.125], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            RGBColor[0.571589, 0.586483, 0.], 
            RGBColor[0.915, 0.3325, 0.2125], 
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
          "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
          Directive[
            EdgeForm[{
              GrayLevel[0, 0.3]}], 
            Opacity[0.7], 
            Hue[0.125]], 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultPlotStyle" -> Automatic, "VectorMapRemoveLabels" -> True, 
          "OriginalInput" -> HoldForm[
            GeoGraphics[{
              Annotation[
               Style[
                Point[
                 GeoPosition[CompressedData["
1:eJxTTMoPSmViYGCQBmIQzXV9cYHtKncHzZj+Q19XaDlsOVG2b36WpwMDGAhA
6AZXKN/SQVH+S07YVDcoXx8q7wilHSD0Aw9UeQYfKK0CVecL5VtB6QA0vjuU
ZoCqh7lHCcp3hvLNoHyYehMo3wvKVzhw/wH35JVZrg7Vzfo+y1ZpQuVh7rFE
c58F3P2cPxekb14l4fDpkm+SwA9Hh7NnQEAHIu8AM18cSsP4UPsPwNyncADV
P5YOPuadjgmh0PBpMHYIMHvK9Z7P3WG5/e+JSot0oepcoLQAVL8/lK/nAABY
y0q0
                  "]]], 
                Opacity[0]], "GeoBubbleChartPlaceholder"]}, 
             Method -> {"ChartDefaultStyle" -> {
                 Hue[0.125], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 RGBColor[0.647624, 0.37816, 0.614037], 
                 RGBColor[0.571589, 0.586483, 0.], 
                 RGBColor[0.915, 0.3325, 0.2125], 
                 RGBColor[
                 0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                 RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                 RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
               "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
               Directive[
                 EdgeForm[{
                   GrayLevel[0, 0.3]}], 
                 Opacity[0.7], 
                 Hue[0.125]], 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "VectorMapRemoveLabels" -> 
               True}, GeoBackground -> None, {
             GeoBackground -> GeoStyling["GeoPlotMap"], GeoRange -> {
                Entity["Country", "Austria"], 
                Entity["Country", "Belgium"], 
                Entity["Country", "Bulgaria"], 
                Entity["Country", "Croatia"], 
                Entity["Country", "Cyprus"], 
                Entity["Country", "CzechRepublic"], 
                Entity["Country", "Denmark"], 
                Entity["Country", "Estonia"], 
                Entity["Country", "Finland"], 
                Entity["Country", "France"], 
                Entity["Country", "Germany"], 
                Entity["Country", "Greece"], 
                Entity["Country", "Hungary"], 
                Entity["Country", "Ireland"], 
                Entity["Country", "Italy"], 
                Entity["Country", "Latvia"], 
                Entity["Country", "Lithuania"], 
                Entity["Country", "Luxembourg"], 
                Entity["Country", "Malta"], 
                Entity["Country", "Netherlands"], 
                Entity["Country", "Poland"], 
                Entity["Country", "Portugal"], 
                Entity["Country", "Romania"], 
                Entity["Country", "Slovakia"], 
                Entity["Country", "Slovenia"], 
                Entity["Country", "Spain"], 
                Entity["Country", "Sweden"]}, MetaInformation -> {}}]], 
          "BasicGeoRange" -> {{34.6289612912529, 
           70.09229389885252}, {-10.479888100000004`, 34.58775370000001}}}, 
        PlotRange -> {{-0.36177773240114935`, 
         0.3617777324011493}, {-0.33878213965547593`, 0.36346392582138437`}}, 
        PlotRangePadding -> None}]], 
    "BasicGeoRange" -> {{34.6289612912529, 
     70.09229389885252}, {-10.479888100000004`, 34.58775370000001}}, 
    "OriginalInput" -> HoldForm[
      GeoGraphics[{
        GeoStyling[], {{
          Directive[
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[0.3]]], 
           Opacity[0.7], 
           Hue[0.125, 1, 1]], {{
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.033534580654642446`, -0.023042239839114936`}, {
                   0.05502860407589101, 0.04986436433411842}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.033534580654642446`, -0.023042239839114936`}, {
                    0.0638690935579423, 0.05787520516549762}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 3.84641392865371*^12], 
             Style[3.84641392865371*^12, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.12165601887251412`, -0.1026646265225738}, {
                   0.04589419694711022, 0.041587188986956625`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.12165601887251412`, -0.1026646265225738}, {
                    0.05473468642916151, 0.049598029818335825`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.63031773145526*^12], 
             Style[2.63031773145526*^12, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.010009576975952755`, -0.16603955144942795`}, {
                   0.03923257797121711, 0.03555073937593434}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.010009576975952755`, -0.16603955144942795`}, {
                    0.0480730674532684, 0.04356158020731354}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.88870944368748*^12], 
             Style[1.88870944368748*^12, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.21407206740739698`, -0.19241057155832875`}, {
                   0.03271213770396991, 0.029642219351394605`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.21407206740739698`, -0.19241057155832875`}, {
                    0.0415526271860212, 0.037653060182773805`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.28148464004358*^12], 
             Style[1.28148464004358*^12, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.06688119474967005, 0.005350330553371363}, {
                   0.027973696122376768`, 0.025348463742499994`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.06688119474967005, 0.005350330553371363}, {
                    0.036814185604428055`, 0.033359304573879194`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 9.13865395789886*^11], 
             Style[9.13865395789886*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.08518692956986448, -0.0016146673773179965`}, {
                   0.023033816245314004`, 0.02087217410925893}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.08518692956986448, -0.0016146673773179965`}, {
                    0.03187430572736529, 0.02888301494063813}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.96624355719671*^11], 
             Style[5.96624355719671*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.024216853966769064`, 0.1685496041210157}, {
                   0.0220450776051205, 0.01997622509122035}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.024216853966769064`, 0.1685496041210157}, {
                    0.030885567087171786`, 0.02798706592259955}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.4122005945925*^11], 
             Style[5.4122005945925*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.08858019799113372, -0.021748615868145527`}, {
                   0.02168775283460926, 0.019652433985819895`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.08858019799113372, -0.021748615868145527`}, {
                    0.03052824231666055, 0.027663274817199095`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.21861292586616*^11], 
             Style[5.21861292586616*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.015108808311825402`, -0.08764183566110482}, {
                   0.019960571178960995`, 0.01808734221591647}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.015108808311825402`, -0.08764183566110482}, {
                    0.028801060661012283`, 0.02609818304729567}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 4.33258467676515*^11], 
             Style[4.33258467676515*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.20752765637016937`, 0.04027822960700464}, {
                   0.01980926389499374, 0.017950234585060593`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.20752765637016937`, 0.04027822960700464}, {
                    0.028649753377045027`, 0.025961075416439792`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 4.25888950992003*^11], 
             Style[4.25888950992003*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.020052805477262264`, 0.06379648938472388}, {
                   0.01830553590077237, 0.016587626141280065`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.020052805477262264`, 0.06379648938472388}, {
                    0.02714602538282366, 0.024598466972659265`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 3.56084867685639*^11], 
             Style[3.56084867685639*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.10641082390580694`, 0.21350769964125604`}, {
                   0.016219673864339645`, 0.01469751487492943}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.10641082390580694`, 0.21350769964125604`}, {
                    0.025060163346390933`, 0.02270835570630863}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.69594831987549*^11], 
             Style[2.69594831987549*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.15629018744077278`, -0.09721631309504258}, {
                   0.01566764802878476, 0.014197294710376562`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.15629018744077278`, -0.09721631309504258}, {
                    0.024508137510836046`, 0.022208135541755762`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.48715551366635*^11], 
             Style[2.48715551366635*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.03885485834575117, -0.044642685422657924`}, {
                   0.015576237219170556`, 0.014114462481734313`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.03885485834575117, -0.044642685422657924`}, {
                    0.024416726701221844`, 0.022125303313113513`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.45339322066759*^11], 
             Style[2.45339322066759*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.26821585490699473`, -0.1880738124836127}, {
                   0.015111725492411021`, 0.013693543536586028`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.26821585490699473`, -0.1880738124836127}, {
                    0.02395221497446231, 0.021704384367965228`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.28539245045341*^11], 
             Style[2.28539245045341*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.13539202398253863`, -0.22375161792299764`}, {
                   0.013940837304435662`, 0.012632539061182696`}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.13539202398253863`, -0.22375161792299764`}, {
                    0.02278132678648695, 0.020643379892561896`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.8883520162591*^11], 
             Style[1.8883520162591*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.0944780247534909, -0.08842418150687024}, {
                   0.012868992672253568`, 0.01166128325438466}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.0944780247534909, -0.08842418150687024}, {
                    0.021709482154304856`, 0.01967212408576386}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.55808436238487*^11], 
             Style[1.55808436238487*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.08570503878770455, -0.0600935542551469}, {
                   0.010973694347261254`, 0.009943851969576423}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.08570503878770455, -0.0600935542551469}, {
                    0.01981418382931254, 0.017954692800955623`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.05172564491569*^11], 
             Style[1.05172564491569*^11, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{-0.06632524568379841, -0.04288315679480305}, {
                   0.009534769203507334, 0.008639964858089558}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{-0.06632524568379841, -0.04288315679480305}, {
                    0.018375258685558622`, 0.016650805689468758`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 7.33531327937076*^10], 
             Style[7.33531327937076*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.1648678486320248, -0.14884791923721347`}, {
                   0.009360589524403301, 0.00848213132543324}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.1648678486320248, -0.14884791923721347`}, {
                    0.01820107900645459, 0.01649297215681244}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 6.98893474334324*^10], 
             Style[6.98893474334324*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.042471563873847096`, -0.12448808410176972`}, {
                   0.008682569840363509, 0.007867741389173247}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.042471563873847096`, -0.12448808410176972`}, {
                    0.017523059322414797`, 0.015878582220552447`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.72037832030259*^10], 
             Style[5.72037832030259*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.11602115387664755`, 0.07323882047525374}, {
                   0.008645508123957577, 0.00783415778368754}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.11602115387664755`, 0.07323882047525374}, {
                    0.017485997606008864`, 0.01584499861506674}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.65469574754912*^10], 
             Style[5.65469574754912*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.033465776046206236`, -0.10829810394802208`}, {
                   0.008475907876883973, 0.007680473919572578}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.033465776046206236`, -0.10829810394802208`}, {
                    0.01731639735893526, 0.015691314750951778`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 5.35896095807099*^10], 
             Style[5.35896095807099*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.12237696311752697`, 0.0921170485889801}, {
                   0.007186797933440209, 0.006512342382055031}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.12237696311752697`, 0.0921170485889801}, {
                    0.016027287415491497`, 0.014523183213434232`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 3.37073208163036*^10], 
             Style[3.37073208163036*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.12462734106996146`, 0.12815467024421667`}, {
                   0.006957408298362382, 0.006304480152400482}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.12462734106996146`, 0.12815467024421667`}, {
                    0.01579789778041367, 0.014315320983779684`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 3.06502854717215*^10], 
             Style[3.06502854717215*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.2987684139548855, -0.26069447140083213`}, {
                   0.006467909355798662, 0.005860918953219385}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.2987684139548855, -0.26069447140083213`}, {
                    0.015308398837849952`, 0.013871759784598587`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 2.46126464877213*^10], 
             Style[2.46126464877213*^10, {}]]}, {
            Directive[
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.3]]], 
             Opacity[0.7], 
             Hue[0.125, 1, 1]], 
            Tooltip[
             StatusArea[
              Charting`DelayedMouseEffect[
               Scale[
                Dynamic[{
                  
                  Disk[{0.03349009908048656, -0.28513594369992823`}, {
                   0.005502860407589107, 0.004986436433411845}], 
                  If[
                   CurrentValue["MouseOver"], {
                    Thickness[0.01], 
                    
                    Circle[{0.03349009908048656, -0.28513594369992823`}, {
                    0.014343349889640396`, 0.012997277264791047`}]}, {}]}], {
                1, 1.103565738994873}], {"Style", 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}]}], 1.4647384607604*^10], 
             Style[
             1.4647384607604*^10, {}]]}}}, {{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{}, {}}}, {
       CoordinatesToolOptions -> {
         "DisplayFunction" -> (
           GeoGraphics`GeoGridPositionDisplay[#, {
            "LambertAzimuthal", "Centering" -> 
             GeoPosition[{52.360627595052705`, 12.053932800000002`}], 
             "LongitudeDetermination" -> 12.053932800000002`}, "ITRF00"]& ), 
          "CopiedValueFunction" -> (
           GeoGraphics`GeoGridPositionCopiedValue[#, {
            "LambertAzimuthal", "Centering" -> 
             GeoPosition[{52.360627595052705`, 12.053932800000002`}], 
             "LongitudeDetermination" -> 12.053932800000002`}, "ITRF00"]& )}, 
        GeoBackground -> GeoStyling["GeoPlotMap"], GeoCenter -> 
        GeoPosition[{52.360627595052705`, 12.053932800000002`}], 
        GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
        GeoGridRange -> {{-0.36177773240114935`, 
         0.3617777324011493}, {-0.33878213965547593`, 0.36346392582138437`}}, 
        GeoGridRangePadding -> None, GeoModel -> "ITRF00", 
        GeoProjection -> {
         "LambertAzimuthal", "Centering" -> 
          GeoPosition[{52.360627595052705`, 12.053932800000002`}]}, 
        GeoServer -> {Automatic}, 
        MetaInformation -> <|
         "GeoMetaInformation" -> <|"Software" -> "Wolfram Language"|>|>, 
        Method -> {"ChartDefaultStyle" -> {
            Hue[0.125], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            RGBColor[0.528488, 0.470624, 0.701351], 
            RGBColor[0.772079, 0.431554, 0.102387], 
            RGBColor[0.647624, 0.37816, 0.614037], 
            RGBColor[0.571589, 0.586483, 0.], 
            RGBColor[0.915, 0.3325, 0.2125], 
            RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
            RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
            RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
          "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
          Directive[
            EdgeForm[{
              GrayLevel[0, 0.3]}], 
            Opacity[0.7], 
            Hue[0.125]], 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultPlotStyle" -> Automatic, "VectorMapRemoveLabels" -> True, 
          "OriginalInput" -> HoldForm[
            GeoGraphics[{
              Annotation[
               Style[
                Point[
                 GeoPosition[CompressedData["
1:eJxTTMoPSmViYGCQBmIQzXV9cYHtKncHzZj+Q19XaDlsOVG2b36WpwMDGAhA
6AZXKN/SQVH+S07YVDcoXx8q7wilHSD0Aw9UeQYfKK0CVecL5VtB6QA0vjuU
ZoCqh7lHCcp3hvLNoHyYehMo3wvKVzhw/wH35JVZrg7Vzfo+y1ZpQuVh7rFE
c58F3P2cPxekb14l4fDpkm+SwA9Hh7NnQEAHIu8AM18cSsP4UPsPwNyncADV
P5YOPuadjgmh0PBpMHYIMHvK9Z7P3WG5/e+JSot0oepcoLQAVL8/lK/nAABY
y0q0
                  "]]], 
                Opacity[0]], "GeoBubbleChartPlaceholder"]}, 
             Method -> {"ChartDefaultStyle" -> {
                 Hue[0.125], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 RGBColor[0.772079, 0.431554, 0.102387], 
                 RGBColor[0.647624, 0.37816, 0.614037], 
                 RGBColor[0.571589, 0.586483, 0.], 
                 RGBColor[0.915, 0.3325, 0.2125], 
                 RGBColor[
                 0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                 RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                 RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]}, 
               "DefaultBoundaryStyle" -> Automatic, "DefaultChartBaseStyle" -> 
               Directive[
                 EdgeForm[{
                   GrayLevel[0, 0.3]}], 
                 Opacity[0.7], 
                 Hue[0.125]], 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "VectorMapRemoveLabels" -> 
               True}, GeoBackground -> None, {
             GeoBackground -> GeoStyling["GeoPlotMap"], GeoRange -> {
                Entity["Country", "Austria"], 
                Entity["Country", "Belgium"], 
                Entity["Country", "Bulgaria"], 
                Entity["Country", "Croatia"], 
                Entity["Country", "Cyprus"], 
                Entity["Country", "CzechRepublic"], 
                Entity["Country", "Denmark"], 
                Entity["Country", "Estonia"], 
                Entity["Country", "Finland"], 
                Entity["Country", "France"], 
                Entity["Country", "Germany"], 
                Entity["Country", "Greece"], 
                Entity["Country", "Hungary"], 
                Entity["Country", "Ireland"], 
                Entity["Country", "Italy"], 
                Entity["Country", "Latvia"], 
                Entity["Country", "Lithuania"], 
                Entity["Country", "Luxembourg"], 
                Entity["Country", "Malta"], 
                Entity["Country", "Netherlands"], 
                Entity["Country", "Poland"], 
                Entity["Country", "Portugal"], 
                Entity["Country", "Romania"], 
                Entity["Country", "Slovakia"], 
                Entity["Country", "Slovenia"], 
                Entity["Country", "Spain"], 
                Entity["Country", "Sweden"]}, MetaInformation -> {}}]], 
          "BasicGeoRange" -> {{34.6289612912529, 
           70.09229389885252}, {-10.479888100000004`, 34.58775370000001}}}, 
        PlotRange -> {{-0.36177773240114935`, 
         0.3617777324011493}, {-0.33878213965547593`, 0.36346392582138437`}}, 
        PlotRangePadding -> None}]], 
    "BasicGeoRange" -> {{29.614977446267197`, 
     75.1062777438382}, {-42.14668737480501, 66.25455297480501}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
      GeoPosition[{52.360627595052705`, 12.053932800000002`}], GeoGridLines -> 
      None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoGridRange -> {{-0.36177773240114935`, 
       0.3617777324011493}, {-0.33878213965547593`, 0.36346392582138437`}}, 
      GeoGridRangePadding -> None, GeoModel -> "ITRF00", 
      GeoProjection -> {
       "LambertAzimuthal", "Centering" -> 
        GeoPosition[{52.360627595052705`, 12.053932800000002`}]}, 
      GeoRange -> {{29.614977446267197`, 
       75.1062777438382}, {-42.14668737480501, 66.25455297480501}}, 
      GeoRangePadding -> Full, GeoResolution -> Automatic, 
      GeoServer -> {Automatic}, GeoZoomLevel -> 4, 
      MetaInformation -> <|"GeoMetaInformation" -> <|"Attribution" -> Row[{
             Hyperlink["Wolfram Knowledgebase", "https://www.wolfram.com/"], 
             ", ", 
             Hyperlink[
             "\[Copyright] OpenStreetMap contributors", 
              "https://www.openstreetmap.org/copyright"]}], "GeoModel" -> 
          "ITRF00", 
          "LonLatBox" -> {{-42.14668737480501, 66.25455297480501}, {
           29.614977446267197`, 75.1062777438382}}, 
          "PlotRange" -> {{-0.36177773240114935`, 
           0.3617777324011493}, {-0.33878213965547593`, 
           0.36346392582138437`}}, 
          "Projection" -> {
           "LambertAzimuthal", "Centering" -> 
            GeoPosition[{52.360627595052705`, 12.053932800000002`}], 
            "LongitudeDetermination" -> 12.053932800000002`}, 
          "Software" -> {
           "Wolfram Language", 
            "Created with the Wolfram Language: www.wolfram.com"}, 
          "TileSources" -> {"Wolfram", "OSM"}|>|>}},
  PlotRange->{{-0.36177773240114935`, 
   0.3617777324011493}, {-0.33878213965547593`, 0.36346392582138437`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.8867597638440857`*^9, 3.886759788336646*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"6ecb9968-86ba-40a0-a42b-075c48e59728"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886759427587902*^9, 
  3.886759428240017*^9}},ExpressionUUID->"23e0fef8-d087-470d-bd50-\
46253be8bcab"],

Cell[BoxData[""], "WolframAlphaShort", "Input",
 CellChangeTimes->{{3.88675886864642*^9, 
  3.8867588782203183`*^9}},ExpressionUUID->"0ccc8309-aa5e-40d5-a44a-\
14589e7bac4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.1 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (August 22, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"064ff713-e8e1-4060-bbdd-6bec6eccca51"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 287, 5, 107, "Title",ExpressionUUID->"fb8fcd06-5c2b-40f9-856a-e73d623a187f"],
Cell[870, 29, 258, 4, 38, "Text",ExpressionUUID->"a51e88ba-1c8b-43b3-a3ec-57a91f3fdd04"],
Cell[CellGroupData[{
Cell[1153, 37, 154, 3, 74, "Section",ExpressionUUID->"2ba2c46c-61d3-43a9-803e-4fa3d0c38e26"],
Cell[1310, 42, 502, 9, 63, "Text",ExpressionUUID->"bd7f36e2-6b14-4e30-b8d6-e5450ddb3ecf"],
Cell[CellGroupData[{
Cell[1837, 55, 211, 4, 59, "Subsection",ExpressionUUID->"0b99bd35-4f2a-49eb-8971-833816194ada"],
Cell[2051, 61, 247, 6, 38, "Text",ExpressionUUID->"6597dbb4-acaf-482a-a5ae-2952be4ce6a5"],
Cell[CellGroupData[{
Cell[2323, 71, 19201, 407, 407, "WolframAlphaShortInput",ExpressionUUID->"3f889d83-4de8-4421-9b2b-5d0e78acc3f9"],
Cell[21527, 480, 132, 3, 35, "Output",ExpressionUUID->"c87b07db-b542-43b4-9d53-f23d97c47e47"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21708, 489, 158, 3, 59, "Subsection",ExpressionUUID->"d94104cc-f8a1-470c-9f0e-b00aeb39cc88"],
Cell[21869, 494, 270, 5, 38, "Text",ExpressionUUID->"f45d1f7b-b3f0-4518-b297-86515d4da031"],
Cell[CellGroupData[{
Cell[22164, 503, 19634, 417, 449, "WolframAlphaShortInput",ExpressionUUID->"c519bb46-143b-4084-ba2f-048d94d819bb"],
Cell[41801, 922, 150, 2, 35, "Output",ExpressionUUID->"72d95a4b-9e0a-44bb-ac92-79f3ea7f197c"]
}, Open  ]],
Cell[41966, 927, 357, 7, 38, "Text",ExpressionUUID->"9930abba-78cf-458d-bd17-19166f4087a6"],
Cell[CellGroupData[{
Cell[42348, 938, 50629, 987, 1102, "WolframAlphaShortInput",ExpressionUUID->"80f44e18-2399-409f-917c-c0d8e2095471"],
Cell[92980, 1927, 7704, 196, 42, "Output",ExpressionUUID->"a55a4fca-1ddf-491b-9585-93e87b275f4a"]
}, Open  ]],
Cell[100699, 2126, 283, 4, 38, "Text",ExpressionUUID->"956fddda-adc3-4d90-ad08-0bd467b00fa6"],
Cell[CellGroupData[{
Cell[101007, 2134, 54570, 1043, 762, "WolframAlphaShortInput",ExpressionUUID->"00531f5f-d606-4f0e-bb5f-c83397580fe1"],
Cell[155580, 3179, 168, 3, 51, "Output",ExpressionUUID->"9b37bac9-f3ac-439e-8592-9548174573df"]
}, Open  ]],
Cell[155763, 3185, 288, 7, 38, "Text",ExpressionUUID->"983235d9-2199-4320-aa41-4140786695b3"],
Cell[CellGroupData[{
Cell[156076, 3196, 30349, 572, 1106, "WolframAlphaShortInput",ExpressionUUID->"74edeb2f-a421-4a2a-bf8b-61197696c8b8"],
Cell[186428, 3770, 182, 2, 35, "Output",ExpressionUUID->"dcd2a53f-db78-4422-add4-ac52883fdbbe"]
}, Open  ]],
Cell[186625, 3775, 289, 7, 38, "Text",ExpressionUUID->"526497e1-2595-4dbd-a188-6ea12cdef481"],
Cell[CellGroupData[{
Cell[186939, 3786, 17285, 329, 93, "WolframAlphaShortInput",ExpressionUUID->"49d320d0-917b-43f6-af20-f732a1bc8d90"],
Cell[204227, 4117, 2093, 53, 62, "Output",ExpressionUUID->"a9b0b7e1-289e-4251-86b0-0149a08478db"]
}, Open  ]],
Cell[206335, 4173, 154, 3, 31, "Input",ExpressionUUID->"19f05d1f-138d-4fbb-96ae-86c700a0c8ff"],
Cell[206492, 4178, 367, 7, 38, "Text",ExpressionUUID->"4263f19c-abbb-4aff-bc8a-2438bca4c932"],
Cell[CellGroupData[{
Cell[206884, 4189, 12832, 318, 74, "WolframAlphaShortInput",ExpressionUUID->"a15f16a1-2cb7-4336-9ae6-702a3bb3e9ab"],
Cell[219719, 4509, 153, 2, 35, "Output",ExpressionUUID->"c3e347e0-01a7-4a6a-9d9c-5d824f795f57"]
}, Open  ]],
Cell[219887, 4514, 19961, 380, 1174, "WolframAlphaShortInput",ExpressionUUID->"1b59581f-078e-4b51-8e4e-81af9ff24170"],
Cell[239851, 4896, 171, 3, 31, "WolframAlphaShortInput",ExpressionUUID->"0c156e65-4676-4d86-b4e9-c62d30a9b4ed"],
Cell[240025, 4901, 253, 4, 31, "Input",ExpressionUUID->"30e310ea-70df-4b7d-9132-484465876d38"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[240327, 4911, 205, 4, 74, "Section",ExpressionUUID->"e0e99eb6-5dc4-427e-9e91-f366f683ed3c"],
Cell[240535, 4917, 202, 3, 38, "Text",ExpressionUUID->"8df4e0ec-64a3-4fd2-8994-edef9ee9baf6"],
Cell[CellGroupData[{
Cell[240762, 4924, 156, 3, 59, "Subsection",ExpressionUUID->"7dac8cc7-f7ea-4b36-a501-caf00a6f3b92"],
Cell[240921, 4929, 224, 4, 38, "Text",ExpressionUUID->"72cbf5bf-0293-4a39-b45b-d89408d5eb1d"],
Cell[CellGroupData[{
Cell[241170, 4937, 16420, 385, 84, "WolframAlphaShortInput",ExpressionUUID->"0acf4703-9d0d-4211-b80d-31355f354ff2"],
Cell[257593, 5324, 305, 7, 46, "Output",ExpressionUUID->"f193325c-6524-4f9f-a325-f2a15ffcb9d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257935, 5336, 36421, 742, 102, "WolframAlphaShortInput",ExpressionUUID->"ea1bbd8f-03f9-4de1-91d3-f87e7895f2e0"],
Cell[294359, 6080, 228, 4, 42, "Output",ExpressionUUID->"35155206-44e8-429d-be49-b8089b900c7a"]
}, Open  ]],
Cell[294602, 6087, 246, 4, 38, "Text",ExpressionUUID->"b73b474a-3ce6-4aa4-b883-67ae18353942"],
Cell[CellGroupData[{
Cell[294873, 6095, 26428, 527, 545, "WolframAlphaShortInput",ExpressionUUID->"305c9c70-be50-457c-80e2-05a8447e0793"],
Cell[321304, 6624, 530, 14, 49, "Output",ExpressionUUID->"75cf7333-1691-4008-8545-319a1cd2e6c5"]
}, Open  ]],
Cell[321849, 6641, 235, 4, 38, "Text",ExpressionUUID->"487958ce-c9c5-4468-8635-db4394b748f9"],
Cell[CellGroupData[{
Cell[322109, 6649, 167947, 3051, 1423, "WolframAlphaShortInput",ExpressionUUID->"078a3c63-5eaf-4cf6-856e-4f82883fcfbd"],
Cell[490059, 9702, 221, 4, 42, "Output",ExpressionUUID->"f74e690a-bac7-417f-aa8c-31425abcf4f5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[490341, 9713, 206, 4, 74, "Section",ExpressionUUID->"522eec24-e21c-4acc-a5ef-fe5403dcf51a"],
Cell[490550, 9719, 290, 6, 38, "Text",ExpressionUUID->"50ffaa19-721a-4675-8edb-3f1bb972a80d"],
Cell[CellGroupData[{
Cell[490865, 9729, 167, 3, 59, "Subsection",ExpressionUUID->"26a06061-9741-4ecf-b5a6-13e5759fe696"],
Cell[491035, 9734, 285, 7, 38, "Text",ExpressionUUID->"52cd3b1c-58e4-4f40-8075-701bfe034922"],
Cell[CellGroupData[{
Cell[491345, 9745, 14989, 357, 84, "WolframAlphaShortInput",ExpressionUUID->"68428b75-4d27-42c5-97f0-0ab088ba649d"],
Cell[506337, 10104, 5894, 139, 81, "Output",ExpressionUUID->"c2aebc76-d08f-4003-a9a6-9b85629730a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[512268, 10248, 15385, 363, 85, "Input",ExpressionUUID->"817ecbdc-ddea-46c8-a259-d288bda86035"],
Cell[527656, 10613, 5892, 139, 81, "Output",ExpressionUUID->"b18a406a-8848-40e6-88de-589e4e966457"]
}, Open  ]],
Cell[533563, 10755, 249, 6, 38, "Text",ExpressionUUID->"1290e2b5-96b2-4cab-acad-87409ae820b2"],
Cell[CellGroupData[{
Cell[533837, 10765, 12950, 320, 74, "WolframAlphaShortInput",ExpressionUUID->"702f42d8-8b56-4a73-ad94-60c2e629101e"],
Cell[546790, 11087, 151, 2, 35, "Output",ExpressionUUID->"ef4c69a8-7ea8-45c1-9363-ddf2c1a3a415"]
}, Open  ]],
Cell[546956, 11092, 280, 6, 38, "Text",ExpressionUUID->"6cd44166-c96b-4bd6-8a65-26aef9c5588e"],
Cell[547239, 11100, 219, 3, 31, "Input",ExpressionUUID->"812076af-f1e8-499e-81b2-5a8417c24ba2"],
Cell[547461, 11105, 201386, 4073, 4259, InheritFromParent,ExpressionUUID->"a124b559-7e5c-49fb-a82f-68bf1fc0e27e"],
Cell[748850, 15180, 355, 7, 38, "Text",ExpressionUUID->"32bd6f13-fdab-472c-8b8a-b5a0d3734f1f"],
Cell[CellGroupData[{
Cell[749230, 15191, 370, 7, 43, InheritFromParent,ExpressionUUID->"c19f2f99-d85c-4166-b7f3-82ebe2d2f935"],
Cell[749603, 15200, 345, 7, 47, "Output",ExpressionUUID->"6afaf77a-ebe3-4b07-9a02-5be69c3821c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[749985, 15212, 368, 8, 43, "Input",ExpressionUUID->"8a7f412c-1428-43a1-a24e-a11e0850ef33"],
Cell[750356, 15222, 164, 2, 35, "Output",ExpressionUUID->"8bdc1d89-9d39-4802-98cb-f878ee3d97e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[750557, 15229, 401, 8, 43, "Input",ExpressionUUID->"dee27d6f-b1b8-44ce-bfd0-aab27c097d12"],
Cell[750961, 15239, 381, 8, 47, "Output",ExpressionUUID->"49807db9-8b47-4753-8a78-069521650851"]
}, Open  ]],
Cell[CellGroupData[{
Cell[751379, 15252, 448, 9, 43, "Input",ExpressionUUID->"01a89be5-79ba-4866-99ed-3f96b7632dde"],
Cell[751830, 15263, 190, 2, 35, "Output",ExpressionUUID->"1c3976ca-39d2-49bd-9c57-3d1f6060125c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[752057, 15270, 719, 16, 43, "Input",ExpressionUUID->"cd28cb29-7517-44a2-a514-11f46aa24293"],
Cell[752779, 15288, 11457, 303, 193, "Output",ExpressionUUID->"4ac8014c-570e-471d-a037-f2b1a168728e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764273, 15596, 205, 4, 31, "Input",ExpressionUUID->"9f347592-b7b1-4e35-b900-e3075db89e1b"],
Cell[764481, 15602, 6090, 140, 81, "Output",ExpressionUUID->"3eb48639-1d0d-4251-8ccc-405ed0a9ca30"]
}, Open  ]],
Cell[770586, 15745, 156, 3, 31, "Input",ExpressionUUID->"7d1e8539-fbfb-413d-9c86-cc3c7cde9a7b"],
Cell[770745, 15750, 177, 3, 31, InheritFromParent,ExpressionUUID->"291225b6-2eae-46db-bcb2-a5976fef65c4"],
Cell[770925, 15755, 156, 3, 31, InheritFromParent,ExpressionUUID->"e41cc48e-17ab-4640-918f-1a14a395ae0d"],
Cell[771084, 15760, 156, 3, 31, "Input",ExpressionUUID->"69bbabb8-477d-4e34-b5c9-c69764118a64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[771277, 15768, 167, 3, 59, "Subsection",ExpressionUUID->"2ebdb9ca-467a-4df5-82a1-97a6c8e4264d"],
Cell[771447, 15773, 215, 4, 38, "Text",ExpressionUUID->"6de16e4b-bba7-4fa2-8d03-c9ceb2d797bc"],
Cell[CellGroupData[{
Cell[771687, 15781, 607, 14, 43, "Input",ExpressionUUID->"2361a50e-3a54-403b-b69c-979f1ed430e7"],
Cell[772297, 15797, 11406, 301, 193, "Output",ExpressionUUID->"4317407a-f53d-431c-8a82-0158ef57397e"]
}, Open  ]],
Cell[783718, 16101, 263, 6, 38, "Text",ExpressionUUID->"f9df6d2d-a853-4d1d-8d29-afd0c49f9224"],
Cell[CellGroupData[{
Cell[784006, 16111, 680, 15, 43, "Input",ExpressionUUID->"73083b65-625f-4c6f-b492-310ab6c73514"],
Cell[784689, 16128, 9111, 220, 147, "Output",ExpressionUUID->"c1e75912-ba8e-45b2-99b8-d9127d826517"]
}, Open  ]],
Cell[793815, 16351, 256, 6, 38, "Text",ExpressionUUID->"c263b8a7-c8c6-41b2-a8ed-56d3cc25afd6"],
Cell[CellGroupData[{
Cell[794096, 16361, 994, 22, 43, "Input",ExpressionUUID->"9c801a10-094e-4960-a8cd-f2aa32738ed6"],
Cell[795093, 16385, 19714, 491, 282, "Output",ExpressionUUID->"af57f358-59fe-4f7e-84ba-d29dac42a15b"]
}, Open  ]],
Cell[814822, 16879, 214, 4, 38, "Text",ExpressionUUID->"0259aba5-14f9-4345-a419-3167ddd68e15"],
Cell[CellGroupData[{
Cell[815061, 16887, 643, 15, 43, "Input",ExpressionUUID->"75fa62ab-57a8-4271-97c9-f6dc798b74b1"],
Cell[815707, 16904, 14689, 355, 266, "Output",ExpressionUUID->"6a1e1f2d-688f-4734-a546-32fa2a8a3d84"]
}, Open  ]],
Cell[830411, 17262, 273, 6, 38, "Text",ExpressionUUID->"88cbd3b9-e0f2-46f1-ac7e-0da06423e561"],
Cell[CellGroupData[{
Cell[830709, 17272, 695, 12, 52, "Input",ExpressionUUID->"df2f99fb-f16c-48cb-b242-9cde327a2d24"],
Cell[831407, 17286, 598107, 10754, 488, "Output",ExpressionUUID->"6ecb9968-86ba-40a0-a42b-075c48e59728"]
}, Open  ]],
Cell[1429529, 28043, 152, 3, 31, InheritFromParent,ExpressionUUID->"23e0fef8-d087-470d-bd50-46253be8bcab"],
Cell[1429684, 28048, 174, 3, 33, "WolframAlphaShort",ExpressionUUID->"0ccc8309-aa5e-40d5-a44a-14589e7bac4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

